{
  "files": [
    {
      "name": "vega/commands/v1/signature.proto",
      "description": "",
      "package": "vega.commands.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Signature",
          "longName": "Signature",
          "fullName": "vega.commands.v1.Signature",
          "description": "Signature definition that allows the network to authenticate external data.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "Hex encoded bytes of the signature.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "algo",
              "description": "Algorithm used to create the signature.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of the algorithm used to create the signature.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/chain_events.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "BuiltinAssetDeposit",
          "longName": "BuiltinAssetDeposit",
          "fullName": "vega.BuiltinAssetDeposit",
          "description": "Deposit for a Vega built-in asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "Vega network internal asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Vega party ID i.e. public key.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount to be deposited. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuiltinAssetEvent",
          "longName": "BuiltinAssetEvent",
          "fullName": "vega.BuiltinAssetEvent",
          "description": "Event related to a Vega built-in asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "deposit",
              "description": "Built-in asset deposit.",
              "label": "",
              "type": "BuiltinAssetDeposit",
              "longType": "BuiltinAssetDeposit",
              "fullType": "vega.BuiltinAssetDeposit",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "Built-in asset withdrawal.",
              "label": "",
              "type": "BuiltinAssetWithdrawal",
              "longType": "BuiltinAssetWithdrawal",
              "fullType": "vega.BuiltinAssetWithdrawal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuiltinAssetWithdrawal",
          "longName": "BuiltinAssetWithdrawal",
          "fullName": "vega.BuiltinAssetWithdrawal",
          "description": "Withdrawal for a Vega built-in asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "Vega network internal asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Vega network party ID i.e. public key.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be withdrawn. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20AssetDelist",
          "longName": "ERC20AssetDelist",
          "fullName": "vega.ERC20AssetDelist",
          "description": "Asset deny-listing for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "Vega network internal asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20AssetLimitsUpdated",
          "longName": "ERC20AssetLimitsUpdated",
          "fullName": "vega.ERC20AssetLimitsUpdated",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "Vega network internal asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source_ethereum_address",
              "description": "Ethereum wallet that initiated the deposit.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lifetime_limits",
              "description": "Updated lifetime limits.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdraw_threshold",
              "description": "Updated withdrawal threshold.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20AssetList",
          "longName": "ERC20AssetList",
          "fullName": "vega.ERC20AssetList",
          "description": "Asset allow-listing for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "Vega network internal asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_source",
              "description": "Ethereum address of the asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Deposit",
          "longName": "ERC20Deposit",
          "fullName": "vega.ERC20Deposit",
          "description": "Asset deposit for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "Vega network internal asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source_ethereum_address",
              "description": "Ethereum wallet that initiated the deposit.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_party_id",
              "description": "Vega party ID i.e. public key that is the target of the deposit.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount to be deposited.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Event",
          "longName": "ERC20Event",
          "fullName": "vega.ERC20Event",
          "description": "Event related to an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "index",
              "description": "Index of the log in the transaction.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "Block in which the transaction was added.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_list",
              "description": "List an ERC20 asset.",
              "label": "",
              "type": "ERC20AssetList",
              "longType": "ERC20AssetList",
              "fullType": "vega.ERC20AssetList",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "asset_delist",
              "description": "De-list an ERC20 asset.",
              "label": "",
              "type": "ERC20AssetDelist",
              "longType": "ERC20AssetDelist",
              "fullType": "vega.ERC20AssetDelist",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "deposit",
              "description": "Deposit ERC20 asset.",
              "label": "",
              "type": "ERC20Deposit",
              "longType": "ERC20Deposit",
              "fullType": "vega.ERC20Deposit",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "Withdraw ERC20 asset.",
              "label": "",
              "type": "ERC20Withdrawal",
              "longType": "ERC20Withdrawal",
              "fullType": "vega.ERC20Withdrawal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "asset_limits_updated",
              "description": "Update an ERC20 asset.",
              "label": "",
              "type": "ERC20AssetLimitsUpdated",
              "longType": "ERC20AssetLimitsUpdated",
              "fullType": "vega.ERC20AssetLimitsUpdated",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "bridge_stopped",
              "description": "Bridge operations has been stopped.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "bridge_resumed",
              "description": "Bridge operations has been resumed.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigEvent",
          "longName": "ERC20MultiSigEvent",
          "fullName": "vega.ERC20MultiSigEvent",
          "description": "Event related to the ERC20 MultiSig",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "index",
              "description": "Index of the log in the transaction",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "Block in which the transaction was added",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer_added",
              "description": "Add a signer to the erc20 bridge",
              "label": "",
              "type": "ERC20SignerAdded",
              "longType": "ERC20SignerAdded",
              "fullType": "vega.ERC20SignerAdded",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "signer_removed",
              "description": "Remove a signer from the erc20 bridge",
              "label": "",
              "type": "ERC20SignerRemoved",
              "longType": "ERC20SignerRemoved",
              "fullType": "vega.ERC20SignerRemoved",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "threshold_set",
              "description": "Threshold set",
              "label": "",
              "type": "ERC20ThresholdSet",
              "longType": "ERC20ThresholdSet",
              "fullType": "vega.ERC20ThresholdSet",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20SignerAdded",
          "longName": "ERC20SignerAdded",
          "fullName": "vega.ERC20SignerAdded",
          "description": "New signer added to the ERC20 bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_signer",
              "description": "Ethereum address of the new signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Nonce created by the Vega network used for this new signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "Time at which the block was produced\nwill be used to inform the core at what time\nthe stake was made unavailable.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20SignerRemoved",
          "longName": "ERC20SignerRemoved",
          "fullName": "vega.ERC20SignerRemoved",
          "description": "Signer removed from the ERC20 bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "old_signer",
              "description": "Ethereum address of the old signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Nonce created by the Vega network used for this old signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "Time at which the block was produced.\nWill be used to inform the core at what time\nthe stake was made unavailable.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20ThresholdSet",
          "longName": "ERC20ThresholdSet",
          "fullName": "vega.ERC20ThresholdSet",
          "description": "Threshold has been updated on the multisig control",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_threshold",
              "description": "New threshold value to set",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Nonce created by the Vega network",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "Time at which the block was produced.\nWill be used to inform the core at what time\nthe stake was made unavailable.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Withdrawal",
          "longName": "ERC20Withdrawal",
          "fullName": "vega.ERC20Withdrawal",
          "description": "Asset withdrawal for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "Vega network internal asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_ethereum_address",
              "description": "Target Ethereum wallet address.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference_nonce",
              "description": "Reference nonce used for the transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthContractCallEvent",
          "longName": "EthContractCallEvent",
          "fullName": "vega.EthContractCallEvent",
          "description": "Result of calling an arbitrary Ethereum contract method",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "spec_id",
              "description": "ID of the data source spec that triggered this contract call.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "Ethereum block height.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "Ethereum block time in Unix seconds.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "result",
              "description": "Result of contract call, packed according to the ABI stored in the associated data source spec.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "Error message if the call failed.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_error",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeDeposited",
          "longName": "StakeDeposited",
          "fullName": "vega.StakeDeposited",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ethereum_address",
              "description": "Ethereum Address of the user depositing stake (hex encode with 0x prefix)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_public_key",
              "description": "Hex encoded public key of the party receiving the stake deposit.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount deposited as an unsigned base 10 integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "Time at which the block was produced.\nWill be used to inform the core at what time\nthe stake started to be available.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeRemoved",
          "longName": "StakeRemoved",
          "fullName": "vega.StakeRemoved",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ethereum_address",
              "description": "Ethereum address of the user removing stake. This should be hex encoded with 0x prefix.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_public_key",
              "description": "Hex encoded public key of the party from which to remove stake.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount removed as a base 10 unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "The time at which the block was produced\nwill be used to inform the core at what time\nthe stake was made unavailable.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeTotalSupply",
          "longName": "StakeTotalSupply",
          "fullName": "vega.StakeTotalSupply",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "token_address",
              "description": "Address of the staking asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_supply",
              "description": "Total supply observed for the token as an unsigned based 10 integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakingEvent",
          "longName": "StakingEvent",
          "fullName": "vega.StakingEvent",
          "description": "Event related to staking on the Vega network.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "index",
              "description": "Index of the log in the transaction.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "Block in which the transaction was added.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_deposited",
              "description": "",
              "label": "",
              "type": "StakeDeposited",
              "longType": "StakeDeposited",
              "fullType": "vega.StakeDeposited",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "stake_removed",
              "description": "",
              "label": "",
              "type": "StakeRemoved",
              "longType": "StakeRemoved",
              "fullType": "vega.StakeRemoved",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "total_supply",
              "description": "",
              "label": "",
              "type": "StakeTotalSupply",
              "longType": "StakeTotalSupply",
              "fullType": "vega.StakeTotalSupply",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/data/v1/data.proto",
      "description": "",
      "package": "vega.data.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Data",
          "longName": "Data",
          "fullName": "vega.data.v1.Data",
          "description": "Data describes valid source data that has been received by the node.\nIt represents both matched and unmatched data.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "signers",
              "description": "",
              "label": "repeated",
              "type": "Signer",
              "longType": "Signer",
              "fullType": "vega.data.v1.Signer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "Data holds all the properties of the data",
              "label": "repeated",
              "type": "Property",
              "longType": "Property",
              "fullType": "vega.data.v1.Property",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "matched_spec_ids",
              "description": "`matched_specs_ids` lists all the specs that matched this data.\nWhen the array is empty, it means no spec matched this data.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "broadcast_at",
              "description": "Timestamp in Unix nanoseconds for when the data was broadcast to the markets\nwith a matching spec. It has no value when the data did not match any spec.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "meta_data",
              "description": "Holds all metadata properties",
              "label": "repeated",
              "type": "Property",
              "longType": "Property",
              "fullType": "vega.data.v1.Property",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "Error message if the data could not be sourced.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_error",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ETHAddress",
          "longName": "ETHAddress",
          "fullName": "vega.data.v1.ETHAddress",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExternalData",
          "longName": "ExternalData",
          "fullName": "vega.data.v1.ExternalData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "",
              "label": "",
              "type": "Data",
              "longType": "Data",
              "fullType": "vega.data.v1.Data",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Property",
          "longName": "Property",
          "fullName": "vega.data.v1.Property",
          "description": "Property describes one property of data spec with a key with its value.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the property.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Value of the property.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PubKey",
          "longName": "PubKey",
          "fullName": "vega.data.v1.PubKey",
          "description": "PubKey is the public key that signed this data.\nDifferent public keys coming from different sources will be further separated.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Signer",
          "longName": "Signer",
          "fullName": "vega.data.v1.Signer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pub_key",
              "description": "List of authorized public keys that signed the data for this\nsource. All the public keys in the data should be contained in these\npublic keys.",
              "label": "",
              "type": "PubKey",
              "longType": "PubKey",
              "fullType": "vega.data.v1.PubKey",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signer",
              "defaultValue": ""
            },
            {
              "name": "eth_address",
              "description": "In case of an open oracle - Ethereum address will be submitted.",
              "label": "",
              "type": "ETHAddress",
              "longType": "ETHAddress",
              "fullType": "vega.data.v1.ETHAddress",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signer",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/data/v1/spec.proto",
      "description": "",
      "package": "vega.data.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Operator",
          "longName": "Condition.Operator",
          "fullName": "vega.data.v1.Condition.Operator",
          "description": "Operator describes the type of comparison.",
          "values": [
            {
              "name": "OPERATOR_UNSPECIFIED",
              "number": "0",
              "description": "The default value"
            },
            {
              "name": "OPERATOR_EQUALS",
              "number": "1",
              "description": "Verify if the property values are strictly equal or not."
            },
            {
              "name": "OPERATOR_GREATER_THAN",
              "number": "2",
              "description": "Verify if the data source data value is greater than the Condition value."
            },
            {
              "name": "OPERATOR_GREATER_THAN_OR_EQUAL",
              "number": "3",
              "description": "Verify if the data source data value is greater than or equal to the Condition\nvalue."
            },
            {
              "name": "OPERATOR_LESS_THAN",
              "number": "4",
              "description": "Verify if the data source data value is less than the Condition value."
            },
            {
              "name": "OPERATOR_LESS_THAN_OR_EQUAL",
              "number": "5",
              "description": "Verify if the data source data value is less or equal to than the Condition\nvalue."
            }
          ]
        },
        {
          "name": "Type",
          "longName": "PropertyKey.Type",
          "fullName": "vega.data.v1.PropertyKey.Type",
          "description": "Type describes the data type of properties that are supported by the data source\nengine.",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "The default value."
            },
            {
              "name": "TYPE_EMPTY",
              "number": "1",
              "description": "Any type."
            },
            {
              "name": "TYPE_INTEGER",
              "number": "2",
              "description": "Integer type."
            },
            {
              "name": "TYPE_STRING",
              "number": "3",
              "description": "String type."
            },
            {
              "name": "TYPE_BOOLEAN",
              "number": "4",
              "description": "Boolean type."
            },
            {
              "name": "TYPE_DECIMAL",
              "number": "5",
              "description": "Any floating point decimal type."
            },
            {
              "name": "TYPE_TIMESTAMP",
              "number": "6",
              "description": "Timestamp date type."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Condition",
          "longName": "Condition",
          "fullName": "vega.data.v1.Condition",
          "description": "Condition describes the condition that must be validated by the network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "operator",
              "description": "Type of comparison to make on the value.",
              "label": "",
              "type": "Operator",
              "longType": "Condition.Operator",
              "fullType": "vega.data.v1.Condition.Operator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Value to be compared with by the operator.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Filter",
          "longName": "Filter",
          "fullName": "vega.data.v1.Filter",
          "description": "Filter describes the conditions under which a data source data is considered of\ninterest or not.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "Data source's data property key targeted by the filter.",
              "label": "",
              "type": "PropertyKey",
              "longType": "PropertyKey",
              "fullType": "vega.data.v1.PropertyKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "conditions",
              "description": "Conditions that should be matched by the data to be\nconsidered of interest.",
              "label": "repeated",
              "type": "Condition",
              "longType": "Condition",
              "fullType": "vega.data.v1.Condition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InternalTimeTrigger",
          "longName": "InternalTimeTrigger",
          "fullName": "vega.data.v1.InternalTimeTrigger",
          "description": "Trigger for an internal time data source.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "initial",
              "description": "Trigger when the vega time is greater or equal to this time, in Unix seconds.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_initial",
              "defaultValue": ""
            },
            {
              "name": "every",
              "description": "Repeat the trigger every n seconds after the initial. If no time for\ninitial was specified, begin repeating immediately.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PropertyKey",
          "longName": "PropertyKey",
          "fullName": "vega.data.v1.PropertyKey",
          "description": "PropertyKey describes the property key contained in data source data.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the property.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Data type of the property.",
              "label": "",
              "type": "Type",
              "longType": "PropertyKey.Type",
              "fullType": "vega.data.v1.PropertyKey.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "number_decimal_places",
              "description": "Optional decimal place to be be applied on the provided value\nvalid only for PropertyType of type DECIMAL and INTEGER",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_number_decimal_places",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/data_source.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Status",
          "longName": "DataSourceSpec.Status",
          "fullName": "vega.DataSourceSpec.Status",
          "description": "Status describe the status of the data source spec",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value."
            },
            {
              "name": "STATUS_ACTIVE",
              "number": "1",
              "description": "STATUS_ACTIVE describes an active data source spec."
            },
            {
              "name": "STATUS_DEACTIVATED",
              "number": "2",
              "description": "STATUS_DEACTIVATED describes a data source spec that is not listening to\ndata anymore."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "DataSourceDefinition",
          "longName": "DataSourceDefinition",
          "fullName": "vega.DataSourceDefinition",
          "description": "Represents the top level object that handles data sources.\nData source definition can be external or internal, with whatever\nnumber of data sources are defined for each type in the child objects below.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "internal",
              "description": "",
              "label": "",
              "type": "DataSourceDefinitionInternal",
              "longType": "DataSourceDefinitionInternal",
              "fullType": "vega.DataSourceDefinitionInternal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source_type",
              "defaultValue": ""
            },
            {
              "name": "external",
              "description": "",
              "label": "",
              "type": "DataSourceDefinitionExternal",
              "longType": "DataSourceDefinitionExternal",
              "fullType": "vega.DataSourceDefinitionExternal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataSourceDefinitionExternal",
          "longName": "DataSourceDefinitionExternal",
          "fullName": "vega.DataSourceDefinitionExternal",
          "description": "DataSourceDefinitionExternal is the top level object used for all external\ndata sources. It contains one of any of the defined `SourceType` variants.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "oracle",
              "description": "",
              "label": "",
              "type": "DataSourceSpecConfiguration",
              "longType": "DataSourceSpecConfiguration",
              "fullType": "vega.DataSourceSpecConfiguration",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source_type",
              "defaultValue": ""
            },
            {
              "name": "eth_oracle",
              "description": "Contains the data specification that is received from Ethereum sources.",
              "label": "",
              "type": "EthCallSpec",
              "longType": "EthCallSpec",
              "fullType": "vega.EthCallSpec",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataSourceDefinitionInternal",
          "longName": "DataSourceDefinitionInternal",
          "fullName": "vega.DataSourceDefinitionInternal",
          "description": "Top level object used for all internal data sources.\nIt contains one of any of the defined source type variants.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "DataSourceSpecConfigurationTime",
              "longType": "DataSourceSpecConfigurationTime",
              "fullType": "vega.DataSourceSpecConfigurationTime",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source_type",
              "defaultValue": ""
            },
            {
              "name": "time_trigger",
              "description": "",
              "label": "",
              "type": "DataSourceSpecConfigurationTimeTrigger",
              "longType": "DataSourceSpecConfigurationTimeTrigger",
              "fullType": "vega.DataSourceSpecConfigurationTimeTrigger",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataSourceSpec",
          "longName": "DataSourceSpec",
          "fullName": "vega.DataSourceSpec",
          "description": "Data source spec describes the data source base that a product or a risk\nmodel wants to get from the data source engine. This message contains\nadditional information used by the API.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Hash generated from the DataSpec data.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Creation date and time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Last Updated timestamp",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "",
              "label": "",
              "type": "DataSourceDefinition",
              "longType": "DataSourceDefinition",
              "fullType": "vega.DataSourceDefinition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status describes the status of the data source spec",
              "label": "",
              "type": "Status",
              "longType": "DataSourceSpec.Status",
              "fullType": "vega.DataSourceSpec.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataSourceSpecConfiguration",
          "longName": "DataSourceSpecConfiguration",
          "fullName": "vega.DataSourceSpecConfiguration",
          "description": "All types of external data sources use the same configuration set for meeting\nrequirements in order for the data to be useful for Vega - valid signatures\nand matching filters.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signers",
              "description": "Signers is the list of authorized signatures that signed the data for this\nsource. All the signatures in the data source data should be contained in\nthis external source. All the signatures in the data should be contained in\nthis list.",
              "label": "repeated",
              "type": "Signer",
              "longType": "data.v1.Signer",
              "fullType": "vega.data.v1.Signer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filters",
              "description": "Filters describes which source data are considered of interest or not for\nthe product (or the risk model).",
              "label": "repeated",
              "type": "Filter",
              "longType": "data.v1.Filter",
              "fullType": "vega.data.v1.Filter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataSourceSpecConfigurationTime",
          "longName": "DataSourceSpecConfigurationTime",
          "fullName": "vega.DataSourceSpecConfigurationTime",
          "description": "Internal data source used for emitting timestamps.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "conditions",
              "description": "Conditions that the timestamps should meet in order to be considered.",
              "label": "repeated",
              "type": "Condition",
              "longType": "data.v1.Condition",
              "fullType": "vega.data.v1.Condition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataSourceSpecConfigurationTimeTrigger",
          "longName": "DataSourceSpecConfigurationTimeTrigger",
          "fullName": "vega.DataSourceSpecConfigurationTimeTrigger",
          "description": "Internal data source used for emitting timestamps automatically using predefined intervals and conditions.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "conditions",
              "description": "Conditions that the timestamps need to meet in order to be considered.",
              "label": "repeated",
              "type": "Condition",
              "longType": "data.v1.Condition",
              "fullType": "vega.data.v1.Condition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "triggers",
              "description": "An internal time trigger",
              "label": "repeated",
              "type": "InternalTimeTrigger",
              "longType": "data.v1.InternalTimeTrigger",
              "fullType": "vega.data.v1.InternalTimeTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthCallSpec",
          "longName": "EthCallSpec",
          "fullName": "vega.EthCallSpec",
          "description": "Specifies a data source that derives its content from calling a read method\non an Ethereum contract.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "Ethereum address of the contract to call.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "abi",
              "description": "The ABI of that contract.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "method",
              "description": "Name of the method on the contract to call.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "args",
              "description": "List of arguments to pass to method call.\nProtobuf 'Value' wraps an arbitrary JSON type that is mapped to an Ethereum\ntype according to the ABI.",
              "label": "repeated",
              "type": "Value",
              "longType": "google.protobuf.Value",
              "fullType": "google.protobuf.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "Conditions for determining when to call the contract method.",
              "label": "",
              "type": "EthCallTrigger",
              "longType": "EthCallTrigger",
              "fullType": "vega.EthCallTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "required_confirmations",
              "description": "Number of confirmations required before the query is considered verified",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filters",
              "description": "Filters the data returned from the contract method",
              "label": "repeated",
              "type": "Filter",
              "longType": "data.v1.Filter",
              "fullType": "vega.data.v1.Filter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "normalisers",
              "description": "Normalisers are used to convert the data returned from the contract method\ninto a standard format. The key of the map is the name of the property,\nwhich identifies the specific piece of data to other parts of the data\nsourcing framework, for example filters. The value is a JSONPath expression\nfor expressing where in the contract call result the required data is\nlocated, for example $[0] indicates the first result. $[1].price would look\nin the second result returned from the contract for a structure with a key\ncalled 'price' and use that if it exists.",
              "label": "repeated",
              "type": "Normaliser",
              "longType": "Normaliser",
              "fullType": "vega.Normaliser",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthCallTrigger",
          "longName": "EthCallTrigger",
          "fullName": "vega.EthCallTrigger",
          "description": "Determines when the contract method should be called.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "time_trigger",
              "description": "",
              "label": "",
              "type": "EthTimeTrigger",
              "longType": "EthTimeTrigger",
              "fullType": "vega.EthTimeTrigger",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "trigger",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthTimeTrigger",
          "longName": "EthTimeTrigger",
          "fullName": "vega.EthTimeTrigger",
          "description": "Trigger for an Ethereum call based on the Ethereum block timestamp. Can be\none-off or repeating.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "initial",
              "description": "Trigger when the Ethereum time is greater or equal to this time, in Unix\nseconds.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_initial",
              "defaultValue": ""
            },
            {
              "name": "every",
              "description": "Repeat the call every n seconds after the initial call. If no time for\ninitial call was specified, begin repeating immediately.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_every",
              "defaultValue": ""
            },
            {
              "name": "until",
              "description": "If repeating, stop once Ethereum time is greater than this time, in Unix\nseconds. If not set, then repeat indefinitely.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_until",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExternalDataSourceSpec",
          "longName": "ExternalDataSourceSpec",
          "fullName": "vega.ExternalDataSourceSpec",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "spec",
              "description": "",
              "label": "",
              "type": "DataSourceSpec",
              "longType": "DataSourceSpec",
              "fullType": "vega.DataSourceSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Normaliser",
          "longName": "Normaliser",
          "fullName": "vega.Normaliser",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expression",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/markets.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "State",
          "longName": "Market.State",
          "fullName": "vega.Market.State",
          "description": "Current state of the market",
          "values": [
            {
              "name": "STATE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, invalid"
            },
            {
              "name": "STATE_PROPOSED",
              "number": "1",
              "description": "Governance proposal valid and accepted"
            },
            {
              "name": "STATE_REJECTED",
              "number": "2",
              "description": "Outcome of governance votes is to reject the market"
            },
            {
              "name": "STATE_PENDING",
              "number": "3",
              "description": "Governance vote passes/wins"
            },
            {
              "name": "STATE_CANCELLED",
              "number": "4",
              "description": "Market triggers cancellation condition or governance\nvotes to close before market becomes Active"
            },
            {
              "name": "STATE_ACTIVE",
              "number": "5",
              "description": "Enactment date reached and usual auction exit checks pass"
            },
            {
              "name": "STATE_SUSPENDED",
              "number": "6",
              "description": "Price monitoring or liquidity monitoring trigger"
            },
            {
              "name": "STATE_CLOSED",
              "number": "7",
              "description": "Governance vote to close (Not currently implemented)"
            },
            {
              "name": "STATE_TRADING_TERMINATED",
              "number": "8",
              "description": "Defined by the product (i.e. from a product parameter,\nspecified in market definition, giving close date/time)"
            },
            {
              "name": "STATE_SETTLED",
              "number": "9",
              "description": "Settlement triggered and completed as defined by product"
            },
            {
              "name": "STATE_SUSPENDED_VIA_GOVERNANCE",
              "number": "10",
              "description": "Market has been suspended via governance"
            }
          ]
        },
        {
          "name": "TradingMode",
          "longName": "Market.TradingMode",
          "fullName": "vega.Market.TradingMode",
          "description": "Trading mode the market is currently running, also referred to as 'market state'",
          "values": [
            {
              "name": "TRADING_MODE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, this is invalid"
            },
            {
              "name": "TRADING_MODE_CONTINUOUS",
              "number": "1",
              "description": "Normal trading"
            },
            {
              "name": "TRADING_MODE_BATCH_AUCTION",
              "number": "2",
              "description": "Auction trading (FBA)"
            },
            {
              "name": "TRADING_MODE_OPENING_AUCTION",
              "number": "3",
              "description": "Opening auction"
            },
            {
              "name": "TRADING_MODE_MONITORING_AUCTION",
              "number": "4",
              "description": "Auction triggered by monitoring"
            },
            {
              "name": "TRADING_MODE_NO_TRADING",
              "number": "5",
              "description": "No trading is allowed"
            },
            {
              "name": "TRADING_MODE_SUSPENDED_VIA_GOVERNANCE",
              "number": "6",
              "description": "Special auction mode triggered via governance"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AuctionDuration",
          "longName": "AuctionDuration",
          "fullName": "vega.AuctionDuration",
          "description": "Auction duration is used to configure 3 auction periods:\n1. `duration \u003e 0`, `volume == 0`:\n  The auction will last for at least N seconds\n2. `duration == 0`, `volume \u003e 0`:\n  The auction will end once the given volume will match at uncrossing\n3. `duration \u003e 0`, `volume \u003e 0`:\n  The auction will take at least N seconds, but can end sooner if the market can trade a certain volume",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "duration",
              "description": "Duration of the auction in seconds.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Target uncrossing trading volume.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataSourceSpecToFutureBinding",
          "longName": "DataSourceSpecToFutureBinding",
          "fullName": "vega.DataSourceSpecToFutureBinding",
          "description": "DataSourceSpecToFutureBinding describes which property of the data source data is to be\nused as settlement data and which to use as the trading terminated trigger",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_data_property",
              "description": "Name of the property in the source data that should be used as settlement data.\nIf it is set to \"prices.BTC.value\", then the Future will use the value of\nthis property as settlement data.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trading_termination_property",
              "description": "Name of the property in the data source data that signals termination of trading.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataSourceSpecToPerpetualBinding",
          "longName": "DataSourceSpecToPerpetualBinding",
          "fullName": "vega.DataSourceSpecToPerpetualBinding",
          "description": "Describes which property of the data source data is to be\nused as settlement data and which to use as the trading terminated trigger",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_data_property",
              "description": "Name of the property in the source data that should be used as settlement data.\nIf it is set to \"prices.BTC.value\", then the perpetual market will use the value of\nthis property as settlement data.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "settlement_schedule_property",
              "description": "Name of the property in the source data that should be used as settlement data.\nIf it is set to \"prices.BTC.value\", then the perpetual market will use the value of\nthis property as settlement data.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeeFactors",
          "longName": "FeeFactors",
          "fullName": "vega.FeeFactors",
          "description": "Fee factors definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maker_fee",
              "description": "Market maker fee charged network wide.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "infrastructure_fee",
              "description": "Infrastructure fee charged network wide for staking and governance.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_fee",
              "description": "Liquidity fee applied per market for market making.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Fees",
          "longName": "Fees",
          "fullName": "vega.Fees",
          "description": "Fees definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "factors",
              "description": "Fee factors.",
              "label": "",
              "type": "FeeFactors",
              "longType": "FeeFactors",
              "fullType": "vega.FeeFactors",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Future",
          "longName": "Future",
          "fullName": "vega.Future",
          "description": "Future product definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_asset",
              "description": "Underlying asset for the future.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quote_name",
              "description": "Quote name of the instrument.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_settlement_data",
              "description": "Data source specification that describes the settlement data source filter.",
              "label": "",
              "type": "DataSourceSpec",
              "longType": "DataSourceSpec",
              "fullType": "vega.DataSourceSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_trading_termination",
              "description": "Data source specification that describes the trading termination data source filter.",
              "label": "",
              "type": "DataSourceSpec",
              "longType": "DataSourceSpec",
              "fullType": "vega.DataSourceSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_binding",
              "description": "Binding between the data spec and the data source.",
              "label": "",
              "type": "DataSourceSpecToFutureBinding",
              "longType": "DataSourceSpecToFutureBinding",
              "fullType": "vega.DataSourceSpecToFutureBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Instrument",
          "longName": "Instrument",
          "fullName": "vega.Instrument",
          "description": "Instrument definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique instrument ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Code for the instrument.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the instrument.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Collection of instrument meta-data.",
              "label": "",
              "type": "InstrumentMetadata",
              "longType": "InstrumentMetadata",
              "fullType": "vega.InstrumentMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "future",
              "description": "Future.",
              "label": "",
              "type": "Future",
              "longType": "Future",
              "fullType": "vega.Future",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            },
            {
              "name": "spot",
              "description": "Spot.",
              "label": "",
              "type": "Spot",
              "longType": "Spot",
              "fullType": "vega.Spot",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            },
            {
              "name": "perpetual",
              "description": "Perpetual.",
              "label": "",
              "type": "Perpetual",
              "longType": "Perpetual",
              "fullType": "vega.Perpetual",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InstrumentMetadata",
          "longName": "InstrumentMetadata",
          "fullName": "vega.InstrumentMetadata",
          "description": "Instrument metadata definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tags",
              "description": "List of 0 or more tags.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityMonitoringParameters",
          "longName": "LiquidityMonitoringParameters",
          "fullName": "vega.LiquidityMonitoringParameters",
          "description": "LiquidityMonitoringParameters contains settings used for liquidity monitoring",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "target_stake_parameters",
              "description": "Specifies parameters related to target stake calculation.",
              "label": "",
              "type": "TargetStakeParameters",
              "longType": "TargetStakeParameters",
              "fullType": "vega.TargetStakeParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "triggering_ratio",
              "description": "Specifies the triggering ratio for entering liquidity auction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_extension",
              "description": "Specifies by how many seconds an auction should be extended if leaving the auction were to trigger a liquidity auction.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquiditySLAParameters",
          "longName": "LiquiditySLAParameters",
          "fullName": "vega.LiquiditySLAParameters",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price_range",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commitment_min_time_fraction",
              "description": "Specifies the minimum fraction of time LPs must spend \"on the book\" providing their committed liquidity.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "performance_hysteresis_epochs",
              "description": "Specifies the number of liquidity epochs over which past performance will continue to affect rewards.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sla_competition_factor",
              "description": "Specifies the maximum fraction of their accrued fees an LP that meets the SLA implied by market.liquidity.commitmentMinTimeFraction will lose to liquidity providers\nthat achieved a higher SLA performance than them.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LogNormalModelParams",
          "longName": "LogNormalModelParams",
          "fullName": "vega.LogNormalModelParams",
          "description": "Risk model parameters for log normal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mu",
              "description": "Mu parameter, annualised growth rate of the underlying asset.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "r",
              "description": "R parameter, annualised growth rate of the risk-free asset, used for discounting of future cash flows, can be any real number.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sigma",
              "description": "Sigma parameter, annualised volatility of the underlying asset, must be a strictly non-negative real number.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LogNormalRiskModel",
          "longName": "LogNormalRiskModel",
          "fullName": "vega.LogNormalRiskModel",
          "description": "Risk model for log normal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "risk_aversion_parameter",
              "description": "Risk Aversion Parameter.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tau",
              "description": "Tau parameter of the risk model, projection horizon measured as a year fraction used in the expected shortfall\ncalculation to obtain the maintenance margin, must be a strictly non-negative real number.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "params",
              "description": "Risk model parameters for log normal.",
              "label": "",
              "type": "LogNormalModelParams",
              "longType": "LogNormalModelParams",
              "fullType": "vega.LogNormalModelParams",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginCalculator",
          "longName": "MarginCalculator",
          "fullName": "vega.MarginCalculator",
          "description": "Margin Calculator definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "scaling_factors",
              "description": "Scaling factors for margin calculation.",
              "label": "",
              "type": "ScalingFactors",
              "longType": "ScalingFactors",
              "fullType": "vega.ScalingFactors",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Market",
          "longName": "Market",
          "fullName": "vega.Market",
          "description": "Market definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique ID for the market.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tradable_instrument",
              "description": "Tradable instrument configuration.",
              "label": "",
              "type": "TradableInstrument",
              "longType": "TradableInstrument",
              "fullType": "vega.TradableInstrument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimal_places",
              "description": "Number of decimal places that a price must be shifted by in order to get a\ncorrect price denominated in the currency of the market, for example:\n`realPrice = price / 10^decimalPlaces`.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fees",
              "description": "Fees configuration that apply to the market.",
              "label": "",
              "type": "Fees",
              "longType": "Fees",
              "fullType": "vega.Fees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "opening_auction",
              "description": "Auction duration specifies how long the opening auction will run (minimum\nduration and optionally a minimum traded volume).",
              "label": "",
              "type": "AuctionDuration",
              "longType": "AuctionDuration",
              "fullType": "vega.AuctionDuration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_settings",
              "description": "PriceMonitoringSettings for the market.",
              "label": "",
              "type": "PriceMonitoringSettings",
              "longType": "PriceMonitoringSettings",
              "fullType": "vega.PriceMonitoringSettings",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_monitoring_parameters",
              "description": "LiquidityMonitoringParameters for the market.",
              "label": "",
              "type": "LiquidityMonitoringParameters",
              "longType": "LiquidityMonitoringParameters",
              "fullType": "vega.LiquidityMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trading_mode",
              "description": "Current mode of execution of the market.",
              "label": "",
              "type": "TradingMode",
              "longType": "Market.TradingMode",
              "fullType": "vega.Market.TradingMode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "Current state of the market.",
              "label": "",
              "type": "State",
              "longType": "Market.State",
              "fullType": "vega.Market.State",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_timestamps",
              "description": "Timestamps for when the market state changes.",
              "label": "",
              "type": "MarketTimestamps",
              "longType": "MarketTimestamps",
              "fullType": "vega.MarketTimestamps",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "position_decimal_places",
              "description": "The number of decimal places for a position.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lp_price_range",
              "description": "Percentage move up and down from the mid price which specifies the range of\nprice levels over which automated liquidity provisions will be deployed.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linear_slippage_factor",
              "description": "Linear slippage factor is used to cap the slippage component of maintenance margin - it is applied to the slippage volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quadratic_slippage_factor",
              "description": "Quadratic slippage factor is used to cap the slippage component of maintenance margin - it is applied to the square of the slippage volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parent_market_id",
              "description": "ID of the market this market succeeds",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_parent_market_id",
              "defaultValue": ""
            },
            {
              "name": "insurance_pool_fraction",
              "description": "The fraction of the parent market's insurance pool that this market inherits; range 0 through 1.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_insurance_pool_fraction",
              "defaultValue": ""
            },
            {
              "name": "successor_market_id",
              "description": "ID of the market that succeeds this market if it exists. This will be populated by the system when the successor market is enabled.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_successor_market_id",
              "defaultValue": ""
            },
            {
              "name": "liquidity_sla_params",
              "description": "Liquidity SLA parameters for the market.",
              "label": "optional",
              "type": "LiquiditySLAParameters",
              "longType": "LiquiditySLAParameters",
              "fullType": "vega.LiquiditySLAParameters",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_liquidity_sla_params",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketTimestamps",
          "longName": "MarketTimestamps",
          "fullName": "vega.MarketTimestamps",
          "description": "Time stamps for important times about creating, enacting etc the market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposed",
              "description": "Time when the market is first proposed.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending",
              "description": "Time when the market has been voted in and began its opening auction.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open",
              "description": "Time when the market has left the opening auction and is ready to accept trades.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "close",
              "description": "Time when the market closed.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Perpetual",
          "longName": "Perpetual",
          "fullName": "vega.Perpetual",
          "description": "Perpetual product definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_asset",
              "description": "Underlying asset for the perpetual.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quote_name",
              "description": "Quote name of the instrument.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "margin_funding_factor",
              "description": "Controls how much the upcoming funding payment liability contributes to party's margin, in the range [0, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interest_rate",
              "description": "Continuously compounded interest rate used in funding rate calculation, in the range [-1, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "clamp_lower_bound",
              "description": "Lower bound for the clamp function used as part of the funding rate calculation, in the range [-1, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "clamp_upper_bound",
              "description": "Upper bound for the clamp function used as part of the funding rate calculation, in the range [-1, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_settlement_schedule",
              "description": "Data source spec describing the data source for settlement schedule.",
              "label": "",
              "type": "DataSourceSpec",
              "longType": "DataSourceSpec",
              "fullType": "vega.DataSourceSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_settlement_data",
              "description": "Data source spec describing the data source for settlement.",
              "label": "",
              "type": "DataSourceSpec",
              "longType": "DataSourceSpec",
              "fullType": "vega.DataSourceSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_binding",
              "description": "Binding between the data source spec and the settlement data.",
              "label": "",
              "type": "DataSourceSpecToPerpetualBinding",
              "longType": "DataSourceSpecToPerpetualBinding",
              "fullType": "vega.DataSourceSpecToPerpetualBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringParameters",
          "longName": "PriceMonitoringParameters",
          "fullName": "vega.PriceMonitoringParameters",
          "description": "PriceMonitoringParameters contains a collection of triggers to be used for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "triggers",
              "description": "",
              "label": "repeated",
              "type": "PriceMonitoringTrigger",
              "longType": "PriceMonitoringTrigger",
              "fullType": "vega.PriceMonitoringTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringSettings",
          "longName": "PriceMonitoringSettings",
          "fullName": "vega.PriceMonitoringSettings",
          "description": "PriceMonitoringSettings contains the settings for price monitoring",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parameters",
              "description": "Specifies price monitoring parameters to be used for price monitoring purposes.",
              "label": "",
              "type": "PriceMonitoringParameters",
              "longType": "PriceMonitoringParameters",
              "fullType": "vega.PriceMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringTrigger",
          "longName": "PriceMonitoringTrigger",
          "fullName": "vega.PriceMonitoringTrigger",
          "description": "PriceMonitoringTrigger holds together price projection horizon τ, probability level p, and auction extension duration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "horizon",
              "description": "Price monitoring projection horizon τ in seconds.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "probability",
              "description": "Price monitoring probability level p.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_extension",
              "description": "Price monitoring auction extension duration in seconds should the price\nbreach its theoretical level over the specified horizon at the specified\nprobability level.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScalingFactors",
          "longName": "ScalingFactors",
          "fullName": "vega.ScalingFactors",
          "description": "Scaling Factors (for use in margin calculation)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "search_level",
              "description": "Collateral search level. If collateral dips below this value,\nthe system will search for collateral to release.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "initial_margin",
              "description": "Initial margin level. This is the minimum amount of collateral\nrequired to open a position in a market that requires margin.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral_release",
              "description": "Collateral release level. If a trader has collateral above this level,\nthe system will release collateral to a trader's general collateral account\nfor the asset.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimpleModelParams",
          "longName": "SimpleModelParams",
          "fullName": "vega.SimpleModelParams",
          "description": "Risk model parameters for simple modelling",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "factor_long",
              "description": "Pre-defined risk factor value for long.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "factor_short",
              "description": "Pre-defined risk factor value for short.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_move_up",
              "description": "Pre-defined maximum price move up that the model considers as valid.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_move_down",
              "description": "Pre-defined minimum price move down that the model considers as valid.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "probability_of_trading",
              "description": "Pre-defined constant probability of trading.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimpleRiskModel",
          "longName": "SimpleRiskModel",
          "fullName": "vega.SimpleRiskModel",
          "description": "Risk model for simple modelling",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "Risk model params for simple modelling.",
              "label": "",
              "type": "SimpleModelParams",
              "longType": "SimpleModelParams",
              "fullType": "vega.SimpleModelParams",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Spot",
          "longName": "Spot",
          "fullName": "vega.Spot",
          "description": "Spot product definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "base_asset",
              "description": "Asset ID of the underlying base asset for the spot product.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quote_asset",
              "description": "Asset ID of the underlying quote asset for the spot product.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the instrument.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TargetStakeParameters",
          "longName": "TargetStakeParameters",
          "fullName": "vega.TargetStakeParameters",
          "description": "TargetStakeParameters contains parameters used in target stake calculation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "time_window",
              "description": "Specifies length of time window expressed in seconds for target stake calculation.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scaling_factor",
              "description": "Specifies scaling factors used in target stake calculation.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradableInstrument",
          "longName": "TradableInstrument",
          "fullName": "vega.TradableInstrument",
          "description": "Tradable Instrument definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "instrument",
              "description": "Details for the underlying instrument.",
              "label": "",
              "type": "Instrument",
              "longType": "Instrument",
              "fullType": "vega.Instrument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "margin_calculator",
              "description": "Margin calculator for the instrument.",
              "label": "",
              "type": "MarginCalculator",
              "longType": "MarginCalculator",
              "fullType": "vega.MarginCalculator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_normal_risk_model",
              "description": "Log normal.",
              "label": "",
              "type": "LogNormalRiskModel",
              "longType": "LogNormalRiskModel",
              "fullType": "vega.LogNormalRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_model",
              "defaultValue": ""
            },
            {
              "name": "simple_risk_model",
              "description": "Simple.",
              "label": "",
              "type": "SimpleRiskModel",
              "longType": "SimpleRiskModel",
              "fullType": "vega.SimpleRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_model",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/vega.proto",
      "description": "",
      "package": "vega",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "AccountType",
          "longName": "AccountType",
          "fullName": "vega.AccountType",
          "description": "Various collateral/account types as used by Vega",
          "values": [
            {
              "name": "ACCOUNT_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "ACCOUNT_TYPE_INSURANCE",
              "number": "1",
              "description": "Insurance pool accounts contain insurance pool funds for a market"
            },
            {
              "name": "ACCOUNT_TYPE_SETTLEMENT",
              "number": "2",
              "description": "Settlement accounts exist only during settlement or mark-to-market"
            },
            {
              "name": "ACCOUNT_TYPE_MARGIN",
              "number": "3",
              "description": "Margin accounts contain funds set aside for the margin needed to support a party's open positions.\nEach party will have a margin account for each market they have traded in.\nRequired initial margin is allocated to each market from user's general account.\nCollateral in the margin account can't be withdrawn or used as margin on another market until\nit is released back to the general account.\nVega protocol uses an internal accounting system to segregate funds held as\nmargin from other funds to ensure they are never lost or 'double spent'\n\nMargin account funds will vary as margin requirements on positions change"
            },
            {
              "name": "ACCOUNT_TYPE_GENERAL",
              "number": "4",
              "description": "General accounts contain the collateral for a party that is not otherwise allocated. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements"
            },
            {
              "name": "ACCOUNT_TYPE_FEES_INFRASTRUCTURE",
              "number": "5",
              "description": "Infrastructure accounts contain fees earned by providing infrastructure on Vega"
            },
            {
              "name": "ACCOUNT_TYPE_FEES_LIQUIDITY",
              "number": "6",
              "description": "Liquidity accounts contain fees earned by providing liquidity on Vega markets"
            },
            {
              "name": "ACCOUNT_TYPE_FEES_MAKER",
              "number": "7",
              "description": "This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place"
            },
            {
              "name": "ACCOUNT_TYPE_BOND",
              "number": "9",
              "description": "This account is created to maintain liquidity providers funds commitments"
            },
            {
              "name": "ACCOUNT_TYPE_EXTERNAL",
              "number": "10",
              "description": "External account represents an external source (deposit/withdrawal)"
            },
            {
              "name": "ACCOUNT_TYPE_GLOBAL_INSURANCE",
              "number": "11",
              "description": "Global insurance account for the asset"
            },
            {
              "name": "ACCOUNT_TYPE_GLOBAL_REWARD",
              "number": "12",
              "description": "Global reward account for the asset"
            },
            {
              "name": "ACCOUNT_TYPE_PENDING_TRANSFERS",
              "number": "13",
              "description": "Per asset account used to store pending transfers (if any)"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES",
              "number": "14",
              "description": "Per asset reward account for fees paid to makers"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES",
              "number": "15",
              "description": "Per asset reward account for fees received by makers"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES",
              "number": "16",
              "description": "Per asset reward account for fees received by liquidity providers"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS",
              "number": "17",
              "description": "Per asset reward account for market proposers when the market goes above some trading threshold"
            },
            {
              "name": "ACCOUNT_TYPE_HOLDING",
              "number": "18",
              "description": "Per asset account for holding in-flight unfilled orders' funds"
            },
            {
              "name": "ACCOUNT_TYPE_LP_LIQUIDITY_FEES",
              "number": "19",
              "description": "Network controlled liquidity provider's account, per market, to hold accrued liquidity fees."
            },
            {
              "name": "ACCOUNT_TYPE_LIQUIDITY_FEES_BONUS_DISTRIBUTION",
              "number": "20",
              "description": "Network controlled liquidity fees bonus distribution account, per market."
            },
            {
              "name": "ACCOUNT_TYPE_NETWORK_TREASURY",
              "number": "21",
              "description": "Network controlled treasury"
            },
            {
              "name": "ACCOUNT_TYPE_VESTING_REWARDS",
              "number": "22",
              "description": "Account holding user's rewards for the vesting period"
            },
            {
              "name": "ACCOUNT_TYPE_VESTED_REWARDS",
              "number": "23",
              "description": "Account holding user's rewards after the vesting period"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_AVERAGE_POSITION",
              "number": "24",
              "description": "Per asset market reward account given for average position"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_RELATIVE_RETURN",
              "number": "25",
              "description": "Per asset market reward account given for relative return"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_RETURN_VOLATILITY",
              "number": "26",
              "description": "Per asset market reward account given for return volatility"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_VALIDATOR_RANKING",
              "number": "27",
              "description": "Per asset market reward account given to validators by their ranking"
            },
            {
              "name": "ACCOUNT_TYPE_PENDING_FEE_REFERRAL_REWARD",
              "number": "28",
              "description": "Per asset account for pending fee referral reward payouts"
            }
          ]
        },
        {
          "name": "AuctionTrigger",
          "longName": "AuctionTrigger",
          "fullName": "vega.AuctionTrigger",
          "description": "Auction triggers indicate what condition triggered an auction (if market is in auction mode)",
          "values": [
            {
              "name": "AUCTION_TRIGGER_UNSPECIFIED",
              "number": "0",
              "description": "Default value for AuctionTrigger, no auction triggered"
            },
            {
              "name": "AUCTION_TRIGGER_BATCH",
              "number": "1",
              "description": "Batch auction"
            },
            {
              "name": "AUCTION_TRIGGER_OPENING",
              "number": "2",
              "description": "Opening auction"
            },
            {
              "name": "AUCTION_TRIGGER_PRICE",
              "number": "3",
              "description": "Price monitoring trigger"
            },
            {
              "name": "AUCTION_TRIGGER_LIQUIDITY",
              "number": "4",
              "description": "Deprecated"
            },
            {
              "name": "AUCTION_TRIGGER_LIQUIDITY_TARGET_NOT_MET",
              "number": "5",
              "description": "Liquidity auction due to not enough committed liquidity"
            },
            {
              "name": "AUCTION_TRIGGER_UNABLE_TO_DEPLOY_LP_ORDERS",
              "number": "6",
              "description": "Deprecated",
              "options": {
                "deprecated": true
              }
            },
            {
              "name": "AUCTION_TRIGGER_GOVERNANCE_SUSPENSION",
              "number": "7",
              "description": "Market is suspended and put into auction via governance"
            }
          ]
        },
        {
          "name": "ChainStatus",
          "longName": "ChainStatus",
          "fullName": "vega.ChainStatus",
          "description": "Vega blockchain status as reported by the node the caller is connected to",
          "values": [
            {
              "name": "CHAIN_STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "CHAIN_STATUS_DISCONNECTED",
              "number": "1",
              "description": "Blockchain is disconnected"
            },
            {
              "name": "CHAIN_STATUS_REPLAYING",
              "number": "2",
              "description": "Blockchain is replaying historic transactions"
            },
            {
              "name": "CHAIN_STATUS_CONNECTED",
              "number": "3",
              "description": "Blockchain is connected and receiving transactions"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Deposit.Status",
          "fullName": "vega.Deposit.Status",
          "description": "Status of the deposit",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_OPEN",
              "number": "1",
              "description": "Deposit is being processed by the network"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "2",
              "description": "Deposit has been cancelled by the network"
            },
            {
              "name": "STATUS_FINALIZED",
              "number": "3",
              "description": "Deposit has been finalised and accounts have been updated"
            }
          ]
        },
        {
          "name": "DispatchMetric",
          "longName": "DispatchMetric",
          "fullName": "vega.DispatchMetric",
          "description": "",
          "values": [
            {
              "name": "DISPATCH_METRIC_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "DISPATCH_METRIC_MAKER_FEES_PAID",
              "number": "1",
              "description": "Dispatch metric that uses the total maker fees paid in the market"
            },
            {
              "name": "DISPATCH_METRIC_MAKER_FEES_RECEIVED",
              "number": "2",
              "description": "Dispatch metric that uses the total maker fees received in the market"
            },
            {
              "name": "DISPATCH_METRIC_LP_FEES_RECEIVED",
              "number": "3",
              "description": "Dispatch metric that uses the total LP fees received in the market"
            },
            {
              "name": "DISPATCH_METRIC_MARKET_VALUE",
              "number": "4",
              "description": "Dispatch metric that uses total value of the market if above the required threshold and not paid given proposer bonus yet"
            },
            {
              "name": "DISPATCH_METRIC_AVERAGE_POSITION",
              "number": "5",
              "description": "Dispatch metric that uses the time weighted average position"
            },
            {
              "name": "DISPATCH_METRIC_RELATIVE_RETURN",
              "number": "6",
              "description": "Dispatch metric that uses the relative PNL of the party in the market"
            },
            {
              "name": "DISPATCH_METRIC_RETURN_VOLATILITY",
              "number": "7",
              "description": "Dispatch metric that uses return volatility of the party in the market"
            },
            {
              "name": "DISPATCH_METRIC_VALIDATOR_RANKING",
              "number": "8",
              "description": "Dispatch metric that uses the validator ranking of the validator as metric"
            }
          ]
        },
        {
          "name": "DistributionStrategy",
          "longName": "DistributionStrategy",
          "fullName": "vega.DistributionStrategy",
          "description": "",
          "values": [
            {
              "name": "DISTRIBUTION_STRATEGY_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "DISTRIBUTION_STRATEGY_PRO_RATA",
              "number": "1",
              "description": "Rewards funded using the pro-rata strategy should be distributed pro-rata by each entity's reward metric, scaled by any active multipliers that party has."
            },
            {
              "name": "DISTRIBUTION_STRATEGY_RANK",
              "number": "2",
              "description": "Rewards funded using the party rank."
            }
          ]
        },
        {
          "name": "EntityScope",
          "longName": "EntityScope",
          "fullName": "vega.EntityScope",
          "description": "",
          "values": [
            {
              "name": "ENTITY_SCOPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "ENTITY_SCOPE_INDIVIDUALS",
              "number": "1",
              "description": "Rewards must be distributed directly to eligible parties."
            },
            {
              "name": "ENTITY_SCOPE_TEAMS",
              "number": "2",
              "description": "Rewards must be distributed to directly eligible teams, and then amongst team members"
            }
          ]
        },
        {
          "name": "EpochAction",
          "longName": "EpochAction",
          "fullName": "vega.EpochAction",
          "description": "What epoch action has occurred",
          "values": [
            {
              "name": "EPOCH_ACTION_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "EPOCH_ACTION_START",
              "number": "1",
              "description": "Epoch update is for a new epoch."
            },
            {
              "name": "EPOCH_ACTION_END",
              "number": "2",
              "description": "Epoch update is for the end of an epoch."
            }
          ]
        },
        {
          "name": "IndividualScope",
          "longName": "IndividualScope",
          "fullName": "vega.IndividualScope",
          "description": "",
          "values": [
            {
              "name": "INDIVIDUAL_SCOPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "INDIVIDUAL_SCOPE_ALL",
              "number": "1",
              "description": "All parties on the network are within the scope of this reward."
            },
            {
              "name": "INDIVIDUAL_SCOPE_IN_TEAM",
              "number": "2",
              "description": "All parties that are part of a team are within the scope of this reward."
            },
            {
              "name": "INDIVIDUAL_SCOPE_NOT_IN_TEAM",
              "number": "3",
              "description": "All parties that are not part of a team are within the scope of this reward."
            }
          ]
        },
        {
          "name": "Interval",
          "longName": "Interval",
          "fullName": "vega.Interval",
          "description": "Represents a set of time intervals that are used when querying for candle-stick data",
          "values": [
            {
              "name": "INTERVAL_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "INTERVAL_BLOCK",
              "number": "-1",
              "description": "Block interval is not a fixed amount of time, rather it is used to indicate grouping of events that occur in a single block. It is usually about a second."
            },
            {
              "name": "INTERVAL_I1M",
              "number": "60",
              "description": "1 minute."
            },
            {
              "name": "INTERVAL_I5M",
              "number": "300",
              "description": "5 minutes."
            },
            {
              "name": "INTERVAL_I15M",
              "number": "900",
              "description": "15 minutes."
            },
            {
              "name": "INTERVAL_I1H",
              "number": "3600",
              "description": "1 hour."
            },
            {
              "name": "INTERVAL_I6H",
              "number": "21600",
              "description": "6 hours."
            },
            {
              "name": "INTERVAL_I1D",
              "number": "86400",
              "description": "1 day."
            }
          ]
        },
        {
          "name": "Status",
          "longName": "LiquidityProvision.Status",
          "fullName": "vega.LiquidityProvision.Status",
          "description": "Status of a liquidity provision.",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Always invalid"
            },
            {
              "name": "STATUS_ACTIVE",
              "number": "1",
              "description": "Liquidity provision is active"
            },
            {
              "name": "STATUS_STOPPED",
              "number": "2",
              "description": "Liquidity provision was stopped by the network"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "3",
              "description": "Liquidity provision was cancelled by the liquidity provider"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "4",
              "description": "Liquidity provision was invalid and got rejected"
            },
            {
              "name": "STATUS_UNDEPLOYED",
              "number": "5",
              "description": "Liquidity provision is valid and accepted by network, but orders aren't deployed"
            },
            {
              "name": "STATUS_PENDING",
              "number": "6",
              "description": "Liquidity provision is valid and accepted by network\nbut has never been deployed. If when it's possible to deploy the orders for the first time\nmargin check fails, then they will be cancelled without any penalties."
            }
          ]
        },
        {
          "name": "NodeStatus",
          "longName": "NodeStatus",
          "fullName": "vega.NodeStatus",
          "description": "Node status type",
          "values": [
            {
              "name": "NODE_STATUS_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "NODE_STATUS_VALIDATOR",
              "number": "1",
              "description": "Node is a validating node"
            },
            {
              "name": "NODE_STATUS_NON_VALIDATOR",
              "number": "2",
              "description": "Node is a non-validating node"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Order.Status",
          "fullName": "vega.Order.Status",
          "description": "Status values for an order",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_ACTIVE",
              "number": "1",
              "description": "Used for active unfilled or partially filled orders"
            },
            {
              "name": "STATUS_EXPIRED",
              "number": "2",
              "description": "Used for expired GTT orders"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "3",
              "description": "Used for orders cancelled by the party that created the order"
            },
            {
              "name": "STATUS_STOPPED",
              "number": "4",
              "description": "Used for unfilled FOK or IOC orders, and for orders that were stopped by the network"
            },
            {
              "name": "STATUS_FILLED",
              "number": "5",
              "description": "Used for closed fully filled orders"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "6",
              "description": "Used for orders when not enough collateral was available to fill the margin requirements"
            },
            {
              "name": "STATUS_PARTIALLY_FILLED",
              "number": "7",
              "description": "Used for closed partially filled IOC orders"
            },
            {
              "name": "STATUS_PARKED",
              "number": "8",
              "description": "Order has been removed from the order book and has been parked,\nthis applies to pegged orders and liquidity orders (orders created from a liquidity provision shape)"
            }
          ]
        },
        {
          "name": "TimeInForce",
          "longName": "Order.TimeInForce",
          "fullName": "vega.Order.TimeInForce",
          "description": "Time In Force for an order",
          "values": [
            {
              "name": "TIME_IN_FORCE_UNSPECIFIED",
              "number": "0",
              "description": "Default value for TimeInForce, can be valid for an amend"
            },
            {
              "name": "TIME_IN_FORCE_GTC",
              "number": "1",
              "description": "Good until cancelled, the order trades any amount and as much as possible\nand remains on the book until it either trades completely or is cancelled"
            },
            {
              "name": "TIME_IN_FORCE_GTT",
              "number": "2",
              "description": "Good until specified time, this order type trades any amount and as much as possible\nand remains on the book until it either trades completely, is cancelled, or expires at a set time\nNOTE: this may in future be multiple types or have sub types for orders that provide different ways of specifying expiry"
            },
            {
              "name": "TIME_IN_FORCE_IOC",
              "number": "3",
              "description": "Immediate or cancel, the order trades any amount and as much as possible\nbut does not remain on the book (whether it trades or not)"
            },
            {
              "name": "TIME_IN_FORCE_FOK",
              "number": "4",
              "description": "Fill or kill, the order either trades completely i.e. remainingSize == 0 after adding,\nor not at all, and does not remain on the book if it doesn't trade"
            },
            {
              "name": "TIME_IN_FORCE_GFA",
              "number": "5",
              "description": "Good for auction, this order is only accepted during an auction period"
            },
            {
              "name": "TIME_IN_FORCE_GFN",
              "number": "6",
              "description": "Good for normal, this order is only accepted during normal trading (that can be continuous trading or frequent batched auctions)"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "Order.Type",
          "fullName": "vega.Order.Type",
          "description": "Type values for an order",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "TYPE_LIMIT",
              "number": "1",
              "description": "Used for Limit orders"
            },
            {
              "name": "TYPE_MARKET",
              "number": "2",
              "description": "Used for Market orders"
            },
            {
              "name": "TYPE_NETWORK",
              "number": "3",
              "description": "Used for orders where the initiating party is the network (with distressed parties)"
            }
          ]
        },
        {
          "name": "OrderError",
          "longName": "OrderError",
          "fullName": "vega.OrderError",
          "description": "OrderError codes are returned in the Order.reason field - If there is an issue\nwith an order during its life-cycle, it will be marked with `status.ORDER_STATUS_REJECTED`",
          "values": [
            {
              "name": "ORDER_ERROR_UNSPECIFIED",
              "number": "0",
              "description": "Default value, no error reported"
            },
            {
              "name": "ORDER_ERROR_INVALID_MARKET_ID",
              "number": "1",
              "description": "Order was submitted for a market that does not exist"
            },
            {
              "name": "ORDER_ERROR_INVALID_ORDER_ID",
              "number": "2",
              "description": "Order was submitted with an invalid ID"
            },
            {
              "name": "ORDER_ERROR_OUT_OF_SEQUENCE",
              "number": "3",
              "description": "Order was amended with a sequence number that was not previous version + 1"
            },
            {
              "name": "ORDER_ERROR_INVALID_REMAINING_SIZE",
              "number": "4",
              "description": "Order was amended with an invalid remaining size (e.g. remaining greater than total size)"
            },
            {
              "name": "ORDER_ERROR_TIME_FAILURE",
              "number": "5",
              "description": "Node was unable to get Vega (blockchain) time"
            },
            {
              "name": "ORDER_ERROR_REMOVAL_FAILURE",
              "number": "6",
              "description": "Failed to remove an order from the book"
            },
            {
              "name": "ORDER_ERROR_INVALID_EXPIRATION_DATETIME",
              "number": "7",
              "description": "Order with `TimeInForce.TIME_IN_FORCE_GTT` was submitted or amended\nwith an expiration that was badly formatted or otherwise invalid"
            },
            {
              "name": "ORDER_ERROR_INVALID_ORDER_REFERENCE",
              "number": "8",
              "description": "Order was submitted or amended with an invalid reference field"
            },
            {
              "name": "ORDER_ERROR_EDIT_NOT_ALLOWED",
              "number": "9",
              "description": "Order amend was submitted for an order field that cannot not be amended (e.g. order ID)"
            },
            {
              "name": "ORDER_ERROR_AMEND_FAILURE",
              "number": "10",
              "description": "Amend failure because amend details do not match original order"
            },
            {
              "name": "ORDER_ERROR_NOT_FOUND",
              "number": "11",
              "description": "Order not found in an order book or store"
            },
            {
              "name": "ORDER_ERROR_INVALID_PARTY_ID",
              "number": "12",
              "description": "Order was submitted with an invalid or missing party ID"
            },
            {
              "name": "ORDER_ERROR_MARKET_CLOSED",
              "number": "13",
              "description": "Order was submitted for a market that has closed"
            },
            {
              "name": "ORDER_ERROR_MARGIN_CHECK_FAILED",
              "number": "14",
              "description": "Order was submitted, but the party did not have enough collateral to cover the order"
            },
            {
              "name": "ORDER_ERROR_MISSING_GENERAL_ACCOUNT",
              "number": "15",
              "description": "Order was submitted, but the party did not have an account for this asset"
            },
            {
              "name": "ORDER_ERROR_INTERNAL_ERROR",
              "number": "16",
              "description": "Unspecified internal error"
            },
            {
              "name": "ORDER_ERROR_INVALID_SIZE",
              "number": "17",
              "description": "Order was submitted with an invalid or missing size (e.g. 0)"
            },
            {
              "name": "ORDER_ERROR_INVALID_PERSISTENCE",
              "number": "18",
              "description": "Order was submitted with an invalid persistence for its type"
            },
            {
              "name": "ORDER_ERROR_INVALID_TYPE",
              "number": "19",
              "description": "Order was submitted with an invalid type field"
            },
            {
              "name": "ORDER_ERROR_SELF_TRADING",
              "number": "20",
              "description": "Order was stopped as it would have traded with another order submitted from the same party"
            },
            {
              "name": "ORDER_ERROR_INSUFFICIENT_FUNDS_TO_PAY_FEES",
              "number": "21",
              "description": "Order was submitted, but the party did not have enough collateral to cover the fees for the order"
            },
            {
              "name": "ORDER_ERROR_INCORRECT_MARKET_TYPE",
              "number": "22",
              "description": "Order was submitted with an incorrect or invalid market type"
            },
            {
              "name": "ORDER_ERROR_INVALID_TIME_IN_FORCE",
              "number": "23",
              "description": "Order was submitted with invalid time in force"
            },
            {
              "name": "ORDER_ERROR_CANNOT_SEND_GFN_ORDER_DURING_AN_AUCTION",
              "number": "24",
              "description": "Good For Normal order has reached the market when it is in auction mode"
            },
            {
              "name": "ORDER_ERROR_CANNOT_SEND_GFA_ORDER_DURING_CONTINUOUS_TRADING",
              "number": "25",
              "description": "Good For Auction order has reached the market when it is in continuous trading mode"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_TO_GTT_WITHOUT_EXPIRYAT",
              "number": "26",
              "description": "Attempt to amend order to GTT without ExpiryAt"
            },
            {
              "name": "ORDER_ERROR_EXPIRYAT_BEFORE_CREATEDAT",
              "number": "27",
              "description": "Attempt to amend ExpiryAt to a value before CreatedAt"
            },
            {
              "name": "ORDER_ERROR_CANNOT_HAVE_GTC_AND_EXPIRYAT",
              "number": "28",
              "description": "Attempt to amend to GTC without an ExpiryAt value"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_TO_FOK_OR_IOC",
              "number": "29",
              "description": "Amending to FOK or IOC is invalid"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_TO_GFA_OR_GFN",
              "number": "30",
              "description": "Amending to GFA or GFN is invalid"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_FROM_GFA_OR_GFN",
              "number": "31",
              "description": "Amending from GFA or GFN is invalid"
            },
            {
              "name": "ORDER_ERROR_CANNOT_SEND_IOC_ORDER_DURING_AUCTION",
              "number": "32",
              "description": "IOC orders are not allowed during auction"
            },
            {
              "name": "ORDER_ERROR_CANNOT_SEND_FOK_ORDER_DURING_AUCTION",
              "number": "33",
              "description": "FOK orders are not allowed during auction"
            },
            {
              "name": "ORDER_ERROR_MUST_BE_LIMIT_ORDER",
              "number": "34",
              "description": "Pegged orders must be LIMIT orders"
            },
            {
              "name": "ORDER_ERROR_MUST_BE_GTT_OR_GTC",
              "number": "35",
              "description": "Pegged orders can only have TIF GTC or GTT"
            },
            {
              "name": "ORDER_ERROR_WITHOUT_REFERENCE_PRICE",
              "number": "36",
              "description": "Pegged order must have a reference price"
            },
            {
              "name": "ORDER_ERROR_BUY_CANNOT_REFERENCE_BEST_ASK_PRICE",
              "number": "37",
              "description": "Buy pegged order cannot reference best ask price"
            },
            {
              "name": "ORDER_ERROR_OFFSET_MUST_BE_GREATER_OR_EQUAL_TO_ZERO",
              "number": "40",
              "description": "Pegged order offset must be \u003e= 0"
            },
            {
              "name": "ORDER_ERROR_SELL_CANNOT_REFERENCE_BEST_BID_PRICE",
              "number": "41",
              "description": "Sell pegged order cannot reference best bid price"
            },
            {
              "name": "ORDER_ERROR_OFFSET_MUST_BE_GREATER_THAN_ZERO",
              "number": "42",
              "description": "Pegged order offset must be \u003e zero"
            },
            {
              "name": "ORDER_ERROR_INSUFFICIENT_ASSET_BALANCE",
              "number": "43",
              "description": "Party has an insufficient balance, or does not have\na general account to submit the order (no deposits made\nfor the required asset)"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_PEGGED_ORDER_DETAILS_ON_NON_PEGGED_ORDER",
              "number": "44",
              "description": "Cannot amend details of a non pegged details"
            },
            {
              "name": "ORDER_ERROR_UNABLE_TO_REPRICE_PEGGED_ORDER",
              "number": "45",
              "description": "Could not re-price a pegged order because a market price is unavailable"
            },
            {
              "name": "ORDER_ERROR_UNABLE_TO_AMEND_PRICE_ON_PEGGED_ORDER",
              "number": "46",
              "description": "It is not possible to amend the price of an existing pegged order"
            },
            {
              "name": "ORDER_ERROR_NON_PERSISTENT_ORDER_OUT_OF_PRICE_BOUNDS",
              "number": "47",
              "description": "FOK, IOC, or GFN order was rejected because it resulted in trades outside the price bounds"
            },
            {
              "name": "ORDER_ERROR_TOO_MANY_PEGGED_ORDERS",
              "number": "48",
              "description": "Unable to submit pegged order, temporarily too many pegged orders across all markets"
            },
            {
              "name": "ORDER_ERROR_POST_ONLY_ORDER_WOULD_TRADE",
              "number": "49",
              "description": "Post order would trade"
            },
            {
              "name": "ORDER_ERROR_REDUCE_ONLY_ORDER_WOULD_NOT_REDUCE_POSITION",
              "number": "50",
              "description": "Post order would trade"
            }
          ]
        },
        {
          "name": "PeggedReference",
          "longName": "PeggedReference",
          "fullName": "vega.PeggedReference",
          "description": "Pegged reference defines which price point a pegged order is linked to - meaning\nthe price for a pegged order is calculated from the value of the reference price point",
          "values": [
            {
              "name": "PEGGED_REFERENCE_UNSPECIFIED",
              "number": "0",
              "description": "Default value for PeggedReference, no reference given"
            },
            {
              "name": "PEGGED_REFERENCE_MID",
              "number": "1",
              "description": "Mid price reference"
            },
            {
              "name": "PEGGED_REFERENCE_BEST_BID",
              "number": "2",
              "description": "Best bid price reference"
            },
            {
              "name": "PEGGED_REFERENCE_BEST_ASK",
              "number": "3",
              "description": "Best ask price reference"
            }
          ]
        },
        {
          "name": "PositionStatus",
          "longName": "PositionStatus",
          "fullName": "vega.PositionStatus",
          "description": "Represents the status of a position",
          "values": [
            {
              "name": "POSITION_STATUS_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "POSITION_STATUS_ORDERS_CLOSED",
              "number": "1",
              "description": ""
            },
            {
              "name": "POSITION_STATUS_CLOSED_OUT",
              "number": "2",
              "description": ""
            },
            {
              "name": "POSITION_STATUS_DISTRESSED",
              "number": "4",
              "description": ""
            }
          ]
        },
        {
          "name": "Side",
          "longName": "Side",
          "fullName": "vega.Side",
          "description": "Side relates to the direction of an order, to Buy, or Sell",
          "values": [
            {
              "name": "SIDE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "SIDE_BUY",
              "number": "1",
              "description": "Buy order"
            },
            {
              "name": "SIDE_SELL",
              "number": "2",
              "description": "Sell order"
            }
          ]
        },
        {
          "name": "ExpiryStrategy",
          "longName": "StopOrder.ExpiryStrategy",
          "fullName": "vega.StopOrder.ExpiryStrategy",
          "description": "",
          "values": [
            {
              "name": "EXPIRY_STRATEGY_UNSPECIFIED",
              "number": "0",
              "description": "Never valid"
            },
            {
              "name": "EXPIRY_STRATEGY_CANCELS",
              "number": "1",
              "description": "Stop order should be cancelled if the expiry time is reached."
            },
            {
              "name": "EXPIRY_STRATEGY_SUBMIT",
              "number": "2",
              "description": "Order should be submitted if the expiry time is reached."
            }
          ]
        },
        {
          "name": "RejectionReason",
          "longName": "StopOrder.RejectionReason",
          "fullName": "vega.StopOrder.RejectionReason",
          "description": "",
          "values": [
            {
              "name": "REJECTION_REASON_UNSPECIFIED",
              "number": "0",
              "description": "Never valid"
            },
            {
              "name": "REJECTION_REASON_TRADING_NOT_ALLOWED",
              "number": "1",
              "description": "Trading is not allowed yet"
            },
            {
              "name": "REJECTION_REASON_EXPIRY_IN_THE_PAST",
              "number": "2",
              "description": "Expiry of the stop order is in the past"
            },
            {
              "name": "REJECTION_REASON_MUST_BE_REDUCE_ONLY",
              "number": "3",
              "description": "Stop orders submission must be reduce only"
            },
            {
              "name": "REJECTION_REASON_MAX_STOP_ORDERS_PER_PARTY_REACHED",
              "number": "4",
              "description": "Party has reached the maximum stop orders allowed for this market"
            },
            {
              "name": "REJECTION_REASON_STOP_ORDER_NOT_ALLOWED_WITHOUT_A_POSITION",
              "number": "5",
              "description": "Stop orders are not allowed if there is no open position"
            },
            {
              "name": "REJECTION_REASON_STOP_ORDER_NOT_CLOSING_THE_POSITION",
              "number": "6",
              "description": "This stop order does not close the position"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "StopOrder.Status",
          "fullName": "vega.StopOrder.Status",
          "description": "",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Never valid"
            },
            {
              "name": "STATUS_PENDING",
              "number": "1",
              "description": "Pending to be executed once the trigger is breached"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "2",
              "description": "Cancelled by the user"
            },
            {
              "name": "STATUS_STOPPED",
              "number": "3",
              "description": "Stopped by the network, e.g: OCO on the other side has been triggered"
            },
            {
              "name": "STATUS_TRIGGERED",
              "number": "4",
              "description": "Stop order has been triggered and generated an order"
            },
            {
              "name": "STATUS_EXPIRED",
              "number": "5",
              "description": "Stop order has expired"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "6",
              "description": "Stop order was rejected at submission"
            }
          ]
        },
        {
          "name": "TriggerDirection",
          "longName": "StopOrder.TriggerDirection",
          "fullName": "vega.StopOrder.TriggerDirection",
          "description": "",
          "values": [
            {
              "name": "TRIGGER_DIRECTION_UNSPECIFIED",
              "number": "0",
              "description": "Never valid"
            },
            {
              "name": "TRIGGER_DIRECTION_RISES_ABOVE",
              "number": "1",
              "description": "Stop order is triggered once the price rises above a certain level"
            },
            {
              "name": "TRIGGER_DIRECTION_FALLS_BELOW",
              "number": "2",
              "description": "Stop order is triggered once the price falls below a certain level"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "Trade.Type",
          "fullName": "vega.Trade.Type",
          "description": "Type values for a trade",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "TYPE_DEFAULT",
              "number": "1",
              "description": "Normal trading between two parties"
            },
            {
              "name": "TYPE_NETWORK_CLOSE_OUT_GOOD",
              "number": "2",
              "description": "Trading initiated by the network with another party on the book,\nwhich helps to zero-out the positions of one or more distressed parties"
            },
            {
              "name": "TYPE_NETWORK_CLOSE_OUT_BAD",
              "number": "3",
              "description": "Trading initiated by the network with another party off the book,\nwith a distressed party in order to zero-out the position of the party"
            }
          ]
        },
        {
          "name": "TransferType",
          "longName": "TransferType",
          "fullName": "vega.TransferType",
          "description": "Transfers can occur between parties on Vega, these are the types that indicate why a transfer took place",
          "values": [
            {
              "name": "TRANSFER_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "TRANSFER_TYPE_LOSS",
              "number": "1",
              "description": "Funds deducted after final settlement loss"
            },
            {
              "name": "TRANSFER_TYPE_WIN",
              "number": "2",
              "description": "Funds added to general account after final settlement gain"
            },
            {
              "name": "TRANSFER_TYPE_MTM_LOSS",
              "number": "4",
              "description": "Funds deducted from margin account after mark to market loss"
            },
            {
              "name": "TRANSFER_TYPE_MTM_WIN",
              "number": "5",
              "description": "Funds added to margin account after mark to market gain"
            },
            {
              "name": "TRANSFER_TYPE_MARGIN_LOW",
              "number": "6",
              "description": "Funds transferred from general account to meet margin requirement"
            },
            {
              "name": "TRANSFER_TYPE_MARGIN_HIGH",
              "number": "7",
              "description": "Excess margin amount returned to general account"
            },
            {
              "name": "TRANSFER_TYPE_MARGIN_CONFISCATED",
              "number": "8",
              "description": "Margin confiscated from margin account to fulfil closeout"
            },
            {
              "name": "TRANSFER_TYPE_MAKER_FEE_PAY",
              "number": "9",
              "description": "Maker fee paid from general account"
            },
            {
              "name": "TRANSFER_TYPE_MAKER_FEE_RECEIVE",
              "number": "10",
              "description": "Maker fee received into general account"
            },
            {
              "name": "TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY",
              "number": "11",
              "description": "Infrastructure fee paid from general account"
            },
            {
              "name": "TRANSFER_TYPE_INFRASTRUCTURE_FEE_DISTRIBUTE",
              "number": "12",
              "description": "Infrastructure fee received into general account"
            },
            {
              "name": "TRANSFER_TYPE_LIQUIDITY_FEE_PAY",
              "number": "13",
              "description": "Liquidity fee paid from general account"
            },
            {
              "name": "TRANSFER_TYPE_LIQUIDITY_FEE_DISTRIBUTE",
              "number": "14",
              "description": "Liquidity fee received into general account"
            },
            {
              "name": "TRANSFER_TYPE_BOND_LOW",
              "number": "15",
              "description": "Bond account funded from general account to meet required bond amount"
            },
            {
              "name": "TRANSFER_TYPE_BOND_HIGH",
              "number": "16",
              "description": "Bond returned to general account after liquidity commitment was reduced"
            },
            {
              "name": "TRANSFER_TYPE_WITHDRAW",
              "number": "18",
              "description": "Funds withdrawn from general account"
            },
            {
              "name": "TRANSFER_TYPE_DEPOSIT",
              "number": "19",
              "description": "Funds deposited to general account"
            },
            {
              "name": "TRANSFER_TYPE_BOND_SLASHING",
              "number": "20",
              "description": "Bond account penalised when liquidity commitment not met"
            },
            {
              "name": "TRANSFER_TYPE_REWARD_PAYOUT",
              "number": "21",
              "description": "Reward payout received"
            },
            {
              "name": "TRANSFER_TYPE_TRANSFER_FUNDS_SEND",
              "number": "22",
              "description": "Internal Vega network instruction for the collateral engine to move funds from a user's general account into the pending transfers pool"
            },
            {
              "name": "TRANSFER_TYPE_TRANSFER_FUNDS_DISTRIBUTE",
              "number": "23",
              "description": "Internal Vega network instruction for the collateral engine to move funds from the pending transfers pool account into the destination account"
            },
            {
              "name": "TRANSFER_TYPE_CLEAR_ACCOUNT",
              "number": "24",
              "description": "Market-related accounts emptied because market has closed"
            },
            {
              "name": "TRANSFER_TYPE_CHECKPOINT_BALANCE_RESTORE",
              "number": "25",
              "description": "Balances restored after network restart"
            },
            {
              "name": "TRANSFER_TYPE_SPOT",
              "number": "26",
              "description": "Spot trade delivery"
            },
            {
              "name": "TRANSFER_TYPE_HOLDING_LOCK",
              "number": "27",
              "description": "An internal instruction to transfer a quantity corresponding to an active spot order from a general account into a party holding account."
            },
            {
              "name": "TRANSFER_TYPE_HOLDING_RELEASE",
              "number": "28",
              "description": "An internal instruction to transfer an excess quantity corresponding to an active spot order from a holding account into a party general account."
            },
            {
              "name": "TRANSFER_TYPE_SUCCESSOR_INSURANCE_FRACTION",
              "number": "29",
              "description": "Insurance pool fraction transfer from parent to successor market."
            },
            {
              "name": "TRANSFER_TYPE_LIQUIDITY_FEE_ALLOCATE",
              "number": "30",
              "description": "Allocates liquidity fee earnings to each liquidity provider's network controlled liquidity fee account."
            },
            {
              "name": "TRANSFER_TYPE_LIQUIDITY_FEE_NET_DISTRIBUTE",
              "number": "31",
              "description": "Distributes net fee earnings from liquidity provider's fee account to their general account."
            },
            {
              "name": "TRANSFER_TYPE_SLA_PENALTY_BOND_APPLY",
              "number": "32",
              "description": "Applies SLA penalty by moving funds from party's bond account to market's insurance pool."
            },
            {
              "name": "TRANSFER_TYPE_SLA_PENALTY_LP_FEE_APPLY",
              "number": "33",
              "description": "Applies SLA penalty by moving funds from the liquidity provider's fee account to market insurance pool."
            },
            {
              "name": "TRANSFER_TYPE_LIQUIDITY_FEE_UNPAID_COLLECT",
              "number": "34",
              "description": "Collects penalties from the liquidity provider's fee account before the fee revenue is paid, and transfers it to the market's bonus distribution account."
            },
            {
              "name": "TRANSFER_TYPE_SLA_PERFORMANCE_BONUS_DISTRIBUTE",
              "number": "35",
              "description": "Distributes performance bonus from market bonus to liquidity provider's general account."
            },
            {
              "name": "TRANSFER_TYPE_PERPETUALS_FUNDING_LOSS",
              "number": "36",
              "description": "Funds deducted from margin account after a perpetuals funding loss."
            },
            {
              "name": "TRANSFER_TYPE_PERPETUALS_FUNDING_WIN",
              "number": "37",
              "description": "Funds added to margin account after a perpetuals funding gain."
            },
            {
              "name": "TRANSFER_TYPE_REWARDS_VESTED",
              "number": "38",
              "description": "Funds moved from the vesting account to the vested account once the vesting period is reached."
            },
            {
              "name": "TRANSFER_TYPE_FEE_REFERRER_REWARD_PAY",
              "number": "39",
              "description": "Fee referrer reward paid from general account."
            },
            {
              "name": "TRANSFER_TYPE_FEE_REFERRER_REWARD_DISTRIBUTE",
              "number": "44",
              "description": "Fee referrer reward received into general account of the referrer."
            }
          ]
        },
        {
          "name": "ValidatorNodeStatus",
          "longName": "ValidatorNodeStatus",
          "fullName": "vega.ValidatorNodeStatus",
          "description": "Validation status of the node",
          "values": [
            {
              "name": "VALIDATOR_NODE_STATUS_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "VALIDATOR_NODE_STATUS_TENDERMINT",
              "number": "1",
              "description": "Node is a tendermint validator"
            },
            {
              "name": "VALIDATOR_NODE_STATUS_ERSATZ",
              "number": "2",
              "description": "Node is an ersatz validator"
            },
            {
              "name": "VALIDATOR_NODE_STATUS_PENDING",
              "number": "3",
              "description": "Node is a pending validator"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Withdrawal.Status",
          "fullName": "vega.Withdrawal.Status",
          "description": "Status of the withdrawal",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_OPEN",
              "number": "1",
              "description": "Withdrawal is open and being processed by the network"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "2",
              "description": "Withdrawal have been cancelled"
            },
            {
              "name": "STATUS_FINALIZED",
              "number": "3",
              "description": "Withdrawal went through and is fully finalised, the funds are removed from the\nVega network and are unlocked on the foreign chain bridge, for example, on the Ethereum network"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Account",
          "longName": "Account",
          "fullName": "vega.Account",
          "description": "Represents an account for an asset on Vega for a particular owner or party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique account ID, used internally by Vega.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "Party that the account belongs to, special values include `network`, which represents the Vega network and is\nmost commonly seen during liquidation of distressed trading positions.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "Balance of the asset, the balance is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places\nand importantly balances cannot be negative.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset ID for the account.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID for the account, if `AccountType.ACCOUNT_TYPE_GENERAL` this will be empty.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Account type related to this account.",
              "label": "",
              "type": "AccountType",
              "longType": "AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AccountDetails",
          "longName": "AccountDetails",
          "fullName": "vega.AccountDetails",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Asset ID of the asset for this account.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of the account.",
              "label": "",
              "type": "AccountType",
              "longType": "AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "Not specified if network account.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Not specified if account is not related to a market.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ActivityStreakBenefitTier",
          "longName": "ActivityStreakBenefitTier",
          "fullName": "vega.ActivityStreakBenefitTier",
          "description": "An activity streak benefit tier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minimum_activity_streak",
              "description": "Number of epochs a party must be active to receive the multiplier.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_multiplier",
              "description": "Reward multiplier applicable to this tier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vesting_multiplier",
              "description": "Vesting bonus applicable to this tier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ActivityStreakBenefitTiers",
          "longName": "ActivityStreakBenefitTiers",
          "fullName": "vega.ActivityStreakBenefitTiers",
          "description": "A list of activity streak benefit tiers",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tiers",
              "description": "Defined benefit tiers ordered by increasing reward multipliers.",
              "label": "repeated",
              "type": "ActivityStreakBenefitTier",
              "longType": "ActivityStreakBenefitTier",
              "fullType": "vega.ActivityStreakBenefitTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuctionIndicativeState",
          "longName": "AuctionIndicativeState",
          "fullName": "vega.AuctionIndicativeState",
          "description": "AuctionIndicativeState is used to emit an event with the indicative price/volume per market during an auction",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for which this state relates to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_price",
              "description": "Indicative uncrossing price is the price at which all trades would occur if the auction uncrossed now.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_volume",
              "description": "Indicative uncrossing volume is the volume available at the indicative crossing price if the auction uncrossed now.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_start",
              "description": "Timestamp at which the auction started.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_end",
              "description": "Timestamp at which the auction is meant to stop.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BenefitTier",
          "longName": "BenefitTier",
          "fullName": "vega.BenefitTier",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minimum_running_notional_taker_volume",
              "description": "Required running notional taker volume in quantum units for parties\nto access this tier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "minimum_epochs",
              "description": "Required number of epochs a party must have been in a referral set to\naccess this tier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referral_reward_factor",
              "description": "Proportion of the referee's taker fees to be rewarded to the referrer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referral_discount_factor",
              "description": "Proportion of the referee's taker fees to be discounted.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Candle",
          "longName": "Candle",
          "fullName": "vega.Candle",
          "description": "Represents the high, low, open, and closing prices for an interval of trading,\nreferred to commonly as a candlestick or candle",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp in Unix nanoseconds for the point in time when the candle was initially created/opened.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "datetime",
              "description": "ISO-8601 datetime with nanosecond precision for when the candle was last updated.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "high",
              "description": "Highest price for trading during the candle interval. This field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "low",
              "description": "Lowest price for trading during the candle interval. This field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open",
              "description": "Open trade price. This field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "close",
              "description": "Closing trade price. This field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Total trading volume during the candle interval.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interval",
              "description": "Time interval for the candle.",
              "label": "",
              "type": "Interval",
              "longType": "Interval",
              "fullType": "vega.Interval",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "notional",
              "description": "Total notional value traded during the candle interval.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Delegation",
          "longName": "Delegation",
          "fullName": "vega.Delegation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "Party which is delegating.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "Node ID to delegate to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount delegated. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch of delegation.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Deposit",
          "longName": "Deposit",
          "fullName": "vega.Deposit",
          "description": "Deposit on to the Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique ID for the deposit.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the deposit.",
              "label": "",
              "type": "Status",
              "longType": "Deposit.Status",
              "fullType": "vega.Deposit.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID of the user initiating the deposit.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Vega asset targeted by this deposit.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount to be deposited. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "Hash of the transaction from the foreign chain.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "credited_timestamp",
              "description": "Timestamp for when the Vega account was updated with the deposit.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_timestamp",
              "description": "Timestamp for when the deposit was created on the Vega network.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DispatchStrategy",
          "longName": "DispatchStrategy",
          "fullName": "vega.DispatchStrategy",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_for_metric",
              "description": "Asset to use for metric.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metric",
              "description": "Metric to apply.",
              "label": "",
              "type": "DispatchMetric",
              "longType": "DispatchMetric",
              "fullType": "vega.DispatchMetric",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "markets",
              "description": "Optional markets in scope.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_scope",
              "description": "Mandatory enum that defines the entities within scope.",
              "label": "",
              "type": "EntityScope",
              "longType": "EntityScope",
              "fullType": "vega.EntityScope",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "individual_scope",
              "description": "Optional enum if the entity scope defined is for individuals, which determines the subset of individuals that are eligible to be rewarded.",
              "label": "",
              "type": "IndividualScope",
              "longType": "IndividualScope",
              "fullType": "vega.IndividualScope",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "team_scope",
              "description": "Optional list applicable if the reward type has a scope of teams, which allows the funder to define a list of team IDs that are eligible to be rewarded from this transfer",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "n_top_performers",
              "description": "The proportion of the top performers in the team for a given metric to be averaged for the metric calculation if the scope is team",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking_requirement",
              "description": "Minimum number of governance (e.g. VEGA) tokens staked for a party to be considered eligible. Defaults to 0",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "notional_time_weighted_average_position_requirement",
              "description": "Minimum notional time-weighted averaged position required for a party to be considered eligible. Defaults to 0",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_length",
              "description": "Number of epochs to evaluate the metric on",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lock_period",
              "description": "Number of epochs after distribution to delay vesting of rewards by",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "distribution_strategy",
              "description": "Controls how the reward is distributed between qualifying parties",
              "label": "",
              "type": "DistributionStrategy",
              "longType": "DistributionStrategy",
              "fullType": "vega.DistributionStrategy",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rank_table",
              "description": "Ordered list, using start rank, defining the rank bands and share ratio for each band. Mandatory for the rank distribution strategy.",
              "label": "repeated",
              "type": "Rank",
              "longType": "Rank",
              "fullType": "vega.Rank",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Epoch",
          "longName": "Epoch",
          "fullName": "vega.Epoch",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seq",
              "description": "Sequence is used as epoch ID.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamps",
              "description": "Timestamps for start/end etc.",
              "label": "",
              "type": "EpochTimestamps",
              "longType": "EpochTimestamps",
              "fullType": "vega.EpochTimestamps",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validators",
              "description": "Validators that participated in this epoch.",
              "label": "repeated",
              "type": "Node",
              "longType": "Node",
              "fullType": "vega.Node",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delegations",
              "description": "List of all delegations in epoch.",
              "label": "repeated",
              "type": "Delegation",
              "longType": "Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochData",
          "longName": "EpochData",
          "fullName": "vega.EpochData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "total",
              "description": "Total number of epochs since node was created.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offline",
              "description": "Total number of offline epochs since node was created.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "online",
              "description": "Total number of online epochs since node was created.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochParticipation",
          "longName": "EpochParticipation",
          "fullName": "vega.EpochParticipation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "Epoch",
              "longType": "Epoch",
              "fullType": "vega.Epoch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offline",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "online",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_rewards",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochRewardSummary",
          "longName": "EpochRewardSummary",
          "fullName": "vega.EpochRewardSummary",
          "description": "Details for rewards for a combination of asset, market, and reward type in a given epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Epoch in which the reward is being paid.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "Asset ID in which the reward is being paid.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID in which the reward is being paid.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_type",
              "description": "Type of reward being paid.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount distributed. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochTimestamps",
          "longName": "EpochTimestamps",
          "fullName": "vega.EpochTimestamps",
          "description": "Describes in both human readable and block time when an epoch spans",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "start_time",
              "description": "Timestamp in Unix nanoseconds for when epoch started.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiry_time",
              "description": "Timestamp in Unix nanoseconds for the epoch's expiry.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "Timestamp in Unix nanoseconds for when the epoch ended, empty if not ended.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "first_block",
              "description": "Height of first block in the epoch.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_block",
              "description": "Height of last block in the epoch, empty if not ended.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Erc20WithdrawExt",
          "longName": "Erc20WithdrawExt",
          "fullName": "vega.Erc20WithdrawExt",
          "description": "Extension of data required for the withdraw submissions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "receiver_address",
              "description": "Address into which the bridge will release the funds.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ErrorDetail",
          "longName": "ErrorDetail",
          "fullName": "vega.ErrorDetail",
          "description": "Represents Vega domain specific error information over gRPC/Protobuf",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "Vega API domain specific unique error code, useful for client side mappings, e.g. 10004.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "Message that describes the error in more detail, should describe the problem encountered.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inner",
              "description": "Any inner error information that could add more context, or be helpful for error reporting.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumConfig",
          "longName": "EthereumConfig",
          "fullName": "vega.EthereumConfig",
          "description": "Ethereum configuration details.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_id",
              "description": "Network ID of this Ethereum network.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "Chain ID of this Ethereum network.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral_bridge_contract",
              "description": "Contract configuration of the collateral bridge contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "confirmations",
              "description": "Number of block confirmations to wait to consider an Ethereum transaction trusted.\nAn Ethereum block is trusted when there are at least \"n\" blocks confirmed by the\nnetwork, \"n\" being the number of `confirmations` required. If `confirmations` was set to `3`,\nand the current block to be forged (or mined) on Ethereum is block 14, block\n10 would be considered as trusted, but not block 11.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking_bridge_contract",
              "description": "Contract configuration of the stacking bridge contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_vesting_contract",
              "description": "Contract configuration of the token vesting contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "multisig_control_contract",
              "description": "Contract configuration of the multisig control contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumContractConfig",
          "longName": "EthereumContractConfig",
          "fullName": "vega.EthereumContractConfig",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "Address of the contract for this Ethereum network. The address should start with \"0x\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deployment_block_height",
              "description": "Block height at which the stacking contract has been deployed for this Ethereum network.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Fee",
          "longName": "Fee",
          "fullName": "vega.Fee",
          "description": "Represents any fees paid by a party, resulting from a trade",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maker_fee",
              "description": "Fee amount paid to the non-aggressive party of the trade. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "infrastructure_fee",
              "description": "Fee amount paid for maintaining the Vega infrastructure. This field is an unsigned integer scaled using the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_fee",
              "description": "Fee amount paid to market makers. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "maker_fee_volume_discount",
              "description": "Volume discounts.\nDiscount on maker fee based on the taker volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "infrastructure_fee_volume_discount",
              "description": "Discount on infrastructure fee based on the taker volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_fee_volume_discount",
              "description": "Discount on liquidity fee basedo on taker volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "maker_fee_referrer_discount",
              "description": "Referrer discounts.\nDiscount on maker fee for eligible referrer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "infrastructure_fee_referrer_discount",
              "description": "Discount on infrastructure fee for eligible referrer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_fee_referrer_discount",
              "description": "Discount on liquidity fee for eligible referrer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FinancialAmount",
          "longName": "FinancialAmount",
          "fullName": "vega.FinancialAmount",
          "description": "Asset value information used within a transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "amount",
              "description": "Unsigned integer amount of asset scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset ID the amount applies to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IcebergOrder",
          "longName": "IcebergOrder",
          "fullName": "vega.IcebergOrder",
          "description": "Details of an iceberg order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "peak_size",
              "description": "Size of the order that will be made visible if the iceberg order is replenished after trading.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "minimum_visible_size",
              "description": "If the visible size of the order falls below this value, it will be replenished back to the peak size using the reserved amount.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reserved_remaining",
              "description": "Size of the order that is reserved and used to restore the iceberg's peak when it is refreshed.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyValueBundle",
          "longName": "KeyValueBundle",
          "fullName": "vega.KeyValueBundle",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tolerance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "StateVarValue",
              "longType": "StateVarValue",
              "fullType": "vega.StateVarValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LedgerEntry",
          "longName": "LedgerEntry",
          "fullName": "vega.LedgerEntry",
          "description": "Represents a ledger entry on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_account",
              "description": "One or more accounts to transfer from.",
              "label": "",
              "type": "AccountDetails",
              "longType": "AccountDetails",
              "fullType": "vega.AccountDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account",
              "description": "One or more accounts to transfer to.",
              "label": "",
              "type": "AccountDetails",
              "longType": "AccountDetails",
              "fullType": "vega.AccountDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount to transfer. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Transfer type for this entry.",
              "label": "",
              "type": "TransferType",
              "longType": "TransferType",
              "fullType": "vega.TransferType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp in nanoseconds of when the ledger entry was created.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_account_balance",
              "description": "Sender account balance after the transfer. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account_balance",
              "description": "Receiver account balance after the transfer. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LedgerMovement",
          "longName": "LedgerMovement",
          "fullName": "vega.LedgerMovement",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entries",
              "description": "All the entries for these ledger movements.",
              "label": "repeated",
              "type": "LedgerEntry",
              "longType": "LedgerEntry",
              "fullType": "vega.LedgerEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balances",
              "description": "Resulting balances once the ledger movement are applied.",
              "label": "repeated",
              "type": "PostTransferBalance",
              "longType": "PostTransferBalance",
              "fullType": "vega.PostTransferBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityOrder",
          "longName": "LiquidityOrder",
          "fullName": "vega.LiquidityOrder",
          "description": "Represents a liquidity order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Pegged reference point for the order.",
              "label": "",
              "type": "PeggedReference",
              "longType": "PeggedReference",
              "fullType": "vega.PeggedReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proportion",
              "description": "Relative proportion of the commitment to be allocated at a price level.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offset",
              "description": "Offset/amount of units away for the order. This field is an unsigned integer scaled using the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityOrderReference",
          "longName": "LiquidityOrderReference",
          "fullName": "vega.LiquidityOrderReference",
          "description": "Pair of a liquidity order and the ID of the generated order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Unique ID of the pegged order generated to fulfil this liquidity order.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_order",
              "description": "Liquidity order from the original submission.",
              "label": "",
              "type": "LiquidityOrder",
              "longType": "LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProviderFeeShare",
          "longName": "LiquidityProviderFeeShare",
          "fullName": "vega.LiquidityProviderFeeShare",
          "description": "Equity like share of liquidity fee for each liquidity provider",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "Liquidity provider party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "equity_like_share",
              "description": "Share own by this liquidity provider.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_entry_valuation",
              "description": "Average entry valuation of the liquidity provider for the market.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_score",
              "description": "Average liquidity score.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "virtual_stake",
              "description": "The virtual stake of this liquidity provider.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProviderSLA",
          "longName": "LiquidityProviderSLA",
          "fullName": "vega.LiquidityProviderSLA",
          "description": "SLA performance for each liquidity provider",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "Liquidity provider party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_epoch_fraction_of_time_on_book",
              "description": "Indicates how often LP meets the commitment during the current epoch.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_epoch_fraction_of_time_on_book",
              "description": "Indicates how often LP met the commitment in the previous epoch.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_epoch_fee_penalty",
              "description": "Indicates the fee penalty amount applied in the previous epoch.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_epoch_bond_penalty",
              "description": "Shows the bond penalties from past epochs.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hysteresis_period_fee_penalties",
              "description": "Determines how the fee penalties from past epochs affect future fee revenue.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "required_liquidity",
              "description": "Represents the total amount of funds LP must supply. The amount to be supplied is in the market’s\nsettlement currency, spread on both buy and sell sides of the order book within a defined range.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "notional_volume_buys",
              "description": "Notional volume of orders within the range provided on the buy side of the book.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "notional_volume_sells",
              "description": "Notional volume of orders within the range provided on the sell side of the book.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvision",
          "longName": "LiquidityProvision",
          "fullName": "vega.LiquidityProvision",
          "description": "Liquidity provider commitment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique ID for the liquidity provision.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Unique party ID for the creator of the provision.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Timestamp in Unix nanoseconds for when the liquidity provision was created.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Timestamp in Unix nanoseconds for when the liquidity provision was updated.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID for the liquidity provision.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commitment_amount",
              "description": "Specified as a unitless number that represents the amount of settlement asset of the market.\nThis field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per setting fees and rewarding liquidity providers.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sells",
              "description": "Set of liquidity sell orders to meet the liquidity provision obligation.",
              "label": "repeated",
              "type": "LiquidityOrderReference",
              "longType": "LiquidityOrderReference",
              "fullType": "vega.LiquidityOrderReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buys",
              "description": "Set of liquidity buy orders to meet the liquidity provision obligation.",
              "label": "repeated",
              "type": "LiquidityOrderReference",
              "longType": "LiquidityOrderReference",
              "fullType": "vega.LiquidityOrderReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of this liquidity provision.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of this liquidity provision.",
              "label": "",
              "type": "Status",
              "longType": "LiquidityProvision.Status",
              "fullType": "vega.LiquidityProvision.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Reference shared between this liquidity provision and all its orders.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginLevels",
          "longName": "MarginLevels",
          "fullName": "vega.MarginLevels",
          "description": "Represents the margin levels for a party on a market at a given time",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maintenance_margin",
              "description": "Maintenance margin value. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "search_level",
              "description": "Margin search level value. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "initial_margin",
              "description": "Initial margin value. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral_release_level",
              "description": "Collateral release level value. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID for whom the margin levels apply.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID for which the margin levels apply.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset ID for which the margin levels apply.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp in Unix nanoseconds for when the ledger entry was created.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketData",
          "longName": "MarketData",
          "fullName": "vega.MarketData",
          "description": "Represents data generated by a market when open",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "mark_price",
              "description": "Mark price, as an unsigned integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_bid_price",
              "description": "Highest price level on an order book for buy orders, as an unsigned integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_bid_volume",
              "description": "Aggregated volume being bid at the best bid price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market is configured to 5 decimal places.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_offer_price",
              "description": "Lowest price level on an order book for offer orders. This field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_offer_volume",
              "description": "Aggregated volume being offered at the best offer price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market is configured to 5 decimal places.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_bid_price",
              "description": "Highest price on the order book for buy orders not including pegged orders.\nThis field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_bid_volume",
              "description": "Total volume at the best static bid price excluding pegged orders.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_offer_price",
              "description": "Lowest price on the order book for sell orders not including pegged orders.\nThis field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_offer_volume",
              "description": "Total volume at the best static offer price, excluding pegged orders.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mid_price",
              "description": "Arithmetic average of the best bid price and best offer price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "static_mid_price",
              "description": "Arithmetic average of the best static bid price and best static offer price.\nThis field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "Market ID for the data",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp in Unix nanoseconds at which this mark price was relevant.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open_interest",
              "description": "Sum of the size of all positions greater than zero on the market.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_end",
              "description": "Time in seconds until the end of the auction (zero if currently not in auction period).",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_start",
              "description": "Time until next auction, or start time of the current auction if market is in auction period.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_price",
              "description": "Indicative price (zero if not in auction). This field is an unsigned scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_volume",
              "description": "Indicative volume (zero if not in auction).",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_trading_mode",
              "description": "Current trading mode for the market.",
              "label": "",
              "type": "TradingMode",
              "longType": "Market.TradingMode",
              "fullType": "vega.Market.TradingMode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "When a market is in an auction trading mode, this field indicates what triggered the auction.",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extension_trigger",
              "description": "When a market auction is extended, this field indicates what caused the extension.",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_stake",
              "description": "Targeted stake for the given market. This field is an unsigned integer scaled to the settlement asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "supplied_stake",
              "description": "Available stake for the given market. This field is an unsigned integer scaled to the settlement asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_bounds",
              "description": "One or more price monitoring bounds for the current timestamp.",
              "label": "repeated",
              "type": "PriceMonitoringBounds",
              "longType": "PriceMonitoringBounds",
              "fullType": "vega.PriceMonitoringBounds",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_value_proxy",
              "description": "Market value proxy.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provider_fee_share",
              "description": "Equity like share of liquidity fee for each liquidity provider.",
              "label": "repeated",
              "type": "LiquidityProviderFeeShare",
              "longType": "LiquidityProviderFeeShare",
              "fullType": "vega.LiquidityProviderFeeShare",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_state",
              "description": "Current state of the market.",
              "label": "",
              "type": "State",
              "longType": "Market.State",
              "fullType": "vega.Market.State",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_mark_to_market",
              "description": "Time in Unix nanoseconds when the next mark-to-market calculation will occur.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_traded_price",
              "description": "Last traded price of the market. This field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_growth",
              "description": "Market growth at the last market time window.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "product_data",
              "description": "Data related to the particular product type of the market.",
              "label": "optional",
              "type": "ProductData",
              "longType": "ProductData",
              "fullType": "vega.ProductData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_product_data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provider_sla",
              "description": "SLA performance for each liquidity provider.",
              "label": "repeated",
              "type": "LiquidityProviderSLA",
              "longType": "LiquidityProviderSLA",
              "fullType": "vega.LiquidityProviderSLA",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepth",
          "longName": "MarketDepth",
          "fullName": "vega.MarketDepth",
          "description": "Represents market depth or order book data for the specified market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for which the depth levels apply.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "Collection of price levels for the buy side of the book.",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "Collection of price levels for the sell side of the book.",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "Sequence number for the market depth data returned.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepthUpdate",
          "longName": "MarketDepthUpdate",
          "fullName": "vega.MarketDepthUpdate",
          "description": "Represents the changed market depth since the last update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for which the market depth updates are for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "Collection of updated price levels for the buy side of the book.",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "Collection of updated price levels for the sell side of the book.",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "Sequence number for the market depth update data returned. It is increasing but not monotonic.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_sequence_number",
              "description": "Sequence number of the previous market depth update, for checking there are no gaps.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MatrixValue",
          "longName": "MatrixValue",
          "fullName": "vega.MatrixValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "repeated",
              "type": "VectorValue",
              "longType": "VectorValue",
              "fullType": "vega.VectorValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkLimits",
          "longName": "NetworkLimits",
          "fullName": "vega.NetworkLimits",
          "description": "Network limits, defined in the genesis file",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "can_propose_market",
              "description": "Are market proposals allowed at this point in time.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "can_propose_asset",
              "description": "Are asset proposals allowed at this point in time.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_market_enabled",
              "description": "Are market proposals enabled on this chain.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_asset_enabled",
              "description": "Are asset proposals enabled on this chain.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "genesis_loaded",
              "description": "True once the genesis file is loaded.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_market_enabled_from",
              "description": "Timestamp in Unix nanoseconds at which market proposals will be enabled (0 indicates not set).",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_asset_enabled_from",
              "description": "Timestamp in Unix nanoseconds at which asset proposals will be enabled (0 indicates not set).",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "can_propose_spot_market",
              "description": "Are spot market proposals allowed at this point in time.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "can_propose_perpetual_market",
              "description": "Are perpetual market proposals allowed at this point in time.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkParameter",
          "longName": "NetworkParameter",
          "fullName": "vega.NetworkParameter",
          "description": "Represents a network parameter on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "Unique key of the network parameter.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Value for the network parameter.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Node",
          "longName": "Node",
          "fullName": "vega.Node",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Node ID i.e. the node's wallet ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pub_key",
              "description": "Public key of the node operator.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tm_pub_key",
              "description": "Public key of Tendermint.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "Ethereum public key of the node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info_url",
              "description": "URL where users can find out more information on the node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "location",
              "description": "Country code for the location of the node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staked_by_operator",
              "description": "Amount the node operator has put up themselves. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staked_by_delegates",
              "description": "Amount of stake that has been delegated by token holders. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staked_total",
              "description": "Total amount staked on node. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_intended_stake",
              "description": "Max amount of (wanted) stake. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_stake",
              "description": "Amount of stake on the next epoch. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_data",
              "description": "Information about epoch.",
              "label": "",
              "type": "EpochData",
              "longType": "EpochData",
              "fullType": "vega.EpochData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Node status.",
              "label": "",
              "type": "NodeStatus",
              "longType": "NodeStatus",
              "fullType": "vega.NodeStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delegations",
              "description": "Node's delegations.",
              "label": "repeated",
              "type": "Delegation",
              "longType": "Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_score",
              "description": "Node reward score.",
              "label": "",
              "type": "RewardScore",
              "longType": "RewardScore",
              "fullType": "vega.RewardScore",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "Node ranking information.",
              "label": "",
              "type": "RankingScore",
              "longType": "RankingScore",
              "fullType": "vega.RankingScore",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Node name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "Avatar url.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeData",
          "longName": "NodeData",
          "fullName": "vega.NodeData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "staked_total",
              "description": "Total staked amount across all nodes. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_nodes",
              "description": "Total number of nodes across all node sets.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inactive_nodes",
              "description": "Total number of nodes that had a performance score of 0 at the end of the last epoch.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tendermint_nodes",
              "description": "Details on the set of consensus nodes in the network.",
              "label": "",
              "type": "NodeSet",
              "longType": "NodeSet",
              "fullType": "vega.NodeSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ersatz_nodes",
              "description": "Details on the set of ersatz (standby) nodes in the network.",
              "label": "",
              "type": "NodeSet",
              "longType": "NodeSet",
              "fullType": "vega.NodeSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_nodes",
              "description": "Details on the set of pending nodes in the network.",
              "label": "",
              "type": "NodeSet",
              "longType": "NodeSet",
              "fullType": "vega.NodeSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "uptime",
              "description": "Total uptime for all epochs across all nodes.",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeSet",
          "longName": "NodeSet",
          "fullName": "vega.NodeSet",
          "description": "Details on the collection of nodes for a particular validator status",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "total",
              "description": "Total number of nodes in the node set.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inactive",
              "description": "Number of nodes in the node set that had a performance score of 0 at the end of the last epoch.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "promoted",
              "description": "IDs of nodes that were promoted into this node set at the start of the epoch.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "demoted",
              "description": "IDs of nodes that were demoted into this node set at the start of the epoch.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "maximum",
              "description": "Total number of nodes allowed in the node set.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_maximum",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Order",
          "longName": "Order",
          "fullName": "vega.Order",
          "description": "Orders can be submitted, amended and cancelled on Vega in an attempt to make trades with other parties",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique ID generated for the order.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID for the order.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID for the order.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "side",
              "description": "Side for the order, e.g. SIDE_BUY or SIDE_SELL.",
              "label": "",
              "type": "Side",
              "longType": "Side",
              "fullType": "vega.Side",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the order, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size for the order, for example, in a futures market the size equals the number of contracts.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "remaining",
              "description": "Size remaining, when this reaches 0 then the order is fully filled and status becomes STATUS_FILLED.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_in_force",
              "description": "Time in force indicates how long an order will remain active before it is executed or expires.\n- See OrderTimeInForce",
              "label": "",
              "type": "TimeInForce",
              "longType": "Order.TimeInForce",
              "fullType": "vega.Order.TimeInForce",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type for the order.",
              "label": "",
              "type": "Type",
              "longType": "Order.Type",
              "fullType": "vega.Order.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Timestamp for when the order was created at, in nanoseconds.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Current status of the order.",
              "label": "",
              "type": "Status",
              "longType": "Order.Status",
              "fullType": "vega.Order.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires_at",
              "description": "Timestamp in Unix nanoseconds for when the order will expire.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Reference given for the order.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "Futher details for why an order with status `STATUS_REJECTED` was rejected.",
              "label": "optional",
              "type": "OrderError",
              "longType": "OrderError",
              "fullType": "vega.OrderError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reason",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Timestamp in Unix nanoseconds for when the order was last updated.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version for the order, initial value is version 1 and is incremented after each successful amend.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_id",
              "description": "Batch ID for the order, used internally for orders submitted during auctions\nto keep track of the auction batch this order falls under. Required for fees calculation.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_order",
              "description": "Pegged order details, used only if the order represents a pegged order.",
              "label": "",
              "type": "PeggedOrder",
              "longType": "PeggedOrder",
              "fullType": "vega.PeggedOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_id",
              "description": "Set if the order was created as part of a liquidity provision, will be empty if not.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "post_only",
              "description": "Only valid for Limit orders. Cannot be True at the same time as Reduce-Only.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reduce_only",
              "description": "Only valid for Non-Persistent orders. Cannot be True at the same time as Post-Only.\nIf set, order will only be executed if the outcome of the trade moves the trader's position closer to 0.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "iceberg_order",
              "description": "Details of an iceberg order",
              "label": "optional",
              "type": "IcebergOrder",
              "longType": "IcebergOrder",
              "fullType": "vega.IcebergOrder",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_iceberg_order",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderCancellationConfirmation",
          "longName": "OrderCancellationConfirmation",
          "fullName": "vega.OrderCancellationConfirmation",
          "description": "Used when cancelling an order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "Order that was cancelled.",
              "label": "",
              "type": "Order",
              "longType": "Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderConfirmation",
          "longName": "OrderConfirmation",
          "fullName": "vega.OrderConfirmation",
          "description": "Used when confirming an order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "Order that was confirmed.",
              "label": "",
              "type": "Order",
              "longType": "Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trades",
              "description": "0 or more trades that were emitted.",
              "label": "repeated",
              "type": "Trade",
              "longType": "Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "passive_orders_affected",
              "description": "0 or more passive orders that were affected.",
              "label": "repeated",
              "type": "Order",
              "longType": "Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Party",
          "longName": "Party",
          "fullName": "vega.Party",
          "description": "Party represents an entity who wishes to trade on or query a Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique ID for the party, typically represented by a public key.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PeggedOrder",
          "longName": "PeggedOrder",
          "fullName": "vega.PeggedOrder",
          "description": "Pegged orders are limit orders where the price is specified in the form REFERENCE +/- OFFSET\nThey can be used for any limit order that is valid during continuous trading",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Price point the order is linked to.",
              "label": "",
              "type": "PeggedReference",
              "longType": "PeggedReference",
              "fullType": "vega.PeggedReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offset",
              "description": "Offset from the price reference.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PerpetualData",
          "longName": "PerpetualData",
          "fullName": "vega.PerpetualData",
          "description": "Represents market data specific to a perpetual market.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "funding_payment",
              "description": "Current funding payment for the in-progress funding period.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "funding_rate",
              "description": "Current funding rate for the in-progress funding period.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "internal_twap",
              "description": "Time-weighted-average the internal data-points for the in-progress funding period.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "external_twap",
              "description": "Time-weighted-average the external data points for the in-progress funding period.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Position",
          "longName": "Position",
          "fullName": "vega.Position",
          "description": "Represents position data for a party on the specified market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID in which the position is held.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID holding the position.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open_volume",
              "description": "Open volume for the position, value is signed +ve for long and -ve for short.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "realised_pnl",
              "description": "Realised profit and loss for the position, value is signed +ve for long and -ve for short.\nThis field is a signed integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unrealised_pnl",
              "description": "Unrealised profit and loss for the position, value is signed +ve for long and -ve for short.\nThis field is a signed integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_entry_price",
              "description": "Average entry price for the position, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Timestamp for the latest time the position was updated.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "loss_socialisation_amount",
              "description": "Sum of profit that could not be paid due to loss socialisation.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "position_status",
              "description": "Position status, indicating whether the party was distressed and had orders cancelled or was closed out.",
              "label": "",
              "type": "PositionStatus",
              "longType": "PositionStatus",
              "fullType": "vega.PositionStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionTrade",
          "longName": "PositionTrade",
          "fullName": "vega.PositionTrade",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "volume",
              "description": "Volume for the position trade, value is signed +ve for long and -ve for short.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the position trade, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PostTransferBalance",
          "longName": "PostTransferBalance",
          "fullName": "vega.PostTransferBalance",
          "description": "Represents the balance for an account during a transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account",
              "description": "Account relating to the transfer.",
              "label": "",
              "type": "AccountDetails",
              "longType": "AccountDetails",
              "fullType": "vega.AccountDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "Balance relating to the transfer. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceLevel",
          "longName": "PriceLevel",
          "fullName": "vega.PriceLevel",
          "description": "Represents a price level from market depth or order book data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "Price for the price level, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places. This field\nis an unsigned integer passed as a string and needs to be scaled using the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "number_of_orders",
              "description": "Number of orders at the price level.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Volume at the price level.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringBounds",
          "longName": "PriceMonitoringBounds",
          "fullName": "vega.PriceMonitoringBounds",
          "description": "Represents a list of valid (at the current timestamp) price ranges per associated trigger",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "min_valid_price",
              "description": "Minimum price that isn't currently breaching the specified price monitoring trigger.\nThis field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_valid_price",
              "description": "Maximum price that isn't currently breaching the specified price monitoring trigger.\nThis field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "Price monitoring trigger associated with the bounds.",
              "label": "",
              "type": "PriceMonitoringTrigger",
              "longType": "PriceMonitoringTrigger",
              "fullType": "vega.PriceMonitoringTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference_price",
              "description": "Reference price used to calculate the valid price range. This field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProductData",
          "longName": "ProductData",
          "fullName": "vega.ProductData",
          "description": "Represents market data specific to a particular product type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "perpetual_data",
              "description": "",
              "label": "",
              "type": "PerpetualData",
              "longType": "PerpetualData",
              "fullType": "vega.PerpetualData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Rank",
          "longName": "Rank",
          "fullName": "vega.Rank",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "start_rank",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "share_ratio",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RankingScore",
          "longName": "RankingScore",
          "fullName": "vega.RankingScore",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "stake_score",
              "description": "Stake based score - no anti-whaling.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "performance_score",
              "description": "Performance based score.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_status",
              "description": "Status of the validator in the previous epoch.",
              "label": "",
              "type": "ValidatorNodeStatus",
              "longType": "ValidatorNodeStatus",
              "fullType": "vega.ValidatorNodeStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the validator in the current epoch.",
              "label": "",
              "type": "ValidatorNodeStatus",
              "longType": "ValidatorNodeStatus",
              "fullType": "vega.ValidatorNodeStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "voting_power",
              "description": "Tendermint voting power of the validator.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "Final score.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralProgram",
          "longName": "ReferralProgram",
          "fullName": "vega.ReferralProgram",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Incremental version of the program. It is incremented after each program\nupdate.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "Unique ID generated from the proposal that created this program.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "benefit_tiers",
              "description": "Defined benefit tiers ordered by increasing discounts.",
              "label": "repeated",
              "type": "BenefitTier",
              "longType": "BenefitTier",
              "fullType": "vega.BenefitTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_of_program_timestamp",
              "description": "Timestamp in Unix nanoseconds, after which when the current epoch ends,\nthe program will end and benefits will be disabled.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_length",
              "description": "Number of epochs over which the referral set's running volume is evaluated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking_tiers",
              "description": "Defined benefit tiers ordered by increasing reward multiplier. Determines the level of\nbenefit a party can expect based on their staking.",
              "label": "repeated",
              "type": "StakingTier",
              "longType": "StakingTier",
              "fullType": "vega.StakingTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Reward",
          "longName": "Reward",
          "fullName": "vega.Reward",
          "description": "Details for a single reward payment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Asset ID in which the reward is being paid.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID to whom the reward is being paid.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "Epoch in which the reward is being paid.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount paid as a reward. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "percentage_of_total",
              "description": "Percentage of total rewards paid in the epoch.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "received_at",
              "description": "Timestamp at which the reward was paid as Unix nano time.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID in which the reward is being paid.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_type",
              "description": "Type of reward being paid.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "locked_until_epoch",
              "description": "The epoch when the reward is being released.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardScore",
          "longName": "RewardScore",
          "fullName": "vega.RewardScore",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "raw_validator_score",
              "description": "Stake based score - with anti-whaling.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "performance_score",
              "description": "Performance based score.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "multisig_score",
              "description": "Multisig score.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_score",
              "description": "Un-normalised score.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "normalised_score",
              "description": "Normalised validator score for rewards.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_status",
              "description": "Status of the validator for reward.",
              "label": "",
              "type": "ValidatorNodeStatus",
              "longType": "ValidatorNodeStatus",
              "fullType": "vega.ValidatorNodeStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardSummary",
          "longName": "RewardSummary",
          "fullName": "vega.RewardSummary",
          "description": "Details for rewards for a single asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Asset ID in which the reward is being paid.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID to whom the reward is being paid.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Total amount of rewards paid in the asset. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RiskFactor",
          "longName": "RiskFactor",
          "fullName": "vega.RiskFactor",
          "description": "Risk factors are used to calculate the current risk associated with orders trading on a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "Market ID that relates to this risk factor.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "short",
              "description": "Short Risk factor value.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "long",
              "description": "Long Risk factor value.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScalarValue",
          "longName": "ScalarValue",
          "fullName": "vega.ScalarValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakingTier",
          "longName": "StakingTier",
          "fullName": "vega.StakingTier",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minimum_staked_tokens",
              "description": "Required number of governance tokens ($VEGA) a referrer must have staked to\nreceive the multiplier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referral_reward_multiplier",
              "description": "Multiplier applied to the referral reward factor when calculating referral\nrewards due to the referrer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateValueProposal",
          "longName": "StateValueProposal",
          "fullName": "vega.StateValueProposal",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "state_var_id",
              "description": "State variable ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_id",
              "description": "Event ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "kvb",
              "description": "Key value tolerance triplets.",
              "label": "repeated",
              "type": "KeyValueBundle",
              "longType": "KeyValueBundle",
              "fullType": "vega.KeyValueBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateVarValue",
          "longName": "StateVarValue",
          "fullName": "vega.StateVarValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "scalar_val",
              "description": "",
              "label": "",
              "type": "ScalarValue",
              "longType": "ScalarValue",
              "fullType": "vega.ScalarValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "vector_val",
              "description": "",
              "label": "",
              "type": "VectorValue",
              "longType": "VectorValue",
              "fullType": "vega.VectorValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "matrix_val",
              "description": "",
              "label": "",
              "type": "MatrixValue",
              "longType": "MatrixValue",
              "fullType": "vega.MatrixValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopOrder",
          "longName": "StopOrder",
          "fullName": "vega.StopOrder",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ID of this stop order\nalso the ID of the associated order if it is ever triggered",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oco_link_id",
              "description": "The ID of the 'other' part of the OCO if 2 stop orders were submitted at once",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_oco_link_id",
              "defaultValue": ""
            },
            {
              "name": "expires_at",
              "description": "Optional expiry timestamp.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_expires_at",
              "defaultValue": ""
            },
            {
              "name": "expiry_strategy",
              "description": "Strategy to adopt if the expiry time is reached.",
              "label": "optional",
              "type": "ExpiryStrategy",
              "longType": "StopOrder.ExpiryStrategy",
              "fullType": "vega.StopOrder.ExpiryStrategy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_expiry_strategy",
              "defaultValue": ""
            },
            {
              "name": "trigger_direction",
              "description": "Trigger direction for this stop order.",
              "label": "",
              "type": "TriggerDirection",
              "longType": "StopOrder.TriggerDirection",
              "fullType": "vega.StopOrder.TriggerDirection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the stop order.",
              "label": "",
              "type": "Status",
              "longType": "StopOrder.Status",
              "fullType": "vega.StopOrder.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Creation time of the stop order.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Last update of this stop order.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_updated_at",
              "defaultValue": ""
            },
            {
              "name": "order_id",
              "description": "ID of the order created once the trigger is hit.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "ID of the party that submitted this stop order.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "ID of the market the stop order is submitted to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rejection_reason",
              "description": "An optional reason for why a stop order was rejected",
              "label": "optional",
              "type": "RejectionReason",
              "longType": "StopOrder.RejectionReason",
              "fullType": "vega.StopOrder.RejectionReason",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_rejection_reason",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Fixed price at which the order will be submitted.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "trigger",
              "defaultValue": ""
            },
            {
              "name": "trailing_percent_offset",
              "description": "Trailing percentage at which the order will be submitted.\nThis should be expressed as a decimal value between 0 and 1, e.g. 0.01 for 1%",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "trigger",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Trade",
          "longName": "Trade",
          "fullName": "vega.Trade",
          "description": "A trade occurs when an aggressive order crosses one or more passive orders on the order book for a market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique ID for the trade.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID on which the trade occurred.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the trade, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size filled for the trade.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buyer",
              "description": "Unique party ID for the buyer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seller",
              "description": "Unique party ID for the seller.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "aggressor",
              "description": "Direction of the aggressive party e.g. SIDE_BUY or SIDE_SELL.",
              "label": "",
              "type": "Side",
              "longType": "Side",
              "fullType": "vega.Side",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy_order",
              "description": "Identifier of the order from the buy side.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell_order",
              "description": "Identifier of the order from the sell side.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp in Unix nanoseconds for when the trade occurred.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type for the trade.",
              "label": "",
              "type": "Type",
              "longType": "Trade.Type",
              "fullType": "vega.Trade.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buyer_fee",
              "description": "Fee amount charged to the buyer party for the trade.",
              "label": "",
              "type": "Fee",
              "longType": "Fee",
              "fullType": "vega.Fee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seller_fee",
              "description": "Fee amount charged to the seller party for the trade.",
              "label": "",
              "type": "Fee",
              "longType": "Fee",
              "fullType": "vega.Fee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buyer_auction_batch",
              "description": "Auction batch number that the buy side order was placed in.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seller_auction_batch",
              "description": "Auction batch number that the sell side order was placed in.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_price",
              "description": "Price for the trade using asset decimals, as opposed to market decimals used\nin the price field. This is only used in trade events for position updates.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradeSet",
          "longName": "TradeSet",
          "fullName": "vega.TradeSet",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "Set of one or more trades.",
              "label": "repeated",
              "type": "Trade",
              "longType": "Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transfer",
          "longName": "Transfer",
          "fullName": "vega.Transfer",
          "description": "Represents a financial transfer within Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "Party ID for the owner of the transfer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Financial amount of an asset to transfer.",
              "label": "",
              "type": "FinancialAmount",
              "longType": "FinancialAmount",
              "fullType": "vega.FinancialAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of transfer, gives the reason for the transfer.",
              "label": "",
              "type": "TransferType",
              "longType": "TransferType",
              "fullType": "vega.TransferType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_amount",
              "description": "Minimum amount. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID the transfer is for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferRequest",
          "longName": "TransferRequest",
          "fullName": "vega.TransferRequest",
          "description": "Represents a request to transfer from one set of accounts to another",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_account",
              "description": "One or more accounts to transfer from.",
              "label": "repeated",
              "type": "Account",
              "longType": "Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account",
              "description": "One or more accounts to transfer to.",
              "label": "repeated",
              "type": "Account",
              "longType": "Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount to transfer for the asset. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_amount",
              "description": "Minimum amount that needs to be transferred for the transfer request. If this minimum isn't reached, it will error.\nThis field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset ID of the asset being transferred.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of the request for transfer.",
              "label": "",
              "type": "TransferType",
              "longType": "TransferType",
              "fullType": "vega.TransferType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VectorValue",
          "longName": "VectorValue",
          "fullName": "vega.VectorValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VestingBenefitTier",
          "longName": "VestingBenefitTier",
          "fullName": "vega.VestingBenefitTier",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minimum_quantum_balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_multiplier",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VestingBenefitTiers",
          "longName": "VestingBenefitTiers",
          "fullName": "vega.VestingBenefitTiers",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tiers",
              "description": "",
              "label": "repeated",
              "type": "VestingBenefitTier",
              "longType": "VestingBenefitTier",
              "fullType": "vega.VestingBenefitTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeBenefitTier",
          "longName": "VolumeBenefitTier",
          "fullName": "vega.VolumeBenefitTier",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minimum_running_notional_taker_volume",
              "description": "Required running notional taker volume in quantum units for parties\nto access this tier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume_discount_factor",
              "description": "Proportion of the taker fees to be discounted.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountProgram",
          "longName": "VolumeDiscountProgram",
          "fullName": "vega.VolumeDiscountProgram",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Incremental version of the program. It is incremented after each program\nupdate.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "Unique ID generated from the proposal that created this program.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "benefit_tiers",
              "description": "Defined benefit tiers ordered by increasing discounts.",
              "label": "repeated",
              "type": "VolumeBenefitTier",
              "longType": "VolumeBenefitTier",
              "fullType": "vega.VolumeBenefitTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_of_program_timestamp",
              "description": "Timestamp in Unix seconds, after which when the current epoch\nends, the program will end and benefits will be disabled.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_length",
              "description": "Number of epochs over which a referral set's running volume is evaluated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawExt",
          "longName": "WithdrawExt",
          "fullName": "vega.WithdrawExt",
          "description": "Withdrawal external details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "erc20",
              "description": "ERC20 withdrawal details.",
              "label": "",
              "type": "Erc20WithdrawExt",
              "longType": "Erc20WithdrawExt",
              "fullType": "vega.Erc20WithdrawExt",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "ext",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Withdrawal",
          "longName": "Withdrawal",
          "fullName": "vega.Withdrawal",
          "description": "Withdrawal from the Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique ID for the withdrawal.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Unique party ID of the user initiating the withdrawal.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount to be withdrawn. This field is an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset to withdraw funds from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the withdrawal.",
              "label": "",
              "type": "Status",
              "longType": "Withdrawal.Status",
              "fullType": "vega.Withdrawal.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ref",
              "description": "Reference which is used by the foreign chain\nto refer to this withdrawal.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "Hash of the foreign chain for this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_timestamp",
              "description": "Timestamp for when the network started to process this withdrawal.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdrawn_timestamp",
              "description": "Timestamp for when the withdrawal was finalised by the network.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ext",
              "description": "Foreign chain specifics.",
              "label": "",
              "type": "WithdrawExt",
              "longType": "WithdrawExt",
              "fullType": "vega.WithdrawExt",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/commands/v1/validator_commands.proto",
      "description": "",
      "package": "vega.commands.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "NodeSignatureKind",
          "longName": "NodeSignatureKind",
          "fullName": "vega.commands.v1.NodeSignatureKind",
          "description": "Kind of signature created by a node, for example, allow-listing a new asset, withdrawal etc",
          "values": [
            {
              "name": "NODE_SIGNATURE_KIND_UNSPECIFIED",
              "number": "0",
              "description": "Represents an unspecified or missing value from the input."
            },
            {
              "name": "NODE_SIGNATURE_KIND_ASSET_NEW",
              "number": "1",
              "description": "Represents a signature for a new asset allow-listing."
            },
            {
              "name": "NODE_SIGNATURE_KIND_ASSET_WITHDRAWAL",
              "number": "2",
              "description": "Represents a signature for an asset withdrawal."
            },
            {
              "name": "NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_ADDED",
              "number": "3",
              "description": "Represents a signature for a new signer added to the erc20 multisig contract."
            },
            {
              "name": "NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_REMOVED",
              "number": "4",
              "description": "Represents a signature for a signer removed from the erc20 multisig contract."
            },
            {
              "name": "NODE_SIGNATURE_KIND_ASSET_UPDATE",
              "number": "5",
              "description": "Represents a signature for an asset update allow-listing."
            }
          ]
        },
        {
          "name": "Type",
          "longName": "NodeVote.Type",
          "fullName": "vega.commands.v1.NodeVote.Type",
          "description": "",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Represents an unspecified or missing value from the input"
            },
            {
              "name": "TYPE_STAKE_DEPOSITED",
              "number": "1",
              "description": "Node vote for a new stake deposit"
            },
            {
              "name": "TYPE_STAKE_REMOVED",
              "number": "2",
              "description": "Node vote for a new stake removed event"
            },
            {
              "name": "TYPE_FUNDS_DEPOSITED",
              "number": "3",
              "description": "Node vote for a new collateral deposit"
            },
            {
              "name": "TYPE_SIGNER_ADDED",
              "number": "4",
              "description": "Node vote for a new signer added to the erc20 bridge"
            },
            {
              "name": "TYPE_SIGNER_REMOVED",
              "number": "5",
              "description": "Node vote for a signer removed from the erc20 bridge"
            },
            {
              "name": "TYPE_BRIDGE_STOPPED",
              "number": "6",
              "description": "Node vote for a bridge stopped event"
            },
            {
              "name": "TYPE_BRIDGE_RESUMED",
              "number": "7",
              "description": "Node vote for a bridge resumed event"
            },
            {
              "name": "TYPE_ASSET_LISTED",
              "number": "8",
              "description": "Node vote for a newly listed asset"
            },
            {
              "name": "TYPE_LIMITS_UPDATED",
              "number": "9",
              "description": "Node vote for an asset limits update"
            },
            {
              "name": "TYPE_STAKE_TOTAL_SUPPLY",
              "number": "10",
              "description": "Node vote to share the total supply of the staking token"
            },
            {
              "name": "TYPE_SIGNER_THRESHOLD_SET",
              "number": "11",
              "description": "Node vote to update the threshold of the signer set for the multisig contract"
            },
            {
              "name": "TYPE_GOVERNANCE_VALIDATE_ASSET",
              "number": "12",
              "description": "Node vote to validate a new assert governance proposal"
            },
            {
              "name": "TYPE_ETHEREUM_CONTRACT_CALL_RESULT",
              "number": "13",
              "description": "Node vote for an Ethereum contract call result"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AnnounceNode",
          "longName": "AnnounceNode",
          "fullName": "vega.commands.v1.AnnounceNode",
          "description": "A command that allows a new node operator to announce themselves to the network as a new validator.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_pub_key",
              "description": "Vega public key of the node being announced.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "Ethereum public key of the node being announced.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_pub_key",
              "description": "Public key for the blockchain, currently the node's CometBFT key.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info_url",
              "description": "URL to the node operators homepage allowing stake holders to make an informed decision when delegating.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "country",
              "description": "Country code (ISO 3166-1 alpha-2) for the location of the node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "Node ID of the validator, which is the node's public master key.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Human-readable name of the node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "URL to the node operator's avatar.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_pub_key_index",
              "description": "Vega public key derivation index.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_epoch",
              "description": "Epoch from which the node is expected to be ready to validate blocks.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_signature",
              "description": "Signature from the node made using the ethereum wallet.",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_signature",
              "description": "Signature from the node made using the Vega wallet.",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter_address",
              "description": "Ethereum public key to use as a submitter to allow automatic signature generation.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ChainEvent",
          "longName": "ChainEvent",
          "fullName": "vega.commands.v1.ChainEvent",
          "description": "A validator command sent automatically that provides information of events that have happened on foreign chains.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "tx_id",
              "description": "ID of the transaction on the foreign chain that caused the event.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Arbitrary one-time integer used to prevent replay attacks.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "builtin",
              "description": "Built-in asset event.",
              "label": "",
              "type": "BuiltinAssetEvent",
              "longType": "vega.BuiltinAssetEvent",
              "fullType": "vega.BuiltinAssetEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20",
              "description": "Ethereum ERC20 event.",
              "label": "",
              "type": "ERC20Event",
              "longType": "vega.ERC20Event",
              "fullType": "vega.ERC20Event",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "staking_event",
              "description": "Ethereum Staking event.",
              "label": "",
              "type": "StakingEvent",
              "longType": "vega.StakingEvent",
              "fullType": "vega.StakingEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig",
              "description": "Ethereum ERC20 multisig event.",
              "label": "",
              "type": "ERC20MultiSigEvent",
              "longType": "vega.ERC20MultiSigEvent",
              "fullType": "vega.ERC20MultiSigEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "contract_call",
              "description": "Ethereum contract call event.",
              "label": "",
              "type": "EthContractCallEvent",
              "longType": "vega.EthContractCallEvent",
              "fullType": "vega.EthContractCallEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumKeyRotateSubmission",
          "longName": "EthereumKeyRotateSubmission",
          "fullName": "vega.commands.v1.EthereumKeyRotateSubmission",
          "description": "A validator command sent manually that allows a node operator to indicate to the network that their node's Ethereum key will be rotated.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "target_block",
              "description": "Block height at which the key rotation will take effect.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_address",
              "description": "Ethereum address that is being rotated to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_address",
              "description": "Ethereum address of the node's current Ethereum keys.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter_address",
              "description": "Ethereum public key to use as a submitter to allow automatic signature generation.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_signature",
              "description": "Signature signed by the new Ethereum key that can be verified to prove ownership.",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyRotateSubmission",
          "longName": "KeyRotateSubmission",
          "fullName": "vega.commands.v1.KeyRotateSubmission",
          "description": "A validator command sent manually that allows a node operator to indicate to the network that their node's Vega key will be rotated.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_pub_key_index",
              "description": "New Vega public key derivation index.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_block",
              "description": "Block height at which the key rotation will take effect.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key",
              "description": "Vega public key that would be rotated to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_pub_key_hash",
              "description": "Hash of the node's current Vega public key.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeSignature",
          "longName": "NodeSignature",
          "fullName": "vega.commands.v1.NodeSignature",
          "description": "A validator command sent automatically containing a signature that can be used on a foreign chain to process an action.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ID of the resource that the signature relates to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sig",
              "description": "Signature generated by the node.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "kind",
              "description": "Kind of resource being signed.",
              "label": "",
              "type": "NodeSignatureKind",
              "longType": "NodeSignatureKind",
              "fullType": "vega.commands.v1.NodeSignatureKind",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeVote",
          "longName": "NodeVote",
          "fullName": "vega.commands.v1.NodeVote",
          "description": "A validator command which is sent automatically by a node when it has verified a resource external to the network.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Reference identifying the resource that has been verified.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of external event that has been verified.",
              "label": "",
              "type": "Type",
              "longType": "NodeVote.Type",
              "fullType": "vega.commands.v1.NodeVote.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeProposal",
          "longName": "ProtocolUpgradeProposal",
          "fullName": "vega.commands.v1.ProtocolUpgradeProposal",
          "description": "A validator command sent manually by a node operator to propose a protocol upgrade.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "upgrade_block_height",
              "description": "Block height at which to perform the upgrade.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_release_tag",
              "description": "Release tag for the Vega binary.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateVariableProposal",
          "longName": "StateVariableProposal",
          "fullName": "vega.commands.v1.StateVariableProposal",
          "description": "A validator command sent automatically to reach consensus on floating point values.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "Details of the state variable being proposed.",
              "label": "",
              "type": "StateValueProposal",
              "longType": "vega.StateValueProposal",
              "fullType": "vega.StateValueProposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorHeartbeat",
          "longName": "ValidatorHeartbeat",
          "fullName": "vega.commands.v1.ValidatorHeartbeat",
          "description": "A validator command which is sent automatically at regular intervals by any validator participating in the network.\nIt is used to allow the network to know whether a validator is active, or if they have shut down.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node ID of the validator emitting the heartbeat.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_signature",
              "description": "Signature from the validator made using their Ethereum wallet.",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_signature",
              "description": "Signature from the validator made using their Vega wallet.",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "Message which has been signed.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/assets.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Status",
          "longName": "Asset.Status",
          "fullName": "vega.Asset.Status",
          "description": "",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_PROPOSED",
              "number": "1",
              "description": "Asset is proposed and under vote"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "2",
              "description": "Asset has been rejected from governance"
            },
            {
              "name": "STATUS_PENDING_LISTING",
              "number": "3",
              "description": "Asset is pending listing from the bridge"
            },
            {
              "name": "STATUS_ENABLED",
              "number": "4",
              "description": "Asset is fully usable in the network"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Asset",
          "longName": "Asset",
          "fullName": "vega.Asset",
          "description": "Vega representation of an external asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Internal identifier of the asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "details",
              "description": "Definition of the external source for this asset.",
              "label": "",
              "type": "AssetDetails",
              "longType": "AssetDetails",
              "fullType": "vega.AssetDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the asset.",
              "label": "",
              "type": "Status",
              "longType": "Asset.Status",
              "fullType": "vega.Asset.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetDetails",
          "longName": "AssetDetails",
          "fullName": "vega.AssetDetails",
          "description": "Vega representation of an external asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the asset (e.g: Great British Pound).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "symbol",
              "description": "Symbol of the asset (e.g: GBP).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimals",
              "description": "Number of decimal / precision handled by this asset.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantum",
              "description": "Minimum economically meaningful amount in the asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "builtin_asset",
              "description": "Vega built-in asset.",
              "label": "",
              "type": "BuiltinAsset",
              "longType": "BuiltinAsset",
              "fullType": "vega.BuiltinAsset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            },
            {
              "name": "erc20",
              "description": "Ethereum ERC20 asset.",
              "label": "",
              "type": "ERC20",
              "longType": "ERC20",
              "fullType": "vega.ERC20",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetDetailsUpdate",
          "longName": "AssetDetailsUpdate",
          "fullName": "vega.AssetDetailsUpdate",
          "description": "Changes to apply on an existing asset.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "quantum",
              "description": "Minimum economically meaningful amount in the asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "erc20",
              "description": "Ethereum ERC20 asset update.",
              "label": "",
              "type": "ERC20Update",
              "longType": "ERC20Update",
              "fullType": "vega.ERC20Update",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuiltinAsset",
          "longName": "BuiltinAsset",
          "fullName": "vega.BuiltinAsset",
          "description": "Vega internal asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "max_faucet_amount_mint",
              "description": "Maximum amount that can be requested by a party through the built-in asset faucet at a time.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20",
          "longName": "ERC20",
          "fullName": "vega.ERC20",
          "description": "ERC20 token based asset, living on the ethereum network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "contract_address",
              "description": "Address of the contract for the token, on the ethereum network.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lifetime_limit",
              "description": "Lifetime limits deposit per address\nnote: this is a temporary measure that can be changed by governance.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdraw_threshold",
              "description": "Maximum you can withdraw instantly. All withdrawals over the threshold will be delayed by the withdrawal delay.\nThere’s no limit on the size of a withdrawal\nnote: this is a temporary measure that can be changed by governance.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Update",
          "longName": "ERC20Update",
          "fullName": "vega.ERC20Update",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "lifetime_limit",
              "description": "Lifetime limits deposit per address.\nThis will be interpreted against the asset decimals.\nnote: this is a temporary measure that can be changed by governance.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdraw_threshold",
              "description": "Maximum you can withdraw instantly. All withdrawals over the threshold will be delayed by the withdrawal delay.\nThere’s no limit on the size of a withdrawal\nnote: this is a temporary measure that can be changed by governance.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/governance.proto",
      "description": "",
      "package": "vega",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "GovernanceTransferType",
          "longName": "GovernanceTransferType",
          "fullName": "vega.GovernanceTransferType",
          "description": "",
          "values": [
            {
              "name": "GOVERNANCE_TRANSFER_TYPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "GOVERNANCE_TRANSFER_TYPE_ALL_OR_NOTHING",
              "number": "1",
              "description": ""
            },
            {
              "name": "GOVERNANCE_TRANSFER_TYPE_BEST_EFFORT",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "MarketStateUpdateType",
          "longName": "MarketStateUpdateType",
          "fullName": "vega.MarketStateUpdateType",
          "description": "",
          "values": [
            {
              "name": "MARKET_STATE_UPDATE_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "MARKET_STATE_UPDATE_TYPE_TERMINATE",
              "number": "1",
              "description": "Request to terminate a market via governance"
            },
            {
              "name": "MARKET_STATE_UPDATE_TYPE_SUSPEND",
              "number": "2",
              "description": "Request to suspend a market via governance"
            },
            {
              "name": "MARKET_STATE_UPDATE_TYPE_RESUME",
              "number": "3",
              "description": "Request to resume a market via governance"
            }
          ]
        },
        {
          "name": "State",
          "longName": "Proposal.State",
          "fullName": "vega.Proposal.State",
          "description": "Proposal state transition:\nOpen -\u003e\n  - Passed -\u003e Enacted.\n  - Passed -\u003e Failed.\n  - Declined\nRejected\nProposal can enter Failed state from any other state",
          "values": [
            {
              "name": "STATE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATE_FAILED",
              "number": "1",
              "description": "Proposal enactment has failed - even though proposal has passed, its execution could not be performed"
            },
            {
              "name": "STATE_OPEN",
              "number": "2",
              "description": "Proposal is open for voting"
            },
            {
              "name": "STATE_PASSED",
              "number": "3",
              "description": "Proposal has gained enough support to be executed"
            },
            {
              "name": "STATE_REJECTED",
              "number": "4",
              "description": "Proposal wasn't accepted i.e. proposal terms failed validation due to wrong configuration or failed to meet network requirements."
            },
            {
              "name": "STATE_DECLINED",
              "number": "5",
              "description": "Proposal didn't get enough votes, e.g. either failed to gain required participation or majority level."
            },
            {
              "name": "STATE_ENACTED",
              "number": "6",
              "description": "Proposal enacted"
            },
            {
              "name": "STATE_WAITING_FOR_NODE_VOTE",
              "number": "7",
              "description": "Waiting for node validation of the proposal"
            }
          ]
        },
        {
          "name": "ProposalError",
          "longName": "ProposalError",
          "fullName": "vega.ProposalError",
          "description": "List of possible errors that can cause a proposal to be in state rejected or failed",
          "values": [
            {
              "name": "PROPOSAL_ERROR_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON",
              "number": "1",
              "description": "Specified close time is too early based on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE",
              "number": "2",
              "description": "Specified close time is too late based on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_ENACT_TIME_TOO_SOON",
              "number": "3",
              "description": "Specified enactment time is too early based on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_ENACT_TIME_TOO_LATE",
              "number": "4",
              "description": "Specified enactment time is too late based on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_INSUFFICIENT_TOKENS",
              "number": "5",
              "description": "Proposer for this proposal has insufficient tokens"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY",
              "number": "6",
              "description": "Instrument quote name and base name were the same"
            },
            {
              "name": "PROPOSAL_ERROR_NO_PRODUCT",
              "number": "7",
              "description": "Proposal has no product"
            },
            {
              "name": "PROPOSAL_ERROR_UNSUPPORTED_PRODUCT",
              "number": "8",
              "description": "Specified product is not supported"
            },
            {
              "name": "PROPOSAL_ERROR_NO_TRADING_MODE",
              "number": "11",
              "description": "Proposal has no trading mode"
            },
            {
              "name": "PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE",
              "number": "12",
              "description": "Proposal has an unsupported trading mode"
            },
            {
              "name": "PROPOSAL_ERROR_NODE_VALIDATION_FAILED",
              "number": "13",
              "description": "Proposal failed node validation"
            },
            {
              "name": "PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD",
              "number": "14",
              "description": "Field is missing in a builtin asset source"
            },
            {
              "name": "PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS",
              "number": "15",
              "description": "Contract address is missing in the ERC20 asset source"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_ASSET",
              "number": "16",
              "description": "Asset ID is invalid or does not exist on the Vega network"
            },
            {
              "name": "PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS",
              "number": "17",
              "description": "Proposal terms timestamps are not compatible (Validation \u003c Closing \u003c Enactment)"
            },
            {
              "name": "PROPOSAL_ERROR_NO_RISK_PARAMETERS",
              "number": "18",
              "description": "No risk parameters were specified"
            },
            {
              "name": "PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY",
              "number": "19",
              "description": "Invalid key in update network parameter proposal"
            },
            {
              "name": "PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE",
              "number": "20",
              "description": "Invalid value in update network parameter proposal"
            },
            {
              "name": "PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED",
              "number": "21",
              "description": "Validation failed for network parameter proposal"
            },
            {
              "name": "PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL",
              "number": "22",
              "description": "Opening auction duration is less than the network minimum opening auction time"
            },
            {
              "name": "PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE",
              "number": "23",
              "description": "Opening auction duration is more than the network minimum opening auction time"
            },
            {
              "name": "PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET",
              "number": "25",
              "description": "Market proposal market could not be instantiated in execution"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT",
              "number": "26",
              "description": "Market proposal market contained invalid product definition"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_RISK_PARAMETER",
              "number": "30",
              "description": "Market proposal has invalid risk parameter"
            },
            {
              "name": "PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED",
              "number": "31",
              "description": "Proposal was declined because vote didn't reach the majority threshold required"
            },
            {
              "name": "PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED",
              "number": "32",
              "description": "Proposal declined because the participation threshold was not reached"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_ASSET_DETAILS",
              "number": "33",
              "description": "Asset proposal has invalid asset details"
            },
            {
              "name": "PROPOSAL_ERROR_UNKNOWN_TYPE",
              "number": "34",
              "description": "Proposal is an unknown type"
            },
            {
              "name": "PROPOSAL_ERROR_UNKNOWN_RISK_PARAMETER_TYPE",
              "number": "35",
              "description": "Proposal has an unknown risk parameter type"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_FREEFORM",
              "number": "36",
              "description": "Validation failed for freeform proposal"
            },
            {
              "name": "PROPOSAL_ERROR_INSUFFICIENT_EQUITY_LIKE_SHARE",
              "number": "37",
              "description": "Party doesn't have enough equity-like share to propose an update on the market\ntargeted by the proposal"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_MARKET",
              "number": "38",
              "description": "Market targeted by the proposal does not exist or is not eligible for modification"
            },
            {
              "name": "PROPOSAL_ERROR_TOO_MANY_MARKET_DECIMAL_PLACES",
              "number": "39",
              "description": "Market proposal decimal place is higher than the market settlement asset decimal places"
            },
            {
              "name": "PROPOSAL_ERROR_TOO_MANY_PRICE_MONITORING_TRIGGERS",
              "number": "40",
              "description": "Market proposal contains too many price monitoring triggers"
            },
            {
              "name": "PROPOSAL_ERROR_ERC20_ADDRESS_ALREADY_IN_USE",
              "number": "41",
              "description": "Market proposal contains too many price monitoring triggers"
            },
            {
              "name": "PROPOSAL_ERROR_LP_PRICE_RANGE_NONPOSITIVE",
              "number": "42",
              "description": "LP price range must be larger than 0"
            },
            {
              "name": "PROPOSAL_ERROR_LP_PRICE_RANGE_TOO_LARGE",
              "number": "43",
              "description": "LP price range must not be larger than 100"
            },
            {
              "name": "PROPOSAL_ERROR_LINEAR_SLIPPAGE_FACTOR_OUT_OF_RANGE",
              "number": "44",
              "description": "Linear slippage factor is out of range, either negative or too large"
            },
            {
              "name": "PROPOSAL_ERROR_QUADRATIC_SLIPPAGE_FACTOR_OUT_OF_RANGE",
              "number": "45",
              "description": "Quadratic slippage factor is out of range, either negative or too large"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_SPOT",
              "number": "46",
              "description": "Validation failed for spot proposal"
            },
            {
              "name": "PROPOSAL_ERROR_SPOT_PRODUCT_DISABLED",
              "number": "47",
              "description": "Spot trading not enabled"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_SUCCESSOR_MARKET",
              "number": "48",
              "description": "Market proposal is invalid, either invalid insurance pool fraction, or it specifies a parent market that it can't succeed."
            },
            {
              "name": "PROPOSAL_ERROR_GOVERNANCE_TRANSFER_PROPOSAL_FAILED",
              "number": "49",
              "description": "Governance transfer proposal is invalid"
            },
            {
              "name": "PROPOSAL_ERROR_GOVERNANCE_TRANSFER_PROPOSAL_INVALID",
              "number": "50",
              "description": "Governance transfer proposal failed"
            },
            {
              "name": "PROPOSAL_ERROR_GOVERNANCE_CANCEL_TRANSFER_PROPOSAL_INVALID",
              "number": "51",
              "description": "Proposal for cancelling transfer is invalid, check proposal ID"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_MARKET_STATE_UPDATE",
              "number": "52",
              "description": "Proposal for updating market state is invalid"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_SLA_PARAMS",
              "number": "53",
              "description": "Liquidity provision SLA parameters are invalid"
            },
            {
              "name": "PROPOSAL_ERROR_MISSING_SLA_PARAMS",
              "number": "54",
              "description": "Mandatory liquidity provision SLA parameters are missing"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_PERPETUAL_PRODUCT",
              "number": "55",
              "description": "Perpetual market proposal contained invalid product definition"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_REFERRAL_PROGRAM",
              "number": "56",
              "description": "Referral program proposal is invalid"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_VOLUME_DISCOUNT_PROGRAM",
              "number": "57",
              "description": "Volume discount program proposal is invalid"
            }
          ]
        },
        {
          "name": "Value",
          "longName": "Vote.Value",
          "fullName": "vega.Vote.Value",
          "description": "Vote value",
          "values": [
            {
              "name": "VALUE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "VALUE_NO",
              "number": "1",
              "description": "Vote against the proposal"
            },
            {
              "name": "VALUE_YES",
              "number": "2",
              "description": "Vote in favour of the proposal"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "CancelTransfer",
          "longName": "CancelTransfer",
          "fullName": "vega.CancelTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "Configuration for cancellation of a governance-initiated transfer",
              "label": "",
              "type": "CancelTransferConfiguration",
              "longType": "CancelTransferConfiguration",
              "fullType": "vega.CancelTransferConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CancelTransferConfiguration",
          "longName": "CancelTransferConfiguration",
          "fullName": "vega.CancelTransferConfiguration",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfer_id",
              "description": "ID of the governance transfer proposal.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FutureProduct",
          "longName": "FutureProduct",
          "fullName": "vega.FutureProduct",
          "description": "Future product configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_asset",
              "description": "Asset ID for the product's settlement asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quote_name",
              "description": "Product quote name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_settlement_data",
              "description": "Data source spec describing the data source for settlement.",
              "label": "",
              "type": "DataSourceDefinition",
              "longType": "DataSourceDefinition",
              "fullType": "vega.DataSourceDefinition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_trading_termination",
              "description": "The external data source spec describing the data source of trading termination.",
              "label": "",
              "type": "DataSourceDefinition",
              "longType": "DataSourceDefinition",
              "fullType": "vega.DataSourceDefinition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_binding",
              "description": "Binding between the data source spec and the settlement data.",
              "label": "",
              "type": "DataSourceSpecToFutureBinding",
              "longType": "DataSourceSpecToFutureBinding",
              "fullType": "vega.DataSourceSpecToFutureBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceData",
          "longName": "GovernanceData",
          "fullName": "vega.GovernanceData",
          "description": "Governance data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "Governance proposal that is being voted on.",
              "label": "",
              "type": "Proposal",
              "longType": "Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "yes",
              "description": "All YES votes in favour of the proposal above.",
              "label": "repeated",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "no",
              "description": "All NO votes against the proposal above.",
              "label": "repeated",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "yes_party",
              "description": "All latest YES votes by party which is guaranteed to be unique,\nwhere key (string) is the party ID i.e. public key and\nvalue (Vote) is the vote cast by the given party.",
              "label": "repeated",
              "type": "YesPartyEntry",
              "longType": "GovernanceData.YesPartyEntry",
              "fullType": "vega.GovernanceData.YesPartyEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "no_party",
              "description": "All latest NO votes by party which is guaranteed to be unique,\nwhere key (string) is the party ID i.e. public key and\nvalue (Vote) is the vote cast by the given party.",
              "label": "repeated",
              "type": "NoPartyEntry",
              "longType": "GovernanceData.NoPartyEntry",
              "fullType": "vega.GovernanceData.NoPartyEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NoPartyEntry",
          "longName": "GovernanceData.NoPartyEntry",
          "fullName": "vega.GovernanceData.NoPartyEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "YesPartyEntry",
          "longName": "GovernanceData.YesPartyEntry",
          "fullName": "vega.GovernanceData.YesPartyEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InstrumentConfiguration",
          "longName": "InstrumentConfiguration",
          "fullName": "vega.InstrumentConfiguration",
          "description": "Instrument configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Instrument name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Instrument code, human-readable shortcode used to describe the instrument.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "future",
              "description": "Future.",
              "label": "",
              "type": "FutureProduct",
              "longType": "FutureProduct",
              "fullType": "vega.FutureProduct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            },
            {
              "name": "spot",
              "description": "Spot.",
              "label": "",
              "type": "SpotProduct",
              "longType": "SpotProduct",
              "fullType": "vega.SpotProduct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            },
            {
              "name": "perpetual",
              "description": "Perpetual.",
              "label": "",
              "type": "PerpetualProduct",
              "longType": "PerpetualProduct",
              "fullType": "vega.PerpetualProduct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewAsset",
          "longName": "NewAsset",
          "fullName": "vega.NewAsset",
          "description": "New asset on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "Configuration of the new asset.",
              "label": "",
              "type": "AssetDetails",
              "longType": "AssetDetails",
              "fullType": "vega.AssetDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewFreeform",
          "longName": "NewFreeform",
          "fullName": "vega.NewFreeform",
          "description": "Freeform proposal\nThis message is just used as a placeholder to sort out the nature of the\nproposal once parsed.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "NewMarket",
          "longName": "NewMarket",
          "fullName": "vega.NewMarket",
          "description": "New market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "Configuration of the new market.",
              "label": "",
              "type": "NewMarketConfiguration",
              "longType": "NewMarketConfiguration",
              "fullType": "vega.NewMarketConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewMarketConfiguration",
          "longName": "NewMarketConfiguration",
          "fullName": "vega.NewMarketConfiguration",
          "description": "Configuration for a new futures market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "instrument",
              "description": "New futures market instrument configuration.",
              "label": "",
              "type": "InstrumentConfiguration",
              "longType": "InstrumentConfiguration",
              "fullType": "vega.InstrumentConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimal_places",
              "description": "Decimal places used for the new futures market, sets the smallest price increment on the book.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional new futures market metadata, tags.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_parameters",
              "description": "Price monitoring parameters.",
              "label": "",
              "type": "PriceMonitoringParameters",
              "longType": "PriceMonitoringParameters",
              "fullType": "vega.PriceMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_monitoring_parameters",
              "description": "Liquidity monitoring parameters.",
              "label": "",
              "type": "LiquidityMonitoringParameters",
              "longType": "LiquidityMonitoringParameters",
              "fullType": "vega.LiquidityMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "simple",
              "description": "Simple risk model parameters, valid only if MODEL_SIMPLE is selected.",
              "label": "",
              "type": "SimpleModelParams",
              "longType": "SimpleModelParams",
              "fullType": "vega.SimpleModelParams",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "log_normal",
              "description": "Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected.",
              "label": "",
              "type": "LogNormalRiskModel",
              "longType": "LogNormalRiskModel",
              "fullType": "vega.LogNormalRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "position_decimal_places",
              "description": "Decimal places for order sizes, sets what size the smallest order / position on the futures market can be.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lp_price_range",
              "description": "DEPRECATED: Use liquidity SLA parameters instead.\nPercentage move up and down from the mid price which specifies the range of\nprice levels over which automated liquidity provisions will be deployed.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_lp_price_range",
              "defaultValue": ""
            },
            {
              "name": "linear_slippage_factor",
              "description": "Linear slippage factor is used to cap the slippage component of maintenance margin - it is applied to the slippage volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quadratic_slippage_factor",
              "description": "Quadratic slippage factor is used to cap the slippage component of maintenance margin - it is applied to the square of the slippage volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "successor",
              "description": "Successor configuration. If this proposal is meant to succeed a given market, then this should be set.",
              "label": "optional",
              "type": "SuccessorConfiguration",
              "longType": "SuccessorConfiguration",
              "fullType": "vega.SuccessorConfiguration",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_successor",
              "defaultValue": ""
            },
            {
              "name": "liquidity_sla_parameters",
              "description": "Liquidity SLA parameters",
              "label": "",
              "type": "LiquiditySLAParameters",
              "longType": "LiquiditySLAParameters",
              "fullType": "vega.LiquiditySLAParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewSpotMarket",
          "longName": "NewSpotMarket",
          "fullName": "vega.NewSpotMarket",
          "description": "New spot market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "Configuration of the new spot market.",
              "label": "",
              "type": "NewSpotMarketConfiguration",
              "longType": "NewSpotMarketConfiguration",
              "fullType": "vega.NewSpotMarketConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewSpotMarketConfiguration",
          "longName": "NewSpotMarketConfiguration",
          "fullName": "vega.NewSpotMarketConfiguration",
          "description": "Configuration for a new spot market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "instrument",
              "description": "New spot market instrument configuration.",
              "label": "",
              "type": "InstrumentConfiguration",
              "longType": "InstrumentConfiguration",
              "fullType": "vega.InstrumentConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimal_places",
              "description": "Decimal places used for the new spot market, sets the smallest price increment on the book.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional new spot market metadata, tags.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_parameters",
              "description": "Price monitoring parameters.",
              "label": "",
              "type": "PriceMonitoringParameters",
              "longType": "PriceMonitoringParameters",
              "fullType": "vega.PriceMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_stake_parameters",
              "description": "Specifies parameters related to target stake calculation.",
              "label": "",
              "type": "TargetStakeParameters",
              "longType": "TargetStakeParameters",
              "fullType": "vega.TargetStakeParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "simple",
              "description": "Simple risk model parameters, valid only if MODEL_SIMPLE is selected.",
              "label": "",
              "type": "SimpleModelParams",
              "longType": "SimpleModelParams",
              "fullType": "vega.SimpleModelParams",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "log_normal",
              "description": "Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected.",
              "label": "",
              "type": "LogNormalRiskModel",
              "longType": "LogNormalRiskModel",
              "fullType": "vega.LogNormalRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "position_decimal_places",
              "description": "Decimal places for order sizes, sets what size the smallest order / position on the spot market can be.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sla_params",
              "description": "Specifies the liquidity provision SLA parameters.",
              "label": "",
              "type": "LiquiditySLAParameters",
              "longType": "LiquiditySLAParameters",
              "fullType": "vega.LiquiditySLAParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewTransfer",
          "longName": "NewTransfer",
          "fullName": "vega.NewTransfer",
          "description": "New governance transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "Configuration for a new transfer.",
              "label": "",
              "type": "NewTransferConfiguration",
              "longType": "NewTransferConfiguration",
              "fullType": "vega.NewTransferConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewTransferConfiguration",
          "longName": "NewTransferConfiguration",
          "fullName": "vega.NewTransferConfiguration",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "source_type",
              "description": "Source account type, such as network treasury, market insurance pool",
              "label": "",
              "type": "AccountType",
              "longType": "AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source",
              "description": "If network treasury, field is empty, otherwise uses the market ID",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transfer_type",
              "description": "\"All or nothing\" or \"best effort\":\nAll or nothing: Transfers the specified amount or does not transfer anything\nBest effort: Transfers the specified amount or the max allowable amount if this is less than the specified amount",
              "label": "",
              "type": "GovernanceTransferType",
              "longType": "GovernanceTransferType",
              "fullType": "vega.GovernanceTransferType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Maximum amount to transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "ID of asset to transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fraction_of_balance",
              "description": "Maximum fraction of the source account's balance to transfer as a decimal - i.e. 0.1 = 10% of the balance",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "destination_type",
              "description": "Specifies the account type to transfer to: reward pool, party, network insurance pool, market insurance pool",
              "label": "",
              "type": "AccountType",
              "longType": "AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "destination",
              "description": "Specifies the account to transfer to, depending on the account type:\nNetwork treasury: leave empty\nParty: party's public key\nMarket insurance pool: market ID",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "one_off",
              "description": "",
              "label": "",
              "type": "OneOffTransfer",
              "longType": "OneOffTransfer",
              "fullType": "vega.OneOffTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "recurring",
              "description": "",
              "label": "",
              "type": "RecurringTransfer",
              "longType": "RecurringTransfer",
              "fullType": "vega.RecurringTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OneOffTransfer",
          "longName": "OneOffTransfer",
          "fullName": "vega.OneOffTransfer",
          "description": "Specific details for a one off transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deliver_on",
              "description": "Timestamp in Unix nanoseconds for when the transfer should be delivered into the receiver's account.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PerpetualProduct",
          "longName": "PerpetualProduct",
          "fullName": "vega.PerpetualProduct",
          "description": "Perpetual product configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_asset",
              "description": "Asset ID for the product's settlement asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quote_name",
              "description": "Product quote name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "margin_funding_factor",
              "description": "Controls how much the upcoming funding payment liability contributes to party's margin, in the range [0, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interest_rate",
              "description": "Continuously compounded interest rate used in funding rate calculation, in the range [-1, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "clamp_lower_bound",
              "description": "Lower bound for the clamp function used as part of the funding rate calculation, in the range [-1, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "clamp_upper_bound",
              "description": "Upper bound for the clamp function used as part of the funding rate calculation, in the range [-1, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_settlement_schedule",
              "description": "Data source spec describing the data source for settlement schedule.",
              "label": "",
              "type": "DataSourceDefinition",
              "longType": "DataSourceDefinition",
              "fullType": "vega.DataSourceDefinition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_settlement_data",
              "description": "Data source spec describing the data source for settlement.",
              "label": "",
              "type": "DataSourceDefinition",
              "longType": "DataSourceDefinition",
              "fullType": "vega.DataSourceDefinition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_binding",
              "description": "Binding between the data source spec and the settlement data.",
              "label": "",
              "type": "DataSourceSpecToPerpetualBinding",
              "longType": "DataSourceSpecToPerpetualBinding",
              "fullType": "vega.DataSourceSpecToPerpetualBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Proposal",
          "longName": "Proposal",
          "fullName": "vega.Proposal",
          "description": "Governance proposal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique proposal ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Proposal reference.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID i.e. public key of the party submitting the proposal.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "Current state of the proposal, i.e. open, passed, failed etc.",
              "label": "",
              "type": "State",
              "longType": "Proposal.State",
              "fullType": "vega.Proposal.State",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Proposal timestamp for date and time as Unix time in nanoseconds when proposal was submitted to the network.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "terms",
              "description": "Proposal configuration and the actual change that is meant to be executed when proposal is enacted.",
              "label": "",
              "type": "ProposalTerms",
              "longType": "ProposalTerms",
              "fullType": "vega.ProposalTerms",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "Reason for the current state of the proposal, this may be set in case of REJECTED and FAILED statuses.",
              "label": "optional",
              "type": "ProposalError",
              "longType": "ProposalError",
              "fullType": "vega.ProposalError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reason",
              "defaultValue": ""
            },
            {
              "name": "error_details",
              "description": "Detailed error associated to the reason.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_error_details",
              "defaultValue": ""
            },
            {
              "name": "rationale",
              "description": "Rationale behind a proposal.",
              "label": "",
              "type": "ProposalRationale",
              "longType": "ProposalRationale",
              "fullType": "vega.ProposalRationale",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "required_participation",
              "description": "Required vote participation for this proposal.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "required_majority",
              "description": "Required majority for this proposal.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "required_liquidity_provider_participation",
              "description": "Required participation from liquidity providers, optional but is required for market update proposal.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_required_liquidity_provider_participation",
              "defaultValue": ""
            },
            {
              "name": "required_liquidity_provider_majority",
              "description": "Required majority from liquidity providers, optional but is required for market update proposal.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_required_liquidity_provider_majority",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProposalRationale",
          "longName": "ProposalRationale",
          "fullName": "vega.ProposalRationale",
          "description": "Rationale behind a proposal.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "description",
              "description": "Description to show a short title / something in case the link goes offline.\nThis is to be between 0 and 20k unicode characters.\nThis is mandatory for all proposals.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "title",
              "description": "Title to be used to give a short description of the proposal in lists.\nThis is to be between 0 and 100 unicode characters.\nThis is mandatory for all proposals.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProposalTerms",
          "longName": "ProposalTerms",
          "fullName": "vega.ProposalTerms",
          "description": "Terms for a governance proposal on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "closing_timestamp",
              "description": "Timestamp as Unix time in seconds when voting closes for this proposal,\nconstrained by `minClose` and `maxClose` network parameters.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "enactment_timestamp",
              "description": "Timestamp as Unix time in seconds when proposal gets enacted if passed,\nconstrained by `minEnact` and `maxEnact` network parameters.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validation_timestamp",
              "description": "Validation timestamp as Unix time in seconds.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "update_market",
              "description": "Proposal change for modifying an existing futures market on Vega.",
              "label": "",
              "type": "UpdateMarket",
              "longType": "UpdateMarket",
              "fullType": "vega.UpdateMarket",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_market",
              "description": "Proposal change for creating new futures market on Vega.",
              "label": "",
              "type": "NewMarket",
              "longType": "NewMarket",
              "fullType": "vega.NewMarket",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "update_network_parameter",
              "description": "Proposal change for updating Vega network parameters.",
              "label": "",
              "type": "UpdateNetworkParameter",
              "longType": "UpdateNetworkParameter",
              "fullType": "vega.UpdateNetworkParameter",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_asset",
              "description": "Proposal change for creating new assets on Vega.",
              "label": "",
              "type": "NewAsset",
              "longType": "NewAsset",
              "fullType": "vega.NewAsset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_freeform",
              "description": "Proposal change for a freeform request, which can be voted on but does not change the behaviour of the system,\nand can be used to gauge community sentiment.",
              "label": "",
              "type": "NewFreeform",
              "longType": "NewFreeform",
              "fullType": "vega.NewFreeform",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "update_asset",
              "description": "Proposal change for updating an asset.",
              "label": "",
              "type": "UpdateAsset",
              "longType": "UpdateAsset",
              "fullType": "vega.UpdateAsset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_spot_market",
              "description": "Proposal change for creating new spot market on Vega.",
              "label": "",
              "type": "NewSpotMarket",
              "longType": "NewSpotMarket",
              "fullType": "vega.NewSpotMarket",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "update_spot_market",
              "description": "Proposal change for modifying an existing spot market on Vega.",
              "label": "",
              "type": "UpdateSpotMarket",
              "longType": "UpdateSpotMarket",
              "fullType": "vega.UpdateSpotMarket",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_transfer",
              "description": "Proposal change for a governance transfer.",
              "label": "",
              "type": "NewTransfer",
              "longType": "NewTransfer",
              "fullType": "vega.NewTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "cancel_transfer",
              "description": "Cancel a governance transfer.",
              "label": "",
              "type": "CancelTransfer",
              "longType": "CancelTransfer",
              "fullType": "vega.CancelTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "update_market_state",
              "description": "Proposal change for updating the state of a market.",
              "label": "",
              "type": "UpdateMarketState",
              "longType": "UpdateMarketState",
              "fullType": "vega.UpdateMarketState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "update_referral_program",
              "description": "Proposal change for updating the referral program.",
              "label": "",
              "type": "UpdateReferralProgram",
              "longType": "UpdateReferralProgram",
              "fullType": "vega.UpdateReferralProgram",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "update_volume_discount_program",
              "description": "Proposal change for updating the volume discount program.",
              "label": "",
              "type": "UpdateVolumeDiscountProgram",
              "longType": "UpdateVolumeDiscountProgram",
              "fullType": "vega.UpdateVolumeDiscountProgram",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RecurringTransfer",
          "longName": "RecurringTransfer",
          "fullName": "vega.RecurringTransfer",
          "description": "Specific details for a recurring transfer\n\nFirst epoch from which this transfer shall be paid.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "start_epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_epoch",
              "description": "Last epoch at which this transfer shall be paid.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_epoch",
              "defaultValue": ""
            },
            {
              "name": "dispatch_strategy",
              "description": "Optional parameter defining how a transfer is dispatched.",
              "label": "optional",
              "type": "DispatchStrategy",
              "longType": "DispatchStrategy",
              "fullType": "vega.DispatchStrategy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_dispatch_strategy",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralProgramChanges",
          "longName": "ReferralProgramChanges",
          "fullName": "vega.ReferralProgramChanges",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "benefit_tiers",
              "description": "Defined benefit tiers in increasing order. First element will give Tier 1,\nsecond element will give Tier 2, and so on. Determines the level of\nbenefit a party can expect based on performance criteria.",
              "label": "repeated",
              "type": "BenefitTier",
              "longType": "BenefitTier",
              "fullType": "vega.BenefitTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_of_program_timestamp",
              "description": "Timestamp as Unix time in seconds, after which when the current epoch\nends, the program will end and benefits will be disabled.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_length",
              "description": "Number of epochs over which to evaluate a referral set's running volume.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking_tiers",
              "description": "Defined staking tiers in increasing order. First element will give Tier 1,\nsecond element will give Tier 2, and so on. Determines the level of\nbenefit a party can expect based on their staking.",
              "label": "repeated",
              "type": "StakingTier",
              "longType": "StakingTier",
              "fullType": "vega.StakingTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SpotProduct",
          "longName": "SpotProduct",
          "fullName": "vega.SpotProduct",
          "description": "Spot product configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "base_asset",
              "description": "Base asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quote_asset",
              "description": "Quote asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Product name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SuccessorConfiguration",
          "longName": "SuccessorConfiguration",
          "fullName": "vega.SuccessorConfiguration",
          "description": "Configuration required to turn a new market proposal in to a successor market proposal.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parent_market_id",
              "description": "ID of the market that the successor should take over from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "insurance_pool_fraction",
              "description": "A decimal value between or equal to 0 and 1, specifying the fraction of the insurance pool balance that is carried over from the parent market to the successor.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateAsset",
          "longName": "UpdateAsset",
          "fullName": "vega.UpdateAsset",
          "description": "Update an existing asset on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Asset ID the update is for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "changes",
              "description": "Changes to apply on an existing asset.",
              "label": "",
              "type": "AssetDetailsUpdate",
              "longType": "AssetDetailsUpdate",
              "fullType": "vega.AssetDetailsUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateFutureProduct",
          "longName": "UpdateFutureProduct",
          "fullName": "vega.UpdateFutureProduct",
          "description": "Future product configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "quote_name",
              "description": "Human-readable name/abbreviation of the quote name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_settlement_data",
              "description": "The data source spec describing the data of settlement data.",
              "label": "",
              "type": "DataSourceDefinition",
              "longType": "DataSourceDefinition",
              "fullType": "vega.DataSourceDefinition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_trading_termination",
              "description": "The data source spec describing the data source for trading termination.",
              "label": "",
              "type": "DataSourceDefinition",
              "longType": "DataSourceDefinition",
              "fullType": "vega.DataSourceDefinition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_binding",
              "description": "The binding between the data source spec and the settlement data.",
              "label": "",
              "type": "DataSourceSpecToFutureBinding",
              "longType": "DataSourceSpecToFutureBinding",
              "fullType": "vega.DataSourceSpecToFutureBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateInstrumentConfiguration",
          "longName": "UpdateInstrumentConfiguration",
          "fullName": "vega.UpdateInstrumentConfiguration",
          "description": "Instrument configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "Instrument code, human-readable shortcode used to describe the instrument.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "future",
              "description": "Future.",
              "label": "",
              "type": "UpdateFutureProduct",
              "longType": "UpdateFutureProduct",
              "fullType": "vega.UpdateFutureProduct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            },
            {
              "name": "perpetual",
              "description": "Perpetual.",
              "label": "",
              "type": "UpdatePerpetualProduct",
              "longType": "UpdatePerpetualProduct",
              "fullType": "vega.UpdatePerpetualProduct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateMarket",
          "longName": "UpdateMarket",
          "fullName": "vega.UpdateMarket",
          "description": "Update an existing market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID the update is for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "changes",
              "description": "Updated configuration of the futures market.",
              "label": "",
              "type": "UpdateMarketConfiguration",
              "longType": "UpdateMarketConfiguration",
              "fullType": "vega.UpdateMarketConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateMarketConfiguration",
          "longName": "UpdateMarketConfiguration",
          "fullName": "vega.UpdateMarketConfiguration",
          "description": "Configuration to update a futures market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "instrument",
              "description": "Updated futures market instrument configuration.",
              "label": "",
              "type": "UpdateInstrumentConfiguration",
              "longType": "UpdateInstrumentConfiguration",
              "fullType": "vega.UpdateInstrumentConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional futures market metadata, tags.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_parameters",
              "description": "Price monitoring parameters.",
              "label": "",
              "type": "PriceMonitoringParameters",
              "longType": "PriceMonitoringParameters",
              "fullType": "vega.PriceMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_monitoring_parameters",
              "description": "Liquidity monitoring parameters.",
              "label": "",
              "type": "LiquidityMonitoringParameters",
              "longType": "LiquidityMonitoringParameters",
              "fullType": "vega.LiquidityMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "simple",
              "description": "Simple risk model parameters, valid only if MODEL_SIMPLE is selected.",
              "label": "",
              "type": "SimpleModelParams",
              "longType": "SimpleModelParams",
              "fullType": "vega.SimpleModelParams",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "log_normal",
              "description": "Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected.",
              "label": "",
              "type": "LogNormalRiskModel",
              "longType": "LogNormalRiskModel",
              "fullType": "vega.LogNormalRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "lp_price_range",
              "description": "DEPRECATED: Use liquidity SLA parameters instead.\nPercentage move up and down from the mid price which specifies the range of\nprice levels over which automated liquidity provisions will be deployed.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_lp_price_range",
              "defaultValue": ""
            },
            {
              "name": "linear_slippage_factor",
              "description": "Linear slippage factor is used to cap the slippage component of maintenance margin - it is applied to the slippage volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quadratic_slippage_factor",
              "description": "Quadratic slippage factor is used to cap the slippage component of maintenance margin - it is applied to the square of the slippage volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_sla_parameters",
              "description": "Liquidity SLA parameters",
              "label": "",
              "type": "LiquiditySLAParameters",
              "longType": "LiquiditySLAParameters",
              "fullType": "vega.LiquiditySLAParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateMarketState",
          "longName": "UpdateMarketState",
          "fullName": "vega.UpdateMarketState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "Configuration for governance-initiated change of a market's state",
              "label": "",
              "type": "UpdateMarketStateConfiguration",
              "longType": "UpdateMarketStateConfiguration",
              "fullType": "vega.UpdateMarketStateConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateMarketStateConfiguration",
          "longName": "UpdateMarketStateConfiguration",
          "fullName": "vega.UpdateMarketStateConfiguration",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "ID of the market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "update_type",
              "description": "Type of the market update",
              "label": "",
              "type": "MarketStateUpdateType",
              "longType": "MarketStateUpdateType",
              "fullType": "vega.MarketStateUpdateType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Settlement price, relevant only for market termination for futures markets",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_price",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateNetworkParameter",
          "longName": "UpdateNetworkParameter",
          "fullName": "vega.UpdateNetworkParameter",
          "description": "Update network configuration on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "The network parameter to update.",
              "label": "",
              "type": "NetworkParameter",
              "longType": "NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdatePerpetualProduct",
          "longName": "UpdatePerpetualProduct",
          "fullName": "vega.UpdatePerpetualProduct",
          "description": "Perpetual product configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "quote_name",
              "description": "Human-readable name/abbreviation of the quote name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "margin_funding_factor",
              "description": "Controls how much the upcoming funding payment liability contributes to party's margin, in the range [0, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interest_rate",
              "description": "Continuously compounded interest rate used in funding rate calculation, in the range [-1, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "clamp_lower_bound",
              "description": "Lower bound for the clamp function used as part of the funding rate calculation, in the range [-1, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "clamp_upper_bound",
              "description": "Upper bound for the clamp function used as part of the funding rate calculation, in the range [-1, 1].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_settlement_schedule",
              "description": "Data source spec describing the data source for settlement schedule.",
              "label": "",
              "type": "DataSourceDefinition",
              "longType": "DataSourceDefinition",
              "fullType": "vega.DataSourceDefinition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_for_settlement_data",
              "description": "Data source spec describing the data source for settlement.",
              "label": "",
              "type": "DataSourceDefinition",
              "longType": "DataSourceDefinition",
              "fullType": "vega.DataSourceDefinition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_source_spec_binding",
              "description": "Binding between the data source spec and the settlement data.",
              "label": "",
              "type": "DataSourceSpecToPerpetualBinding",
              "longType": "DataSourceSpecToPerpetualBinding",
              "fullType": "vega.DataSourceSpecToPerpetualBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateReferralProgram",
          "longName": "UpdateReferralProgram",
          "fullName": "vega.UpdateReferralProgram",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "Configuration for change to update a referral program.",
              "label": "",
              "type": "ReferralProgramChanges",
              "longType": "ReferralProgramChanges",
              "fullType": "vega.ReferralProgramChanges",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateSpotMarket",
          "longName": "UpdateSpotMarket",
          "fullName": "vega.UpdateSpotMarket",
          "description": "Update an existing spot market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID the update is for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "changes",
              "description": "Updated configuration of the spot market.",
              "label": "",
              "type": "UpdateSpotMarketConfiguration",
              "longType": "UpdateSpotMarketConfiguration",
              "fullType": "vega.UpdateSpotMarketConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateSpotMarketConfiguration",
          "longName": "UpdateSpotMarketConfiguration",
          "fullName": "vega.UpdateSpotMarketConfiguration",
          "description": "Configuration to update a spot market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "Optional spot market metadata, tags.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_parameters",
              "description": "Price monitoring parameters.",
              "label": "",
              "type": "PriceMonitoringParameters",
              "longType": "PriceMonitoringParameters",
              "fullType": "vega.PriceMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_stake_parameters",
              "description": "Specifies parameters related to target stake calculation.",
              "label": "",
              "type": "TargetStakeParameters",
              "longType": "TargetStakeParameters",
              "fullType": "vega.TargetStakeParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "simple",
              "description": "Simple risk model parameters, valid only if MODEL_SIMPLE is selected.",
              "label": "",
              "type": "SimpleModelParams",
              "longType": "SimpleModelParams",
              "fullType": "vega.SimpleModelParams",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "log_normal",
              "description": "Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected.",
              "label": "",
              "type": "LogNormalRiskModel",
              "longType": "LogNormalRiskModel",
              "fullType": "vega.LogNormalRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "sla_params",
              "description": "Specifies the liquidity provision SLA parameters.",
              "label": "",
              "type": "LiquiditySLAParameters",
              "longType": "LiquiditySLAParameters",
              "fullType": "vega.LiquiditySLAParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateVolumeDiscountProgram",
          "longName": "UpdateVolumeDiscountProgram",
          "fullName": "vega.UpdateVolumeDiscountProgram",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "Configuration for a change to update a volume discount program",
              "label": "",
              "type": "VolumeDiscountProgramChanges",
              "longType": "VolumeDiscountProgramChanges",
              "fullType": "vega.VolumeDiscountProgramChanges",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountProgramChanges",
          "longName": "VolumeDiscountProgramChanges",
          "fullName": "vega.VolumeDiscountProgramChanges",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "benefit_tiers",
              "description": "Defined benefit tiers in increasing order. First element will give Tier 1,\nsecond element will give Tier 2, and so on. Determines the level of\nbenefit a party can expect based on performance criteria.",
              "label": "repeated",
              "type": "VolumeBenefitTier",
              "longType": "VolumeBenefitTier",
              "fullType": "vega.VolumeBenefitTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_of_program_timestamp",
              "description": "Timestamp as Unix time in seconds, after which when the current epoch\nends, the program will end and benefits will be disabled.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_length",
              "description": "Number of epochs over which to evaluate a referral set's running volume.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Vote",
          "longName": "Vote",
          "fullName": "vega.Vote",
          "description": "Governance vote",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Voter's party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Which way the party voted.",
              "label": "",
              "type": "Value",
              "longType": "Vote.Value",
              "fullType": "vega.Vote.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposal_id",
              "description": "Proposal ID being voted on.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp in Unix nanoseconds when the vote was acknowledged by the network.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_governance_token_balance",
              "description": "Total number of governance token for the party that cast the vote.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_governance_token_weight",
              "description": "The weight of this vote based on the total number of governance tokens.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_equity_like_share_weight",
              "description": "The weight of the vote compared to the total amount of equity-like share on the market.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/commands/v1/commands.proto",
      "description": "",
      "package": "vega.commands.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Method",
          "longName": "UndelegateSubmission.Method",
          "fullName": "vega.commands.v1.UndelegateSubmission.Method",
          "description": "",
          "values": [
            {
              "name": "METHOD_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "METHOD_NOW",
              "number": "1",
              "description": "Undelegate straight away, losing all rewards for the current epoch."
            },
            {
              "name": "METHOD_AT_END_OF_EPOCH",
              "number": "2",
              "description": "Undelegate at the end of an epoch, retaining all rewards for the current epoch."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "ApplyReferralCode",
          "longName": "ApplyReferralCode",
          "fullName": "vega.commands.v1.ApplyReferralCode",
          "description": "Command that allows the submitter to join a referral set and earn a collective reduction in fees based on the activity of all members of that set.\nA party that joins a referral set is called a referee. A referee can only be a member of one referral set and cannot themselves be or become a referrer.\nTo switch to another referral set, a subsequent command can be sent and the switch will take effect at the end of the epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Referral code, normally the referral set ID, for the party to join.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BatchMarketInstructions",
          "longName": "BatchMarketInstructions",
          "fullName": "vega.commands.v1.BatchMarketInstructions",
          "description": "A command that allows the submission of a batch market instruction which wraps up multiple market instructions into a single transaction.\nThese instructions are then processed sequentially in the following order:\n- OrderCancellation\n- OrderAmendment\n- OrderSubmission\n- StopOrderSubmission\nwhere the maximum allow of instructions in a batch is controlled by the network parameter \"spam.protection.max.batchSize\".",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "cancellations",
              "description": "List of order cancellations to be processed sequentially.",
              "label": "repeated",
              "type": "OrderCancellation",
              "longType": "OrderCancellation",
              "fullType": "vega.commands.v1.OrderCancellation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amendments",
              "description": "List of order amendments to be processed sequentially.",
              "label": "repeated",
              "type": "OrderAmendment",
              "longType": "OrderAmendment",
              "fullType": "vega.commands.v1.OrderAmendment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submissions",
              "description": "List of order submissions to be processed sequentially.",
              "label": "repeated",
              "type": "OrderSubmission",
              "longType": "OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stop_orders_cancellation",
              "description": "List of stop order cancellations to be processed sequentially.",
              "label": "repeated",
              "type": "StopOrdersCancellation",
              "longType": "StopOrdersCancellation",
              "fullType": "vega.commands.v1.StopOrdersCancellation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stop_orders_submission",
              "description": "List of stop order submissions to be processed sequentially.",
              "label": "repeated",
              "type": "StopOrdersSubmission",
              "longType": "StopOrdersSubmission",
              "fullType": "vega.commands.v1.StopOrdersSubmission",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CancelTransfer",
          "longName": "CancelTransfer",
          "fullName": "vega.commands.v1.CancelTransfer",
          "description": "Command that can be used by the party that initiated a transfer to instruct the network to stop an active recurring transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfer_id",
              "description": "Transfer ID of the transfer to cancel.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateReferralSet",
          "longName": "CreateReferralSet",
          "fullName": "vega.commands.v1.CreateReferralSet",
          "description": "Command that a party can use to instruct the network to create a new referral set on the network.\nThe submitter of this command will become the referrer of the new set and cannot be the referrer or a referee of another set.\nA referrer can use the referral set ID as a referral code to attract others to the Vega network and have fees reduced for the referral set.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "is_team",
              "description": "Whether or not the referral set should be considered a team that can participate in team games on the network.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "team",
              "description": "Team details, if the referral set is to be considered a team.",
              "label": "optional",
              "type": "Team",
              "longType": "CreateReferralSet.Team",
              "fullType": "vega.commands.v1.CreateReferralSet.Team",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_team",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Team",
          "longName": "CreateReferralSet.Team",
          "fullName": "vega.commands.v1.CreateReferralSet.Team",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "team_url",
              "description": "External link to the team's homepage.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_team_url",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "External link to an avatar for the team.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_avatar_url",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "Whether or not the team is closed to new party members.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegateSubmission",
          "longName": "DelegateSubmission",
          "fullName": "vega.commands.v1.DelegateSubmission",
          "description": "Command to allow a token holder to delegate their tokens to a validator to help secure the network.\nA token holder delegating to a validator will earn rewards based on the amount they have delegated, and the performance of the chosen validator.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node ID to delegate stake to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount of stake to delegate, as an unsigned integer scaled to the governance asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IcebergOpts",
          "longName": "IcebergOpts",
          "fullName": "vega.commands.v1.IcebergOpts",
          "description": "Iceberg order options",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "peak_size",
              "description": "Size of the order that is made visible and can be traded with during the execution of a single order.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "minimum_visible_size",
              "description": "Minimum allowed remaining size of the order before it is replenished back to its peak size.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IssueSignatures",
          "longName": "IssueSignatures",
          "fullName": "vega.commands.v1.IssueSignatures",
          "description": "Command that can be used by a validator to instruct the network to generate signatures to add or remove validators from the multisig-control contract.\nSignatures can only be generated for validator nodes that have been promoted or demoted from the consensus validator set, and any attempt to generate signatures for another node will be rejected.\nThe generated signatures can only be submitted to the contract by the Ethereum addresses included in the command.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "submitter",
              "description": "Ethereum address which will submit the signatures to the smart contract.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "kind",
              "description": "What kind of signatures to generate, namely for whether a signer is being added or removed.",
              "label": "",
              "type": "NodeSignatureKind",
              "longType": "NodeSignatureKind",
              "fullType": "vega.commands.v1.NodeSignatureKind",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_node_id",
              "description": "Node ID of the validator node that will be signed in or out of the smart contract.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionAmendment",
          "longName": "LiquidityProvisionAmendment",
          "fullName": "vega.commands.v1.LiquidityProvisionAmendment",
          "description": "Command that allows a liquidity provider to update the details of their existing liquidity commitment.\nAny field that is left unset or as a default value indicates that this field on the original submission will be left unchanged.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market that the submitter wants to amend the liquidity commitment for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commitment_amount",
              "description": "New commitment amount.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "New nominated liquidity fee factor.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "New arbitrary reference to be added to every order created out of this liquidity provision submission.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionCancellation",
          "longName": "LiquidityProvisionCancellation",
          "fullName": "vega.commands.v1.LiquidityProvisionCancellation",
          "description": "Command that allows a liquidity provider to inform the network that they will stop providing liquidity for a market.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market that the submitter will stop providing liquidity for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionSubmission",
          "longName": "LiquidityProvisionSubmission",
          "fullName": "vega.commands.v1.LiquidityProvisionSubmission",
          "description": "A command that indicates to the network the party's intention to supply liquidity to the given market and become a liquidity provider.\nAn active liquidity provider for a market will earn fees based on the trades that occur in the market.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market that the submitter wishes to provide liquidity for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commitment_amount",
              "description": "Amount that the submitter will commit as liquidity to the market, specified as a unitless number in the settlement asset of the market.\nThis field is an unsigned integer scaled using the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per setting fees and rewarding liquidity providers.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Arbitrary reference to be added to every order created out of this liquidity provision submission.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OneOffTransfer",
          "longName": "OneOffTransfer",
          "fullName": "vega.commands.v1.OneOffTransfer",
          "description": "Details for a one-off transfer.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deliver_on",
              "description": "Timestamp, in Unix nanoseconds, for when the transfer should be executed, i.e., assets transferred into the receiver's account.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderAmendment",
          "longName": "OrderAmendment",
          "fullName": "vega.commands.v1.OrderAmendment",
          "description": "A command that allows a party to update the details of an existing order.\nAny field that is left unset or as a default value indicates that this field on the original order will be left unchanged.\nIt is not possible to change an order's type through this command.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "ID of the order to amend.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID that the order was originally submitted to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "New price for the order. This field is an unsigned integer scaled to the market's decimal places.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_price",
              "defaultValue": ""
            },
            {
              "name": "size_delta",
              "description": "Amend the size for the order by the delta specified:\n- To reduce the size from the current value set a negative integer value\n- To increase the size from the current value, set a positive integer value\n- To leave the size unchanged set a value of zero\nThis field needs to be scaled using the market's position decimal places.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires_at",
              "description": "Timestamp, in Unix nanoseconds, for the new expiry time for the order.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_expires_at",
              "defaultValue": ""
            },
            {
              "name": "time_in_force",
              "description": "New time in force for the order.",
              "label": "",
              "type": "TimeInForce",
              "longType": "vega.Order.TimeInForce",
              "fullType": "vega.Order.TimeInForce",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_offset",
              "description": "New pegged offset for the order.\nThis field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_reference",
              "description": "New pegged reference for the order.",
              "label": "",
              "type": "PeggedReference",
              "longType": "vega.PeggedReference",
              "fullType": "vega.PeggedReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderCancellation",
          "longName": "OrderCancellation",
          "fullName": "vega.commands.v1.OrderCancellation",
          "description": "A command that instructs the network to cancel orders, active or partially filled, that were previously submitted by the sender of this transaction.\nIt is not possible to cancel another party's order with this command.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Restrict cancellations to an order with the given ID. If set, then a market ID must also be provided.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Restrict cancellations to those submitted to the given market. If not set, all stop orders across all markets will be cancelled.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderSubmission",
          "longName": "OrderSubmission",
          "fullName": "vega.commands.v1.OrderSubmission",
          "description": "A command that submits an order to the Vega network for a given market.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to submit the order to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the order, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places,\nrequired field for limit orders, however it is not required for market orders.\nThis field is an unsigned integer scaled to the market's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size for the order, for example, in a futures market the size equals the number of units.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "side",
              "description": "Which side of the order book the order is for, e.g. buy or sell.",
              "label": "",
              "type": "Side",
              "longType": "vega.Side",
              "fullType": "vega.Side",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_in_force",
              "description": "Time in force indicates how long an order will remain active before it is executed or expires..",
              "label": "",
              "type": "TimeInForce",
              "longType": "vega.Order.TimeInForce",
              "fullType": "vega.Order.TimeInForce",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires_at",
              "description": "Timestamp, in Unix nanoseconds, for when the order will expire. Can only be set when the order's time-in-force is GTT.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of the order.",
              "label": "",
              "type": "Type",
              "longType": "vega.Order.Type",
              "fullType": "vega.Order.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Arbitrary optional reference for the order, to be used as a human-readable non-unique identifier for the order.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_order",
              "description": "Pegged order details. If set, the order's price will be offset from a particular reference price of the order book at all times.",
              "label": "",
              "type": "PeggedOrder",
              "longType": "vega.PeggedOrder",
              "fullType": "vega.PeggedOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "post_only",
              "description": "If set, the order will only be executed if it would not trade on entry to the order book. Only valid for limit orders.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reduce_only",
              "description": "If set, the order will only be executed if the outcome of the trade moves the trader's position closer to 0.\nOnly valid for non-persistent orders.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "iceberg_opts",
              "description": "Iceberg order details. If set, the order will exist on the order book in chunks.",
              "label": "optional",
              "type": "IcebergOpts",
              "longType": "IcebergOpts",
              "fullType": "vega.commands.v1.IcebergOpts",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_iceberg_opts",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProposalSubmission",
          "longName": "ProposalSubmission",
          "fullName": "vega.commands.v1.ProposalSubmission",
          "description": "Command that allows a token holder to submit a governance proposal that can be voted on by any other token holders, and eventually enacted on the Vega network.\nFor example this command can be used to propose a new market.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Arbitrary human-readable reference identifying the proposal.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "terms",
              "description": "Proposal terms containing the type and details of the proposal, as well as time spans for voting and enactment.",
              "label": "",
              "type": "ProposalTerms",
              "longType": "vega.ProposalTerms",
              "fullType": "vega.ProposalTerms",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rationale",
              "description": "Rationale behind a proposal.",
              "label": "",
              "type": "ProposalRationale",
              "longType": "vega.ProposalRationale",
              "fullType": "vega.ProposalRationale",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RecurringTransfer",
          "longName": "RecurringTransfer",
          "fullName": "vega.commands.v1.RecurringTransfer",
          "description": "Details for a recurring transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "start_epoch",
              "description": "First epoch from which this transfer shall be executed.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_epoch",
              "description": "Last epoch at which this transfer shall be executed.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_epoch",
              "defaultValue": ""
            },
            {
              "name": "factor",
              "description": "Factor that the initial transfer amount is multiplied by for each epoch that it is executed.\nFor example if the initial transfer amount is 1000 and the factor is 0.5, then the amounts transferred per epoch will be 1000, 500, 250, 125, etc.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dispatch_strategy",
              "description": "Optional parameter defining how a transfer is dispatched.",
              "label": "",
              "type": "DispatchStrategy",
              "longType": "vega.DispatchStrategy",
              "fullType": "vega.DispatchStrategy",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopOrderSetup",
          "longName": "StopOrderSetup",
          "fullName": "vega.commands.v1.StopOrderSetup",
          "description": "Price and expiry configuration for a stop order.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "order_submission",
              "description": "Order to be submitted once the trigger is breached.",
              "label": "",
              "type": "OrderSubmission",
              "longType": "OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires_at",
              "description": "Timestamp, in Unix nanoseconds, for when the stop order should expire. If not set the stop order will not expire.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_expires_at",
              "defaultValue": ""
            },
            {
              "name": "expiry_strategy",
              "description": "Strategy to adopt if the expiry time is reached.",
              "label": "optional",
              "type": "ExpiryStrategy",
              "longType": "vega.StopOrder.ExpiryStrategy",
              "fullType": "vega.StopOrder.ExpiryStrategy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_expiry_strategy",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Order will be submitted if the last traded price on the market breaches the given price.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "trigger",
              "defaultValue": ""
            },
            {
              "name": "trailing_percent_offset",
              "description": "Order will be submitted if the last traded price has moved the given percent from the highest/lowest mark price since the stop order was submitted.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "trigger",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopOrdersCancellation",
          "longName": "StopOrdersCancellation",
          "fullName": "vega.commands.v1.StopOrdersCancellation",
          "description": "A command that instructs the network to cancel untriggered stop orders that were submitted by the sender of this transaction.\nIf any cancelled stop order is part of an OCO, both stop orders will be cancelled.\nIt is not possible to cancel another party's stop orders with this command.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Restrict cancellations to those submitted to the given market. If not set, all stop orders across all markets will be cancelled.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "stop_order_id",
              "description": "Restrict cancellations to a stop order with the given ID. If set, then a market ID must also be provided.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_stop_order_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopOrdersSubmission",
          "longName": "StopOrdersSubmission",
          "fullName": "vega.commands.v1.StopOrdersSubmission",
          "description": "A command that allows a party to submit a stop order for a given market.\nA stop order is a normal order that remains off the order book and is only submitted if a given trigger is breached from a particular direction.\nIf both rises-above and falls-below are configured, then if one is triggered the other will be cancelled (OCO).",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "rises_above",
              "description": "Stop order that will be triggered if the price rises above a given trigger price.",
              "label": "optional",
              "type": "StopOrderSetup",
              "longType": "StopOrderSetup",
              "fullType": "vega.commands.v1.StopOrderSetup",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_rises_above",
              "defaultValue": ""
            },
            {
              "name": "falls_below",
              "description": "Stop order that will be triggered if the price falls below a given trigger price.",
              "label": "optional",
              "type": "StopOrderSetup",
              "longType": "StopOrderSetup",
              "fullType": "vega.commands.v1.StopOrderSetup",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_falls_below",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transfer",
          "longName": "Transfer",
          "fullName": "vega.commands.v1.Transfer",
          "description": "Command that allows a party to move assets from one account to another.\nA transfer can be set up as a single one-off transfer, or a recurring transfer that occurs once at the start of each epoch.\nEach transfer incurs a fee as specified by the network parameter `transfer.fee.factor`",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "from_account_type",
              "description": "Account type from which the funds of the party should be taken.",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "Public key of the destination account.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account_type",
              "description": "Type of the destination account.",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset ID of the asset to be transferred.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount to be taken from the source account, as an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Reference to be attached to the transfer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "one_off",
              "description": "Details of a one-off transfer that is executed once at a specified time.",
              "label": "",
              "type": "OneOffTransfer",
              "longType": "OneOffTransfer",
              "fullType": "vega.commands.v1.OneOffTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "recurring",
              "description": "Details of a transfer that is executed once every epoch until stopped.",
              "label": "",
              "type": "RecurringTransfer",
              "longType": "RecurringTransfer",
              "fullType": "vega.commands.v1.RecurringTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UndelegateSubmission",
          "longName": "UndelegateSubmission",
          "fullName": "vega.commands.v1.UndelegateSubmission",
          "description": "Command to allow a token holder to instruct the network to remove their delegated stake from a given validator node.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node ID to undelegate stake from.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount to undelegate, as an unsigned integer scaled to the governance asset's decimal places.\nIf not set, then all delegations to the given validator node will be removed.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "method",
              "description": "Method of delegation.",
              "label": "",
              "type": "Method",
              "longType": "UndelegateSubmission.Method",
              "fullType": "vega.commands.v1.UndelegateSubmission.Method",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateReferralSet",
          "longName": "UpdateReferralSet",
          "fullName": "vega.commands.v1.UpdateReferralSet",
          "description": "A command that allows the referrer of a referral set to update team details for a referral set.\nAny field that is left unset or has a default value indicates that this field on the original referral set will be left unchanged.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ID of the referral set to update.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_team",
              "description": "Whether or not the referral set should be considered a team that can participate in team games on the network.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "team",
              "description": "Team details, if the referral set is to be considered a team.",
              "label": "optional",
              "type": "Team",
              "longType": "UpdateReferralSet.Team",
              "fullType": "vega.commands.v1.UpdateReferralSet.Team",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_team",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Team",
          "longName": "UpdateReferralSet.Team",
          "fullName": "vega.commands.v1.UpdateReferralSet.Team",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "New name of the team.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "team_url",
              "description": "New link to the team's homepage.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_team_url",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "New link to an avatar for the team.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_avatar_url",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "Whether or not the team is closed to new party members.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_closed",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VoteSubmission",
          "longName": "VoteSubmission",
          "fullName": "vega.commands.v1.VoteSubmission",
          "description": "Command that allows a token holder to vote for or against an active governance proposal.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal_id",
              "description": "Submit vote for the specified proposal ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Actual value of the vote.",
              "label": "",
              "type": "Value",
              "longType": "vega.Vote.Value",
              "fullType": "vega.Vote.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawSubmission",
          "longName": "WithdrawSubmission",
          "fullName": "vega.commands.v1.WithdrawSubmission",
          "description": "Command to instruct the network to process an asset withdrawal from the Vega network.\nThe process is specific to the destination foreign chain, for example, a withdrawal to Ethereum will generate signatures\nthat allow funds to be taken across the bridge.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "amount",
              "description": "Amount to be withdrawn, as an unsigned integer scaled to the asset's decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset to be withdrawn.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ext",
              "description": "Details specific to the foreign chain, such as the receiver address.",
              "label": "",
              "type": "WithdrawExt",
              "longType": "vega.WithdrawExt",
              "fullType": "vega.WithdrawExt",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/commands/v1/data.proto",
      "description": "",
      "package": "vega.commands.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "OracleSource",
          "longName": "OracleDataSubmission.OracleSource",
          "fullName": "vega.commands.v1.OracleDataSubmission.OracleSource",
          "description": "Supported oracle sources",
          "values": [
            {
              "name": "ORACLE_SOURCE_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "ORACLE_SOURCE_OPEN_ORACLE",
              "number": "1",
              "description": "Specifies that the payload will be base64 encoded JSON conforming to the Open Oracle standard."
            },
            {
              "name": "ORACLE_SOURCE_JSON",
              "number": "2",
              "description": "Specifies that the payload will be base64 encoded JSON, but does not specify the shape of the data."
            },
            {
              "name": "ORACLE_SOURCE_ETHEREUM",
              "number": "3",
              "description": "Specifies that the payload will be base64 encoded JSON conforming to the ETH standard."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "OracleDataSubmission",
          "longName": "OracleDataSubmission",
          "fullName": "vega.commands.v1.OracleDataSubmission",
          "description": "Command to submit new oracle data from third party providers",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "source",
              "description": "Source from which the data is coming from.",
              "label": "",
              "type": "OracleSource",
              "longType": "OracleDataSubmission.OracleSource",
              "fullType": "vega.commands.v1.OracleDataSubmission.OracleSource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payload",
              "description": "Data provided by the data source.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/commands/v1/transaction.proto",
      "description": "",
      "package": "vega.commands.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "TxVersion",
          "longName": "TxVersion",
          "fullName": "vega.commands.v1.TxVersion",
          "description": "Transaction versions to maintain backwards compatibility of transaction formats.",
          "values": [
            {
              "name": "TX_VERSION_UNSPECIFIED",
              "number": "0",
              "description": "Transaction version is unspecified."
            },
            {
              "name": "TX_VERSION_V2",
              "number": "2",
              "description": "Transaction requires the addition of a proof-of-work calculation."
            },
            {
              "name": "TX_VERSION_V3",
              "number": "3",
              "description": "Transaction input data contains a prepended chain ID to prevent use of a single transaction across multiple networks."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "InputData",
          "longName": "InputData",
          "fullName": "vega.commands.v1.InputData",
          "description": "Input data for a transaction containing a network command for the Vega network to execute.\nOnce populated the protobuf message should be marshalled into a byte array and included in a transaction message.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "nonce",
              "description": "Arbitrary number used to provide uniqueness to the signature of two otherwise identical input data, preventing replay attacks.\nMust be set to a different value for all new transactions sent by a party. It is advised to generate this number randomly.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "Block height which has been used to calculate the transaction proof-of-work.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_submission",
              "description": "Command to submit an order.",
              "label": "",
              "type": "OrderSubmission",
              "longType": "OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "order_cancellation",
              "description": "Command to cancel an order.",
              "label": "",
              "type": "OrderCancellation",
              "longType": "OrderCancellation",
              "fullType": "vega.commands.v1.OrderCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "order_amendment",
              "description": "Command to amend an order.",
              "label": "",
              "type": "OrderAmendment",
              "longType": "OrderAmendment",
              "fullType": "vega.commands.v1.OrderAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "withdraw_submission",
              "description": "Command to submit a withdrawal.",
              "label": "",
              "type": "WithdrawSubmission",
              "longType": "WithdrawSubmission",
              "fullType": "vega.commands.v1.WithdrawSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "proposal_submission",
              "description": "Command to submit a governance proposal.",
              "label": "",
              "type": "ProposalSubmission",
              "longType": "ProposalSubmission",
              "fullType": "vega.commands.v1.ProposalSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "vote_submission",
              "description": "Command to submit a vote on a governance proposal.",
              "label": "",
              "type": "VoteSubmission",
              "longType": "VoteSubmission",
              "fullType": "vega.commands.v1.VoteSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_submission",
              "description": "Command to submit a liquidity commitment.",
              "label": "",
              "type": "LiquidityProvisionSubmission",
              "longType": "LiquidityProvisionSubmission",
              "fullType": "vega.commands.v1.LiquidityProvisionSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "delegate_submission",
              "description": "Command to delegate tokens to a validator.",
              "label": "",
              "type": "DelegateSubmission",
              "longType": "DelegateSubmission",
              "fullType": "vega.commands.v1.DelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "undelegate_submission",
              "description": "Command to remove tokens delegated to a validator.",
              "label": "",
              "type": "UndelegateSubmission",
              "longType": "UndelegateSubmission",
              "fullType": "vega.commands.v1.UndelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_cancellation",
              "description": "Command to cancel a liquidity commitment.",
              "label": "",
              "type": "LiquidityProvisionCancellation",
              "longType": "LiquidityProvisionCancellation",
              "fullType": "vega.commands.v1.LiquidityProvisionCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_amendment",
              "description": "Command to amend a liquidity commitment.",
              "label": "",
              "type": "LiquidityProvisionAmendment",
              "longType": "LiquidityProvisionAmendment",
              "fullType": "vega.commands.v1.LiquidityProvisionAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "Command to submit a transfer.",
              "label": "",
              "type": "Transfer",
              "longType": "Transfer",
              "fullType": "vega.commands.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "cancel_transfer",
              "description": "Command to cancel a recurring transfer.",
              "label": "",
              "type": "CancelTransfer",
              "longType": "CancelTransfer",
              "fullType": "vega.commands.v1.CancelTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "announce_node",
              "description": "Command used by a node operator to announce its node as a pending validator.",
              "label": "",
              "type": "AnnounceNode",
              "longType": "AnnounceNode",
              "fullType": "vega.commands.v1.AnnounceNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "batch_market_instructions",
              "description": "Command to submit a batch of order instructions.",
              "label": "",
              "type": "BatchMarketInstructions",
              "longType": "BatchMarketInstructions",
              "fullType": "vega.commands.v1.BatchMarketInstructions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "stop_orders_submission",
              "description": "Command to submit a pair of stop orders.",
              "label": "",
              "type": "StopOrdersSubmission",
              "longType": "StopOrdersSubmission",
              "fullType": "vega.commands.v1.StopOrdersSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "stop_orders_cancellation",
              "description": "Command to cancel stop orders.",
              "label": "",
              "type": "StopOrdersCancellation",
              "longType": "StopOrdersCancellation",
              "fullType": "vega.commands.v1.StopOrdersCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "create_referral_set",
              "description": "Command to create a referral set.",
              "label": "",
              "type": "CreateReferralSet",
              "longType": "CreateReferralSet",
              "fullType": "vega.commands.v1.CreateReferralSet",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "update_referral_set",
              "description": "Command to update a referral set.",
              "label": "",
              "type": "UpdateReferralSet",
              "longType": "UpdateReferralSet",
              "fullType": "vega.commands.v1.UpdateReferralSet",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "apply_referral_code",
              "description": "Command to apply a referral code.",
              "label": "",
              "type": "ApplyReferralCode",
              "longType": "ApplyReferralCode",
              "fullType": "vega.commands.v1.ApplyReferralCode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "node_vote",
              "description": "Validator command sent automatically to vote on that validity of an external resource.",
              "label": "",
              "type": "NodeVote",
              "longType": "NodeVote",
              "fullType": "vega.commands.v1.NodeVote",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "node_signature",
              "description": "Validator command sent automatically to provide signatures for the Ethereum bridge.",
              "label": "",
              "type": "NodeSignature",
              "longType": "NodeSignature",
              "fullType": "vega.commands.v1.NodeSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "chain_event",
              "description": "Validator command sent automatically to notify the Vega chain of an off-chain event.",
              "label": "",
              "type": "ChainEvent",
              "longType": "ChainEvent",
              "fullType": "vega.commands.v1.ChainEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "key_rotate_submission",
              "description": "Validator command sent manually by a node operator to rotate their node's Vega keys.",
              "label": "",
              "type": "KeyRotateSubmission",
              "longType": "KeyRotateSubmission",
              "fullType": "vega.commands.v1.KeyRotateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "state_variable_proposal",
              "description": "Validator command sent automatically to reach consensus on floating point values.",
              "label": "",
              "type": "StateVariableProposal",
              "longType": "StateVariableProposal",
              "fullType": "vega.commands.v1.StateVariableProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "validator_heartbeat",
              "description": "Validator command sent automatically to signal regular participation in the network.",
              "label": "",
              "type": "ValidatorHeartbeat",
              "longType": "ValidatorHeartbeat",
              "fullType": "vega.commands.v1.ValidatorHeartbeat",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "ethereum_key_rotate_submission",
              "description": "Validator command sent manually by a node operator to rotate their node's Ethereum keys.",
              "label": "",
              "type": "EthereumKeyRotateSubmission",
              "longType": "EthereumKeyRotateSubmission",
              "fullType": "vega.commands.v1.EthereumKeyRotateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposal",
              "description": "Validator command sent manually to propose a protocol upgrade.",
              "label": "",
              "type": "ProtocolUpgradeProposal",
              "longType": "ProtocolUpgradeProposal",
              "fullType": "vega.commands.v1.ProtocolUpgradeProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "issue_signatures",
              "description": "Command to request signatures to amend the multisig-control contract.",
              "label": "",
              "type": "IssueSignatures",
              "longType": "IssueSignatures",
              "fullType": "vega.commands.v1.IssueSignatures",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "oracle_data_submission",
              "description": "Command to submit external oracle data.",
              "label": "",
              "type": "OracleDataSubmission",
              "longType": "OracleDataSubmission",
              "fullType": "vega.commands.v1.OracleDataSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProofOfWork",
          "longName": "ProofOfWork",
          "fullName": "vega.commands.v1.ProofOfWork",
          "description": "Components needed for the network to verify proof-of-work.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tid",
              "description": "Unique transaction identifier used to seed the proof-of-work hash.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Number which, combined with the transaction identifier, will produce a hash with the required number of leading zeros to be accepted by the network.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transaction",
          "longName": "Transaction",
          "fullName": "vega.commands.v1.Transaction",
          "description": "Transaction containing a command that can be sent to instruct the network to execute an action.\nA transaction contains a byte string representation of the input data which must then be signed, with the signature added to the transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "input_data",
              "description": "Protobuf message of type `InputData` marshalled into bytes. If the transaction version is V3 or higher then this bytes\nstring must be prepended with `chain_id_as_byes + \\0`.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Signature of the input data field, signed by the sender of this transaction.",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "Hex-encoded address of the sender. Not supported yet.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "from",
              "defaultValue": ""
            },
            {
              "name": "pub_key",
              "description": "Hex-encoded public key of the sender.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "from",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of the transaction.",
              "label": "",
              "type": "TxVersion",
              "longType": "TxVersion",
              "fullType": "vega.commands.v1.TxVersion",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pow",
              "description": "Proof-of-work containing the random transaction ID used by the client and the nonce.",
              "label": "",
              "type": "ProofOfWork",
              "longType": "ProofOfWork",
              "fullType": "vega.commands.v1.ProofOfWork",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "blockexplorer/api/v1/blockexplorer.proto",
      "description": "",
      "package": "blockexplorer.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GetTransactionRequest",
          "longName": "GetTransactionRequest",
          "fullName": "blockexplorer.api.v1.GetTransactionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hash",
              "description": "Hash of the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetTransactionResponse",
          "longName": "GetTransactionResponse",
          "fullName": "blockexplorer.api.v1.GetTransactionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transaction",
              "description": "Transaction corresponding to the hash",
              "label": "",
              "type": "Transaction",
              "longType": "Transaction",
              "fullType": "blockexplorer.api.v1.Transaction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InfoRequest",
          "longName": "InfoRequest",
          "fullName": "blockexplorer.api.v1.InfoRequest",
          "description": "node information",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "InfoResponse",
          "longName": "InfoResponse",
          "fullName": "blockexplorer.api.v1.InfoResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Semver formatted version of the data node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commit_hash",
              "description": "Commit hash from which the data node was built",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTransactionsRequest",
          "longName": "ListTransactionsRequest",
          "fullName": "blockexplorer.api.v1.ListTransactionsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "limit",
              "description": "Number of transactions to be returned from the blockchain.\nThis is deprecated, use first and last instead.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": "",
              "options": {
                "deprecated": true
              }
            },
            {
              "name": "before",
              "description": "Optional cursor to paginate the request",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_before",
              "defaultValue": ""
            },
            {
              "name": "after",
              "description": "Optional cursor to paginate the request",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_after",
              "defaultValue": ""
            },
            {
              "name": "filters",
              "description": "Filters to apply to the request",
              "label": "repeated",
              "type": "FiltersEntry",
              "longType": "ListTransactionsRequest.FiltersEntry",
              "fullType": "blockexplorer.api.v1.ListTransactionsRequest.FiltersEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cmd_types",
              "description": "Transaction command types filter, for listing transactions with specified command types",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "exclude_cmd_types",
              "description": "Transaction command types exclusion filter, for listing all the transactions except the ones with specified command types",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parties",
              "description": "Party IDs filter, can be sender or receiver",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "first",
              "description": "Number of transactions to be returned from the blockchain. Use in conjunction with the `after` cursor to paginate forwards.\nOn its own, this will return the first `first` transactions.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last",
              "description": "Number of transactions to be returned from the blockchain. Use in conjunction with the `before` cursor to paginate backwards.\nOn its own, this will return the last `last` transactions.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FiltersEntry",
          "longName": "ListTransactionsRequest.FiltersEntry",
          "fullName": "blockexplorer.api.v1.ListTransactionsRequest.FiltersEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTransactionsResponse",
          "longName": "ListTransactionsResponse",
          "fullName": "blockexplorer.api.v1.ListTransactionsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transactions",
              "description": "Transaction corresponding to the specific request and filters",
              "label": "repeated",
              "type": "Transaction",
              "longType": "Transaction",
              "fullType": "blockexplorer.api.v1.Transaction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transaction",
          "longName": "Transaction",
          "fullName": "blockexplorer.api.v1.Transaction",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "block",
              "description": "Height of the block the transaction was found in",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "index",
              "description": "Index of the transaction in the block",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "Hash of the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "Vega public key of the transaction's submitter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Results code of the transaction. 0 indicates the transaction was successful",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor for this transaction. This is used for paginating results",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "command",
              "description": "Actual command of the transaction",
              "label": "",
              "type": "InputData",
              "longType": "vega.commands.v1.InputData",
              "fullType": "vega.commands.v1.InputData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Signature generated by the submitter for the transaction",
              "label": "",
              "type": "Signature",
              "longType": "vega.commands.v1.Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "Optional error happening when processing / checking the transaction\nThis should be set if error code is not 0",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_error",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Timestamp when the transaction happened, using RFC3399 format.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version format of the transaction",
              "label": "",
              "type": "TxVersion",
              "longType": "vega.commands.v1.TxVersion",
              "fullType": "vega.commands.v1.TxVersion",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pow",
              "description": "Proof of Work parameters of the transaction",
              "label": "",
              "type": "ProofOfWork",
              "longType": "vega.commands.v1.ProofOfWork",
              "fullType": "vega.commands.v1.ProofOfWork",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "BlockExplorerService",
          "longName": "BlockExplorerService",
          "fullName": "blockexplorer.api.v1.BlockExplorerService",
          "description": "",
          "methods": [
            {
              "name": "GetTransaction",
              "description": "Get transaction\n\nGet a transaction from the Vega blockchain",
              "requestType": "GetTransactionRequest",
              "requestLongType": "GetTransactionRequest",
              "requestFullType": "blockexplorer.api.v1.GetTransactionRequest",
              "requestStreaming": false,
              "responseType": "GetTransactionResponse",
              "responseLongType": "GetTransactionResponse",
              "responseFullType": "blockexplorer.api.v1.GetTransactionResponse",
              "responseStreaming": false
            },
            {
              "name": "ListTransactions",
              "description": "List transactions\n\nList transactions from the Vega blockchain",
              "requestType": "ListTransactionsRequest",
              "requestLongType": "ListTransactionsRequest",
              "requestFullType": "blockexplorer.api.v1.ListTransactionsRequest",
              "requestStreaming": false,
              "responseType": "ListTransactionsResponse",
              "responseLongType": "ListTransactionsResponse",
              "responseFullType": "blockexplorer.api.v1.ListTransactionsResponse",
              "responseStreaming": false
            },
            {
              "name": "Info",
              "description": "Info\n\nGet information about the block explorer.\nResponse contains a semver formatted version of the data node and the commit hash, from which the block explorer was built",
              "requestType": "InfoRequest",
              "requestLongType": "InfoRequest",
              "requestFullType": "blockexplorer.api.v1.InfoRequest",
              "requestStreaming": false,
              "responseType": "InfoResponse",
              "responseLongType": "InfoResponse",
              "responseFullType": "blockexplorer.api.v1.InfoResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "vega/oracle.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "OracleData",
          "longName": "OracleData",
          "fullName": "vega.OracleData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "external_data",
              "description": "",
              "label": "",
              "type": "ExternalData",
              "longType": "data.v1.ExternalData",
              "fullType": "vega.data.v1.ExternalData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpec",
          "longName": "OracleSpec",
          "fullName": "vega.OracleSpec",
          "description": "Oracle spec contains an embedded external data source spec.\nIt will be generated by the compiler as: OracleSpec_ExternalDataSourceSpec_*",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "external_data_source_spec",
              "description": "",
              "label": "",
              "type": "ExternalDataSourceSpec",
              "longType": "ExternalDataSourceSpec",
              "fullType": "vega.ExternalDataSourceSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/events/v1/events.proto",
      "description": "",
      "package": "vega.events.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "BusEventType",
          "longName": "BusEventType",
          "fullName": "vega.events.v1.BusEventType",
          "description": "Bus event type is used to specify a type of event\nIt has 2 styles of event:\nSingle values (e.g. BUS_EVENT_TYPE_ORDER) where they represent one data item\nGroup values (e.g. BUS_EVENT_TYPE_AUCTION) where they represent a group of data items",
          "values": [
            {
              "name": "BUS_EVENT_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "BUS_EVENT_TYPE_ALL",
              "number": "1",
              "description": "Events of ALL event types, used when filtering stream from event bus"
            },
            {
              "name": "BUS_EVENT_TYPE_TIME_UPDATE",
              "number": "2",
              "description": "Event for blockchain time updates"
            },
            {
              "name": "BUS_EVENT_TYPE_LEDGER_MOVEMENTS",
              "number": "3",
              "description": "Event for when a transfer happens internally, contains the transfer information"
            },
            {
              "name": "BUS_EVENT_TYPE_POSITION_RESOLUTION",
              "number": "4",
              "description": "Event indicating position resolution has occurred"
            },
            {
              "name": "BUS_EVENT_TYPE_ORDER",
              "number": "5",
              "description": "Event for order updates, both new and existing orders"
            },
            {
              "name": "BUS_EVENT_TYPE_ACCOUNT",
              "number": "6",
              "description": "Event for account updates"
            },
            {
              "name": "BUS_EVENT_TYPE_PARTY",
              "number": "7",
              "description": "Event for party updates"
            },
            {
              "name": "BUS_EVENT_TYPE_TRADE",
              "number": "8",
              "description": "Event indicating a new trade has occurred"
            },
            {
              "name": "BUS_EVENT_TYPE_MARGIN_LEVELS",
              "number": "9",
              "description": "Event indicating margin levels have changed for a party"
            },
            {
              "name": "BUS_EVENT_TYPE_PROPOSAL",
              "number": "10",
              "description": "Event for proposal updates (for governance)"
            },
            {
              "name": "BUS_EVENT_TYPE_VOTE",
              "number": "11",
              "description": "Event indicating a new vote has occurred (for governance)"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_DATA",
              "number": "12",
              "description": "Event for market data updates"
            },
            {
              "name": "BUS_EVENT_TYPE_NODE_SIGNATURE",
              "number": "13",
              "description": "Event for a new signature for a Vega node"
            },
            {
              "name": "BUS_EVENT_TYPE_LOSS_SOCIALIZATION",
              "number": "14",
              "description": "Event indicating loss socialisation occurred for a party"
            },
            {
              "name": "BUS_EVENT_TYPE_SETTLE_POSITION",
              "number": "15",
              "description": "Event for when a position is being settled"
            },
            {
              "name": "BUS_EVENT_TYPE_SETTLE_DISTRESSED",
              "number": "16",
              "description": "Event for when a position is distressed"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_CREATED",
              "number": "17",
              "description": "Event indicating a new market was created"
            },
            {
              "name": "BUS_EVENT_TYPE_ASSET",
              "number": "18",
              "description": "Event for when an asset is added to Vega"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_TICK",
              "number": "19",
              "description": "Event indicating a market tick event"
            },
            {
              "name": "BUS_EVENT_TYPE_WITHDRAWAL",
              "number": "20",
              "description": "Event for when a withdrawal occurs"
            },
            {
              "name": "BUS_EVENT_TYPE_DEPOSIT",
              "number": "21",
              "description": "Event for when a deposit occurs"
            },
            {
              "name": "BUS_EVENT_TYPE_AUCTION",
              "number": "22",
              "description": "Event indicating a change in auction state, for example starting or ending an auction"
            },
            {
              "name": "BUS_EVENT_TYPE_RISK_FACTOR",
              "number": "23",
              "description": "Event indicating a risk factor has been updated"
            },
            {
              "name": "BUS_EVENT_TYPE_NETWORK_PARAMETER",
              "number": "24",
              "description": "Event indicating a network parameter has been added or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_LIQUIDITY_PROVISION",
              "number": "25",
              "description": "Event indicating a liquidity provision has been created or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_UPDATED",
              "number": "26",
              "description": "Event indicating a new market was created"
            },
            {
              "name": "BUS_EVENT_TYPE_ORACLE_SPEC",
              "number": "27",
              "description": "Event indicating an oracle spec has been created or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_ORACLE_DATA",
              "number": "28",
              "description": "Event indicating that an oracle data has been broadcast"
            },
            {
              "name": "BUS_EVENT_TYPE_DELEGATION_BALANCE",
              "number": "29",
              "description": "Event indicating that an delegation balance of a party to a node for current epoch has changed"
            },
            {
              "name": "BUS_EVENT_TYPE_VALIDATOR_SCORE",
              "number": "30",
              "description": "Event indicating the validator score for the given epoch"
            },
            {
              "name": "BUS_EVENT_TYPE_EPOCH_UPDATE",
              "number": "31",
              "description": "Event indicating the start or end of an epoch"
            },
            {
              "name": "BUS_EVENT_TYPE_VALIDATOR_UPDATE",
              "number": "32",
              "description": "Event indicating that validator node has been updated"
            },
            {
              "name": "BUS_EVENT_TYPE_STAKE_LINKING",
              "number": "33",
              "description": "Event indicating a new staking event have been processed by the network"
            },
            {
              "name": "BUS_EVENT_TYPE_REWARD_PAYOUT_EVENT",
              "number": "34",
              "description": "Event indicating the payout of a reward has been initiated"
            },
            {
              "name": "BUS_EVENT_TYPE_CHECKPOINT",
              "number": "35",
              "description": "Event indicating a new checkpoint was created"
            },
            {
              "name": "BUS_EVENT_TYPE_STREAM_START",
              "number": "36",
              "description": "Event indicating stream is starting"
            },
            {
              "name": "BUS_EVENT_TYPE_KEY_ROTATION",
              "number": "37",
              "description": "Event indicating key rotation took place"
            },
            {
              "name": "BUS_EVENT_TYPE_STATE_VAR",
              "number": "38",
              "description": "Event indicating state transitions in state variable consensus"
            },
            {
              "name": "BUS_EVENT_TYPE_NETWORK_LIMITS",
              "number": "39",
              "description": "Event indicating network limits set or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_TRANSFER",
              "number": "40",
              "description": "Event indicating a update for a transfer"
            },
            {
              "name": "BUS_EVENT_TYPE_VALIDATOR_RANKING",
              "number": "41",
              "description": "Event indicating the ranking of validator and their status in Vega"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_EVENT",
              "number": "42",
              "description": "Event indicating a new multi sig signer event have been processed"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SET_THRESHOLD",
              "number": "43",
              "description": "Event indicating the erc20 multi sig threshold have been updated"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_ADDED",
              "number": "44",
              "description": "Event indicating a new signer has been added to the ERC-20 multisig"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_REMOVED",
              "number": "45",
              "description": "Event indicating a signer has been removed from the ERC-20 multisig"
            },
            {
              "name": "BUS_EVENT_TYPE_POSITION_STATE",
              "number": "46",
              "description": "Event indicating that a party's position has changed"
            },
            {
              "name": "BUS_EVENT_TYPE_ETHEREUM_KEY_ROTATION",
              "number": "47",
              "description": "Event indicating Ethereum key rotation took place"
            },
            {
              "name": "BUS_EVENT_TYPE_PROTOCOL_UPGRADE_PROPOSAL",
              "number": "48",
              "description": "Event indicating protocol upgrade proposal updates"
            },
            {
              "name": "BUS_EVENT_TYPE_BEGIN_BLOCK",
              "number": "49",
              "description": "Event indicating the core is starting to process a new block"
            },
            {
              "name": "BUS_EVENT_TYPE_END_BLOCK",
              "number": "50",
              "description": "Event indicating the core finished to process a block"
            },
            {
              "name": "BUS_EVENT_TYPE_PROTOCOL_UPGRADE_STARTED",
              "number": "51",
              "description": "Event indicating the core is starting a protocol upgrade"
            },
            {
              "name": "BUS_EVENT_TYPE_SETTLE_MARKET",
              "number": "52",
              "description": "Event indicating the market has stopped and settled"
            },
            {
              "name": "BUS_EVENT_TYPE_TRANSACTION_RESULT",
              "number": "53",
              "description": "Event indicating the result of a transaction processed by the network"
            },
            {
              "name": "BUS_EVENT_TYPE_SNAPSHOT_TAKEN",
              "number": "54",
              "description": "Event indicating a snapshot was taken at this block height"
            },
            {
              "name": "BUS_EVENT_TYPE_PROTOCOL_UPGRADE_DATA_NODE_READY",
              "number": "55",
              "description": "Event data node uses to notify that it is ready to upgrade"
            },
            {
              "name": "BUS_EVENT_TYPE_DISTRESSED_ORDERS_CLOSED",
              "number": "56",
              "description": "Event indicating parties had orders closed because they were distressed, but were not closed out."
            },
            {
              "name": "BUS_EVENT_TYPE_EXPIRED_ORDERS",
              "number": "57",
              "description": "Event indicating parties had orders closed because they were distressed, but were not closed out."
            },
            {
              "name": "BUS_EVENT_TYPE_DISTRESSED_POSITIONS",
              "number": "58",
              "description": "Event indicating parties have become, or were, distressed but still have an active position."
            },
            {
              "name": "BUS_EVENT_TYPE_SPOT_LIQUIDITY_PROVISION",
              "number": "59",
              "description": "Event indicating a spot liquidity provision has been created or updated."
            },
            {
              "name": "BUS_EVENT_TYPE_STOP_ORDER",
              "number": "60",
              "description": "Event indicating a stop order has been submitted or updated."
            },
            {
              "name": "BUS_EVENT_TYPE_FUNDING_PERIOD",
              "number": "61",
              "description": "Event indicating the start or end of a funding period."
            },
            {
              "name": "BUS_EVENT_TYPE_FUNDING_PERIOD_DATA_POINT",
              "number": "62",
              "description": "Event indicating a data point for a funding period has been received."
            },
            {
              "name": "BUS_EVENT_TYPE_TEAM_CREATED",
              "number": "63",
              "description": "Event indicating a team has been created."
            },
            {
              "name": "BUS_EVENT_TYPE_TEAM_UPDATED",
              "number": "64",
              "description": "Event indicating a team has been updated."
            },
            {
              "name": "BUS_EVENT_TYPE_REFEREE_SWITCHED_TEAM",
              "number": "65",
              "description": "Event indicating a referee switched team."
            },
            {
              "name": "BUS_EVENT_TYPE_REFEREE_JOINED_TEAM",
              "number": "66",
              "description": "Event indicating a referee joined a team."
            },
            {
              "name": "BUS_EVENT_TYPE_REFERRAL_PROGRAM_STARTED",
              "number": "67",
              "description": "Event indicating a referral program started."
            },
            {
              "name": "BUS_EVENT_TYPE_REFERRAL_PROGRAM_UPDATED",
              "number": "68",
              "description": "Event indicating a referral program has been updated."
            },
            {
              "name": "BUS_EVENT_TYPE_REFERRAL_PROGRAM_ENDED",
              "number": "69",
              "description": "Event indicating a referral program ended."
            },
            {
              "name": "BUS_EVENT_TYPE_REFERRAL_SET_CREATED",
              "number": "70",
              "description": "Event indicating a set has been created."
            },
            {
              "name": "BUS_EVENT_TYPE_REFEREE_JOINED_REFERRAL_SET",
              "number": "71",
              "description": "Event indicating a referee joined a set."
            },
            {
              "name": "BUS_EVENT_TYPE_PARTY_ACTIVITY_STREAK",
              "number": "72",
              "description": "Event indicating the updated activity streak for a party"
            },
            {
              "name": "BUS_EVENT_TYPE_VOLUME_DISCOUNT_PROGRAM_STARTED",
              "number": "73",
              "description": "Event indicating a volume discount program started."
            },
            {
              "name": "BUS_EVENT_TYPE_VOLUME_DISCOUNT_PROGRAM_UPDATED",
              "number": "74",
              "description": "Event indicating a volume discount program has been updated."
            },
            {
              "name": "BUS_EVENT_TYPE_VOLUME_DISCOUNT_PROGRAM_ENDED",
              "number": "75",
              "description": "Event indicating a volume discount program ended."
            },
            {
              "name": "BUS_EVENT_TYPE_REFERRAL_SET_STATS_UPDATED",
              "number": "76",
              "description": "Event indicating the updated statistics for a referral set."
            },
            {
              "name": "BUS_EVENT_TYPE_VESTING_STATS_UPDATED",
              "number": "77",
              "description": "Event indicating the updated statistics for the vesting program."
            },
            {
              "name": "BUS_EVENT_TYPE_VOLUME_DISCOUNT_STATS_UPDATED",
              "number": "78",
              "description": "Event indicating the updated statistics for the volume discount."
            },
            {
              "name": "BUS_EVENT_TYPE_FEES_STATS_UPDATED",
              "number": "79",
              "description": "Event indicating the fees statistics per market at end of epoch"
            },
            {
              "name": "BUS_EVENT_TYPE_FUNDING_PAYMENTS",
              "number": "80",
              "description": "Event indicating a funding period has ended and resulted in funding payment transfers."
            },
            {
              "name": "BUS_EVENT_TYPE_PAID_LIQUIDITY_FEES_STATS_UPDATED",
              "number": "81",
              "description": "Event used to report the updated paid liquidity fee statistics for the market at the end of the epoch"
            },
            {
              "name": "BUS_EVENT_TYPE_VESTING_SUMMARY",
              "number": "82",
              "description": "Event used to report the summary of vesting and locked balances at the end of the epoch"
            },
            {
              "name": "BUS_EVENT_TYPE_TRANSFER_FEES_PAID",
              "number": "83",
              "description": "Event used to link ledger entries to the transfer that triggered the fees being collected."
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET",
              "number": "101",
              "description": "Event indicating a market related event, for example when a market opens"
            },
            {
              "name": "BUS_EVENT_TYPE_TX_ERROR",
              "number": "201",
              "description": "Event used to report failed transactions back to a user, this is excluded from the ALL type"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "ERC20MultiSigSignerEvent.Type",
          "fullName": "vega.events.v1.ERC20MultiSigSignerEvent.Type",
          "description": "",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_ADDED",
              "number": "1",
              "description": ""
            },
            {
              "name": "TYPE_REMOVED",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "Source",
          "longName": "FundingPeriodDataPoint.Source",
          "fullName": "vega.events.v1.FundingPeriodDataPoint.Source",
          "description": "",
          "values": [
            {
              "name": "SOURCE_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "SOURCE_EXTERNAL",
              "number": "1",
              "description": "Data point is from an external data source, such as an oracle, and represents the spot price of the underlying asset."
            },
            {
              "name": "SOURCE_INTERNAL",
              "number": "2",
              "description": "Data point from within Vega such as the mark price after performing mark-to-market."
            }
          ]
        },
        {
          "name": "ProtocolUpgradeProposalStatus",
          "longName": "ProtocolUpgradeProposalStatus",
          "fullName": "vega.events.v1.ProtocolUpgradeProposalStatus",
          "description": "",
          "values": [
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING",
              "number": "1",
              "description": "The proposal is pending"
            },
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED",
              "number": "2",
              "description": "The proposal is approved"
            },
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED",
              "number": "3",
              "description": "The proposal is rejected"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "StakeLinking.Status",
          "fullName": "vega.events.v1.StakeLinking.Status",
          "description": "",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "STATUS_PENDING",
              "number": "1",
              "description": "Indicates an event waiting for confirmation from the Vega network"
            },
            {
              "name": "STATUS_ACCEPTED",
              "number": "2",
              "description": "Indicates an event accepted by the Vega network"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "3",
              "description": "Indicates an event rejected by the Vega network"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "StakeLinking.Type",
          "fullName": "vega.events.v1.StakeLinking.Type",
          "description": "",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "TYPE_LINK",
              "number": "1",
              "description": "Indicate of a stake deposit instruction"
            },
            {
              "name": "TYPE_UNLINK",
              "number": "2",
              "description": "Indicate of a stake remove instruction"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Transfer.Status",
          "fullName": "vega.events.v1.Transfer.Status",
          "description": "",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "STATUS_PENDING",
              "number": "1",
              "description": "Indicates a transfer still being processed"
            },
            {
              "name": "STATUS_DONE",
              "number": "2",
              "description": "Indicates a transfer accepted by the Vega network"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "3",
              "description": "Indicates a transfer rejected by the Vega network"
            },
            {
              "name": "STATUS_STOPPED",
              "number": "4",
              "description": "Indicates a transfer stopped by the Vega network\ne.g: no funds left to cover the transfer"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "5",
              "description": "Indicates a transfer cancelled by the user"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AuctionEvent",
          "longName": "AuctionEvent",
          "fullName": "vega.events.v1.AuctionEvent",
          "description": "Auction event indicating a change in auction state, for example starting or ending an auction",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "opening_auction",
              "description": "True if the event indicates an auction opening and False otherwise",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "leave",
              "description": "True if the event indicates leaving auction mode and False otherwise",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start",
              "description": "Timestamp containing the start time for an auction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end",
              "description": "Timestamp containing the end time for an auction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "Reason this market is/was in auction",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "vega.AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extension_trigger",
              "description": "If an auction was ongoing, but was extended for whatever reason, this field will\nbe set to the trigger type indicating which component extended the auction",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "vega.AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BeginBlock",
          "longName": "BeginBlock",
          "fullName": "vega.events.v1.BeginBlock",
          "description": "BeginBlock",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BusEvent",
          "longName": "BusEvent",
          "fullName": "vega.events.v1.BusEvent",
          "description": "Bus event is a container for event bus events emitted by Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique event ID for the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "The batch or block of transactions that the events relate to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The type of bus event. Must be one of the list below:",
              "label": "",
              "type": "BusEventType",
              "longType": "BusEventType",
              "fullType": "vega.events.v1.BusEventType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_update",
              "description": "Time update events",
              "label": "",
              "type": "TimeUpdate",
              "longType": "TimeUpdate",
              "fullType": "vega.events.v1.TimeUpdate",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "ledger_movements",
              "description": "Transfer responses update events",
              "label": "",
              "type": "LedgerMovements",
              "longType": "LedgerMovements",
              "fullType": "vega.events.v1.LedgerMovements",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "position_resolution",
              "description": "Position resolution events",
              "label": "",
              "type": "PositionResolution",
              "longType": "PositionResolution",
              "fullType": "vega.events.v1.PositionResolution",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "order",
              "description": "Order events",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "account",
              "description": "Account events",
              "label": "",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "party",
              "description": "Party events",
              "label": "",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "trade",
              "description": "Trade events",
              "label": "",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "margin_levels",
              "description": "Margin level update events",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "proposal",
              "description": "Proposal events for governance",
              "label": "",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "vote",
              "description": "Vote events for governance",
              "label": "",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_data",
              "description": "Market data events",
              "label": "",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "node_signature",
              "description": "Node signature events",
              "label": "",
              "type": "NodeSignature",
              "longType": "vega.commands.v1.NodeSignature",
              "fullType": "vega.commands.v1.NodeSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "loss_socialization",
              "description": "Loss socialization events",
              "label": "",
              "type": "LossSocialization",
              "longType": "LossSocialization",
              "fullType": "vega.events.v1.LossSocialization",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "settle_position",
              "description": "Position settlement events",
              "label": "",
              "type": "SettlePosition",
              "longType": "SettlePosition",
              "fullType": "vega.events.v1.SettlePosition",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "settle_distressed",
              "description": "Position distressed events",
              "label": "",
              "type": "SettleDistressed",
              "longType": "SettleDistressed",
              "fullType": "vega.events.v1.SettleDistressed",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_created",
              "description": "Market created events",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset events",
              "label": "",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_tick",
              "description": "Market tick events",
              "label": "",
              "type": "MarketTick",
              "longType": "MarketTick",
              "fullType": "vega.events.v1.MarketTick",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "Withdrawal events",
              "label": "",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "deposit",
              "description": "Deposit events",
              "label": "",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "auction",
              "description": "Auction events",
              "label": "",
              "type": "AuctionEvent",
              "longType": "AuctionEvent",
              "fullType": "vega.events.v1.AuctionEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "risk_factor",
              "description": "Risk factor events",
              "label": "",
              "type": "RiskFactor",
              "longType": "vega.RiskFactor",
              "fullType": "vega.RiskFactor",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "network_parameter",
              "description": "Network parameter events",
              "label": "",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision",
              "description": "LiquidityProvision  events",
              "label": "",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_updated",
              "description": "Market created events",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec",
              "description": "OracleSpec events",
              "label": "",
              "type": "OracleSpec",
              "longType": "vega.OracleSpec",
              "fullType": "vega.OracleSpec",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "oracle_data",
              "description": "OracleData events",
              "label": "",
              "type": "OracleData",
              "longType": "vega.OracleData",
              "fullType": "vega.OracleData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "delegation_balance",
              "description": "Delegation balance events",
              "label": "",
              "type": "DelegationBalanceEvent",
              "longType": "DelegationBalanceEvent",
              "fullType": "vega.events.v1.DelegationBalanceEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "validator_score",
              "description": "Validator score calculated",
              "label": "",
              "type": "ValidatorScoreEvent",
              "longType": "ValidatorScoreEvent",
              "fullType": "vega.events.v1.ValidatorScoreEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "epoch_event",
              "description": "Epoch update events",
              "label": "",
              "type": "EpochEvent",
              "longType": "EpochEvent",
              "fullType": "vega.events.v1.EpochEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "validator_update",
              "description": "Validator update events",
              "label": "",
              "type": "ValidatorUpdate",
              "longType": "ValidatorUpdate",
              "fullType": "vega.events.v1.ValidatorUpdate",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "stake_linking",
              "description": "Staking event",
              "label": "",
              "type": "StakeLinking",
              "longType": "StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "reward_payout",
              "description": "Reward payout event",
              "label": "",
              "type": "RewardPayoutEvent",
              "longType": "RewardPayoutEvent",
              "fullType": "vega.events.v1.RewardPayoutEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "checkpoint",
              "description": "Checkpoint was created",
              "label": "",
              "type": "CheckpointEvent",
              "longType": "CheckpointEvent",
              "fullType": "vega.events.v1.CheckpointEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "key_rotation",
              "description": "Key rotation took place",
              "label": "",
              "type": "KeyRotation",
              "longType": "KeyRotation",
              "fullType": "vega.events.v1.KeyRotation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "state_var",
              "description": "State variable consensus state transition update",
              "label": "",
              "type": "StateVar",
              "longType": "StateVar",
              "fullType": "vega.events.v1.StateVar",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "network_limits",
              "description": "Network limits events",
              "label": "",
              "type": "NetworkLimits",
              "longType": "vega.NetworkLimits",
              "fullType": "vega.NetworkLimits",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "Transfer event",
              "label": "",
              "type": "Transfer",
              "longType": "Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "ranking_event",
              "description": "Ranking event",
              "label": "",
              "type": "ValidatorRankingEvent",
              "longType": "ValidatorRankingEvent",
              "fullType": "vega.events.v1.ValidatorRankingEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_signer_event",
              "description": "ERC20 multi sig signer event",
              "label": "",
              "type": "ERC20MultiSigSignerEvent",
              "longType": "ERC20MultiSigSignerEvent",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_set_threshold_event",
              "description": "ERC20 multi sig set threshold event",
              "label": "",
              "type": "ERC20MultiSigThresholdSetEvent",
              "longType": "ERC20MultiSigThresholdSetEvent",
              "fullType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_signer_added",
              "description": "ERC20 multi sig signer added",
              "label": "",
              "type": "ERC20MultiSigSignerAdded",
              "longType": "ERC20MultiSigSignerAdded",
              "fullType": "vega.events.v1.ERC20MultiSigSignerAdded",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_signer_removed",
              "description": "ERC20 multi sig signer removed",
              "label": "",
              "type": "ERC20MultiSigSignerRemoved",
              "longType": "ERC20MultiSigSignerRemoved",
              "fullType": "vega.events.v1.ERC20MultiSigSignerRemoved",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "position_state_event",
              "description": "Position status for a party in a market",
              "label": "",
              "type": "PositionStateEvent",
              "longType": "PositionStateEvent",
              "fullType": "vega.events.v1.PositionStateEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "ethereum_key_rotation",
              "description": "Ethereum key rotation took place",
              "label": "",
              "type": "EthereumKeyRotation",
              "longType": "EthereumKeyRotation",
              "fullType": "vega.events.v1.EthereumKeyRotation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_event",
              "description": "Protocol upgrade proposal updates",
              "label": "",
              "type": "ProtocolUpgradeEvent",
              "longType": "ProtocolUpgradeEvent",
              "fullType": "vega.events.v1.ProtocolUpgradeEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "begin_block",
              "description": "Core is starting to process a new block",
              "label": "",
              "type": "BeginBlock",
              "longType": "BeginBlock",
              "fullType": "vega.events.v1.BeginBlock",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "end_block",
              "description": "Core finished processing a block",
              "label": "",
              "type": "EndBlock",
              "longType": "EndBlock",
              "fullType": "vega.events.v1.EndBlock",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_started",
              "description": "Core is starting a protocol upgrade",
              "label": "",
              "type": "ProtocolUpgradeStarted",
              "longType": "ProtocolUpgradeStarted",
              "fullType": "vega.events.v1.ProtocolUpgradeStarted",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "settle_market",
              "description": "Settle market event for data-node to update positions for settled markets",
              "label": "",
              "type": "SettleMarket",
              "longType": "SettleMarket",
              "fullType": "vega.events.v1.SettleMarket",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "transaction_result",
              "description": "Result of a transaction processed by the network",
              "label": "",
              "type": "TransactionResult",
              "longType": "TransactionResult",
              "fullType": "vega.events.v1.TransactionResult",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "core_snapshot_event",
              "description": "Core snapshot has been taken at the end of the block",
              "label": "",
              "type": "CoreSnapshotData",
              "longType": "CoreSnapshotData",
              "fullType": "vega.events.v1.CoreSnapshotData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_data_node_ready",
              "description": "Core snapshot has been taken at the end of the block",
              "label": "",
              "type": "ProtocolUpgradeDataNodeReady",
              "longType": "ProtocolUpgradeDataNodeReady",
              "fullType": "vega.events.v1.ProtocolUpgradeDataNodeReady",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "distressed_orders",
              "description": "Parties that had their orders closed because they were distressed",
              "label": "",
              "type": "DistressedOrders",
              "longType": "DistressedOrders",
              "fullType": "vega.events.v1.DistressedOrders",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "expired_orders",
              "description": "Orders that expired for a given market",
              "label": "",
              "type": "ExpiredOrders",
              "longType": "ExpiredOrders",
              "fullType": "vega.events.v1.ExpiredOrders",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "distressed_positions",
              "description": "Open positions on the market that are/were distressed",
              "label": "",
              "type": "DistressedPositions",
              "longType": "DistressedPositions",
              "fullType": "vega.events.v1.DistressedPositions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "stop_order",
              "description": "A stop order event",
              "label": "",
              "type": "StopOrderEvent",
              "longType": "StopOrderEvent",
              "fullType": "vega.events.v1.StopOrderEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "funding_period",
              "description": "Start or end of a funding period.",
              "label": "",
              "type": "FundingPeriod",
              "longType": "FundingPeriod",
              "fullType": "vega.events.v1.FundingPeriod",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "funding_period_data_point",
              "description": "Data point within a funding period.",
              "label": "",
              "type": "FundingPeriodDataPoint",
              "longType": "FundingPeriodDataPoint",
              "fullType": "vega.events.v1.FundingPeriodDataPoint",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "team_created",
              "description": "Event notifying of the creation of a team.m",
              "label": "",
              "type": "TeamCreated",
              "longType": "TeamCreated",
              "fullType": "vega.events.v1.TeamCreated",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "team_updated",
              "description": "Event notifying of an update to a team.",
              "label": "",
              "type": "TeamUpdated",
              "longType": "TeamUpdated",
              "fullType": "vega.events.v1.TeamUpdated",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "referee_switched_team",
              "description": "Event notifying that a referee switched teams.",
              "label": "",
              "type": "RefereeSwitchedTeam",
              "longType": "RefereeSwitchedTeam",
              "fullType": "vega.events.v1.RefereeSwitchedTeam",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "referee_joined_team",
              "description": "Event notifying that a referee joined a team.",
              "label": "",
              "type": "RefereeJoinedTeam",
              "longType": "RefereeJoinedTeam",
              "fullType": "vega.events.v1.RefereeJoinedTeam",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "referral_program_started",
              "description": "Event notifying that a referral program has started.",
              "label": "",
              "type": "ReferralProgramStarted",
              "longType": "ReferralProgramStarted",
              "fullType": "vega.events.v1.ReferralProgramStarted",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "referral_program_updated",
              "description": "Event notifying that a referral program has been updated.",
              "label": "",
              "type": "ReferralProgramUpdated",
              "longType": "ReferralProgramUpdated",
              "fullType": "vega.events.v1.ReferralProgramUpdated",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "referral_program_ended",
              "description": "Event notifying that a referral program has ended.",
              "label": "",
              "type": "ReferralProgramEnded",
              "longType": "ReferralProgramEnded",
              "fullType": "vega.events.v1.ReferralProgramEnded",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "referral_set_created",
              "description": "Event notifying a referral set has been created.",
              "label": "",
              "type": "ReferralSetCreated",
              "longType": "ReferralSetCreated",
              "fullType": "vega.events.v1.ReferralSetCreated",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "referee_joined_referral_set",
              "description": "Event notifying a referee has joined a referral set.",
              "label": "",
              "type": "RefereeJoinedReferralSet",
              "longType": "RefereeJoinedReferralSet",
              "fullType": "vega.events.v1.RefereeJoinedReferralSet",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "party_activity_streak",
              "description": "Event notifying of an update to a party's activity streak",
              "label": "",
              "type": "PartyActivityStreak",
              "longType": "PartyActivityStreak",
              "fullType": "vega.events.v1.PartyActivityStreak",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "volume_discount_program_started",
              "description": "Event notifying that a volume discount program has started.",
              "label": "",
              "type": "VolumeDiscountProgramStarted",
              "longType": "VolumeDiscountProgramStarted",
              "fullType": "vega.events.v1.VolumeDiscountProgramStarted",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "volume_discount_program_updated",
              "description": "Event notifying that a volume discount program has been updated.",
              "label": "",
              "type": "VolumeDiscountProgramUpdated",
              "longType": "VolumeDiscountProgramUpdated",
              "fullType": "vega.events.v1.VolumeDiscountProgramUpdated",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "volume_discount_program_ended",
              "description": "Event notifying that a volume discount program has ended.",
              "label": "",
              "type": "VolumeDiscountProgramEnded",
              "longType": "VolumeDiscountProgramEnded",
              "fullType": "vega.events.v1.VolumeDiscountProgramEnded",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "referral_set_stats_updated",
              "description": "Event notifying of an update to a referral set's statistics.",
              "label": "",
              "type": "ReferralSetStatsUpdated",
              "longType": "ReferralSetStatsUpdated",
              "fullType": "vega.events.v1.ReferralSetStatsUpdated",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "vesting_stats_updated",
              "description": "Event notifying of an update to the vesting statistics.",
              "label": "",
              "type": "VestingStatsUpdated",
              "longType": "VestingStatsUpdated",
              "fullType": "vega.events.v1.VestingStatsUpdated",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "volume_discount_stats_updated",
              "description": "Event notifying of an update to the volume discount statistics.",
              "label": "",
              "type": "VolumeDiscountStatsUpdated",
              "longType": "VolumeDiscountStatsUpdated",
              "fullType": "vega.events.v1.VolumeDiscountStatsUpdated",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "fees_stats",
              "description": "Event notifying of an update the fees stats for a market.",
              "label": "",
              "type": "FeesStats",
              "longType": "FeesStats",
              "fullType": "vega.events.v1.FeesStats",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "funding_payments",
              "description": "Event notifying of funding payments at the end of a funding period.",
              "label": "",
              "type": "FundingPayments",
              "longType": "FundingPayments",
              "fullType": "vega.events.v1.FundingPayments",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "paid_liquidity_fees_stats",
              "description": "Event notifying of an update to the liqudity fees stats for a market.",
              "label": "",
              "type": "PaidLiquidityFeesStats",
              "longType": "PaidLiquidityFeesStats",
              "fullType": "vega.events.v1.PaidLiquidityFeesStats",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "vesting_balances_summary",
              "description": "Event notifying of an update to the vesting and locked balances.",
              "label": "",
              "type": "VestingBalancesSummary",
              "longType": "VestingBalancesSummary",
              "fullType": "vega.events.v1.VestingBalancesSummary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "transfer_fees",
              "description": "Event notifying of fees related to a transfer being paid.",
              "label": "",
              "type": "TransferFees",
              "longType": "TransferFees",
              "fullType": "vega.events.v1.TransferFees",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "Market tick events",
              "label": "",
              "type": "MarketEvent",
              "longType": "MarketEvent",
              "fullType": "vega.events.v1.MarketEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "tx_err_event",
              "description": "Transaction error events, not included in the ALL event type",
              "label": "",
              "type": "TxErrorEvent",
              "longType": "TxErrorEvent",
              "fullType": "vega.events.v1.TxErrorEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of bus event",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointEvent",
          "longName": "CheckpointEvent",
          "fullName": "vega.events.v1.CheckpointEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CoreSnapshotData",
          "longName": "CoreSnapshotData",
          "fullName": "vega.events.v1.CoreSnapshotData",
          "description": "CoreSnapshotData represents the core snapshot data.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "Block height at which snapshot was taken",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "Hash of the snapshot block",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "core_version",
              "description": "Semver version number of the core.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_block",
              "description": "Indicates if the snapshot is taken as part of protocol upgrade",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationBalanceEvent",
          "longName": "DelegationBalanceEvent",
          "fullName": "vega.events.v1.DelegationBalanceEvent",
          "description": "DelegationBalanceEvent - updates on the delegation balance of a party to a node in the current epoch in effect",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DistressedOrders",
          "longName": "DistressedOrders",
          "fullName": "vega.events.v1.DistressedOrders",
          "description": "Distressed order contains the party IDs for all parties that were distressed and had their orders closed,\nbut did not need to be closed out after cancelling their orders",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parties",
              "description": "Slice of Party IDs i.e. each party's public key for the event",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DistressedPositions",
          "longName": "DistressedPositions",
          "fullName": "vega.events.v1.DistressedPositions",
          "description": "Distressed positions event contains the party IDs for all parties that were distressed, had their orders closed but because of insufficient volume on the book\ncould not be fully closed out. These parties are distressed, but still hold an active position on the book as a result. Once enough volume is on the book to close\nthem out, a SettleDistressed event will be sent. In case they manage to reduce their position, or meet the margin requirements, this status will be updated.\nParties that are no longer distressed but active will be listed in the safe_parties field.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "distressed_parties",
              "description": "Slice of party IDs i.e. each party's public key, that are distressed but still have open volume",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "safe_parties",
              "description": "Slice of party IDs i.e. each party's public key, who were distressed but now can safely maintain their position",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerAdded",
          "longName": "ERC20MultiSigSignerAdded",
          "fullName": "vega.events.v1.ERC20MultiSigSignerAdded",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signature_id",
              "description": "ID of the signature bundle",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_id",
              "description": "Node ID of the Vega node to be added",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Time at which this happened",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_signer",
              "description": "Ethereum address of the new signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "Address of the submitter of the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Nonce used.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch that the node was added for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerEvent",
          "longName": "ERC20MultiSigSignerEvent",
          "fullName": "vega.events.v1.ERC20MultiSigSignerEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "Type",
              "longType": "ERC20MultiSigSignerEvent.Type",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_number",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerRemoved",
          "longName": "ERC20MultiSigSignerRemoved",
          "fullName": "vega.events.v1.ERC20MultiSigSignerRemoved",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signature_submitters",
              "description": "List containing all the IDs of bundle generated\nThere should be one bundle generated for every validators\nin the validator set",
              "label": "repeated",
              "type": "ERC20MultiSigSignerRemovedSubmitter",
              "longType": "ERC20MultiSigSignerRemovedSubmitter",
              "fullType": "vega.events.v1.ERC20MultiSigSignerRemovedSubmitter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_id",
              "description": "Node ID of the Vega node which is to be removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Time at which this happened",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_signer",
              "description": "Ethereum address of the signer to be removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Nonce used.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch that the node was removed for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerRemovedSubmitter",
          "longName": "ERC20MultiSigSignerRemovedSubmitter",
          "fullName": "vega.events.v1.ERC20MultiSigSignerRemovedSubmitter",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signature_id",
              "description": "Signature ID of the signer removed.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "Address of the submitter of the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigThresholdSetEvent",
          "longName": "ERC20MultiSigThresholdSetEvent",
          "fullName": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_threshold",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_number",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EndBlock",
          "longName": "EndBlock",
          "fullName": "vega.events.v1.EndBlock",
          "description": "EndBlock",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochEvent",
          "longName": "EpochEvent",
          "fullName": "vega.events.v1.EpochEvent",
          "description": "Epoch details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seq",
              "description": "Sequence number that increases by one each epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "action",
              "description": "Action tells us what action is taking place",
              "label": "",
              "type": "EpochAction",
              "longType": "vega.EpochAction",
              "fullType": "vega.EpochAction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "Vega time at which this epoch started",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expire_time",
              "description": "Vega time at which this epoch should end",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "Vega time at which this epoch actually ended",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumKeyRotation",
          "longName": "EthereumKeyRotation",
          "fullName": "vega.events.v1.EthereumKeyRotation",
          "description": "Event that contains information about an Ethereum key rotation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node ID of the node that rotated their Ethereum key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_address",
              "description": "Ethereum address that was previously associated with the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_address",
              "description": "Ethereum address that is newly associated with the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "Block height when the key rotation took effect",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExpiredOrders",
          "longName": "ExpiredOrders",
          "fullName": "vega.events.v1.ExpiredOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_ids",
              "description": "Slice of expired order IDs",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeesStats",
          "longName": "FeesStats",
          "fullName": "vega.events.v1.FeesStats",
          "description": "Fees rewards and discounts paid / received per parties during an epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "Market the fees were paid in",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Settlement asset of the market.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch for which these stats where valid.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_rewards_received",
              "description": "Total referral rewards received by the referrer of the referral set.",
              "label": "repeated",
              "type": "PartyAmount",
              "longType": "PartyAmount",
              "fullType": "vega.events.v1.PartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referrer_rewards_generated",
              "description": "Referral rewards generated by all referee taker fees.",
              "label": "repeated",
              "type": "ReferrerRewardsGenerated",
              "longType": "ReferrerRewardsGenerated",
              "fullType": "vega.events.v1.ReferrerRewardsGenerated",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referees_discount_applied",
              "description": "Total referral discounts applied to all referee taker fees.",
              "label": "repeated",
              "type": "PartyAmount",
              "longType": "PartyAmount",
              "fullType": "vega.events.v1.PartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume_discount_applied",
              "description": "Total volume discounts applied to all referee taker fees.",
              "label": "repeated",
              "type": "PartyAmount",
              "longType": "PartyAmount",
              "fullType": "vega.events.v1.PartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_maker_fees_received",
              "description": "Total maker fees received by the maker side.",
              "label": "repeated",
              "type": "PartyAmount",
              "longType": "PartyAmount",
              "fullType": "vega.events.v1.PartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "maker_fees_generated",
              "description": "Maker fees paid by all trade aggressors, and which makers the fees were paid to.",
              "label": "repeated",
              "type": "MakerFeesGenerated",
              "longType": "MakerFeesGenerated",
              "fullType": "vega.events.v1.MakerFeesGenerated",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPayment",
          "longName": "FundingPayment",
          "fullName": "vega.events.v1.FundingPayment",
          "description": "The amount gained or lost by a party as a result of a funding payment.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "ID of the party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount paid, this can be negative for parties who lost at the end of the funding period.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPayments",
          "longName": "FundingPayments",
          "fullName": "vega.events.v1.FundingPayments",
          "description": "Event notifying of funding payments at the end of a funding period.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "ID of the market.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seq",
              "description": "Sequence number of the funding period associated with these payments.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payments",
              "description": "List of parties and the payment amounts, this can be negative for parties who lost at the end of the funding period.",
              "label": "repeated",
              "type": "FundingPayment",
              "longType": "FundingPayment",
              "fullType": "vega.events.v1.FundingPayment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPeriod",
          "longName": "FundingPeriod",
          "fullName": "vega.events.v1.FundingPeriod",
          "description": "Event notifying on the details of a funding interval for a perpetuals market.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "ID of the market for which this funding period relates to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seq",
              "description": "Sequence number of the funding period.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start",
              "description": "Time in Unix nanoseconds when the funding period started.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end",
              "description": "Time in Unix nanoseconds when the funding period ended.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end",
              "defaultValue": ""
            },
            {
              "name": "funding_payment",
              "description": "Funding payment for this period as the difference between the time-weighted average price of the external and internal data point.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_funding_payment",
              "defaultValue": ""
            },
            {
              "name": "funding_rate",
              "description": "Percentage difference between the time-weighted average price of the external and internal data point.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_funding_rate",
              "defaultValue": ""
            },
            {
              "name": "internal_twap",
              "description": "TWAP for this period based on the internal data-points.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_internal_twap",
              "defaultValue": ""
            },
            {
              "name": "external_twap",
              "description": "TWAP for this period based on the external data-points.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_external_twap",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPeriodDataPoint",
          "longName": "FundingPeriodDataPoint",
          "fullName": "vega.events.v1.FundingPeriodDataPoint",
          "description": "Event notifying a data point for a funding period.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID which the data point relates to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seq",
              "description": "Sequence number of the funding period this data point belongs to.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_point_type",
              "description": "Origin of the data point.",
              "label": "",
              "type": "Source",
              "longType": "FundingPeriodDataPoint.Source",
              "fullType": "vega.events.v1.FundingPeriodDataPoint.Source",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price of the asset as seen by this data point.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp in Unix nanoseconds of when the data point was received.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "twap",
              "description": "The TWAP for this source with this data-point added.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyRotation",
          "longName": "KeyRotation",
          "fullName": "vega.events.v1.KeyRotation",
          "description": "Event that contains information about a Vega key rotation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node ID of the node that rotated their Vega key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_pub_key",
              "description": "Vega public key that was previously associated with the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key",
              "description": "Vega public key that is newly associated with the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "Block height when the key rotation took effect",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LedgerMovements",
          "longName": "LedgerMovements",
          "fullName": "vega.events.v1.LedgerMovements",
          "description": "Transfer responses event contains a collection of transfer information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ledger_movements",
              "description": "One or more entries containing internal transfer information",
              "label": "repeated",
              "type": "LedgerMovement",
              "longType": "vega.LedgerMovement",
              "fullType": "vega.LedgerMovement",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LossSocialization",
          "longName": "LossSocialization",
          "fullName": "vega.events.v1.LossSocialization",
          "description": "Loss socialization event contains details on the amount of wins unable to be distributed",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID (public key) for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount distributed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MakerFeesGenerated",
          "longName": "MakerFeesGenerated",
          "fullName": "vega.events.v1.MakerFeesGenerated",
          "description": "Maker fees generated by the trade aggressor",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "taker",
              "description": "Party that paid the fees.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "maker_fees_paid",
              "description": "Amount of maker fees paid by the taker to the maker.",
              "label": "repeated",
              "type": "PartyAmount",
              "longType": "PartyAmount",
              "fullType": "vega.events.v1.PartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketEvent",
          "longName": "MarketEvent",
          "fullName": "vega.events.v1.MarketEvent",
          "description": "MarketEvent - the common denominator for all market events\ninterface has a method to return a string for logging",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payload",
              "description": "Payload is a unique information string",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketTick",
          "longName": "MarketTick",
          "fullName": "vega.events.v1.MarketTick",
          "description": "Market tick event contains the time value for when a particular market was last processed on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "Timestamp containing latest update from Vega blockchain aka Vega-time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OneOffGovernanceTransfer",
          "longName": "OneOffGovernanceTransfer",
          "fullName": "vega.events.v1.OneOffGovernanceTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deliver_on",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OneOffTransfer",
          "longName": "OneOffTransfer",
          "fullName": "vega.events.v1.OneOffTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deliver_on",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PaidLiquidityFeesStats",
          "longName": "PaidLiquidityFeesStats",
          "fullName": "vega.events.v1.PaidLiquidityFeesStats",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "Market the fees were paid in.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Settlement asset of the market.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch for which these stats where valid.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_fees_paid",
              "description": "Total fees paid accross all parties.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fees_paid_per_party",
              "description": "Fees paid per party.",
              "label": "repeated",
              "type": "PartyAmount",
              "longType": "PartyAmount",
              "fullType": "vega.events.v1.PartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyActivityStreak",
          "longName": "PartyActivityStreak",
          "fullName": "vega.events.v1.PartyActivityStreak",
          "description": "The updated activity streak of a party at end of epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "The party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "active_for",
              "description": "How many epoch this party has been active for.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inactive_for",
              "description": "how many epoch this party has been inactive for.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_active",
              "description": "Is this party considered active or not.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_distribution_activity_multiplier",
              "description": "The current rewards distribution multiplier for this party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_vesting_activity_multiplier",
              "description": "The vesting multiplier for this party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "The epoch this information is relevant to.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "traded_volume",
              "description": "Party's traded volume at the end of the given epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open_volume",
              "description": "Party's open interest volume at the end of the given epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyAmount",
          "longName": "PartyAmount",
          "fullName": "vega.events.v1.PartyAmount",
          "description": "A pair of a party and amount",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "Receiving party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount received.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantum_amount",
              "description": "Amount value in quantum.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyLockedBalance",
          "longName": "PartyLockedBalance",
          "fullName": "vega.events.v1.PartyLockedBalance",
          "description": "A party's locked balance for a given asset.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "Asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "until_epoch",
              "description": "Epoch in which the balance will be released.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "Locked balance.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyVestingBalance",
          "longName": "PartyVestingBalance",
          "fullName": "vega.events.v1.PartyVestingBalance",
          "description": "Balance that is being vested for the party.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "Asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "Balance that is vested.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyVestingStats",
          "longName": "PartyVestingStats",
          "fullName": "vega.events.v1.PartyVestingStats",
          "description": "The vesting stats for a given party.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "The party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_bonus_multiplier",
              "description": "The bonus multiplier applied on the reward.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantum_balance",
              "description": "The balance of the party, in quantum.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyVestingSummary",
          "longName": "PartyVestingSummary",
          "fullName": "vega.events.v1.PartyVestingSummary",
          "description": "Summary of a party's vesting balances",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "Party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_locked_balances",
              "description": "List of locked balances.",
              "label": "repeated",
              "type": "PartyLockedBalance",
              "longType": "PartyLockedBalance",
              "fullType": "vega.events.v1.PartyLockedBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_vesting_balances",
              "description": "List of vesting balances.",
              "label": "repeated",
              "type": "PartyVestingBalance",
              "longType": "PartyVestingBalance",
              "fullType": "vega.events.v1.PartyVestingBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyVolumeDiscountStats",
          "longName": "PartyVolumeDiscountStats",
          "fullName": "vega.events.v1.PartyVolumeDiscountStats",
          "description": "Volume discount stats for a given party.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "discount_factor",
              "description": "Discount factor applied to fees.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "running_volume",
              "description": "The party's running volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionResolution",
          "longName": "PositionResolution",
          "fullName": "vega.events.v1.PositionResolution",
          "description": "Position resolution event contains information on distressed trades",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "distressed",
              "description": "Number of distressed traders",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "Number of close outs",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mark_price",
              "description": "Mark price as a string representing a scaled price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionStateEvent",
          "longName": "PositionStateEvent",
          "fullName": "vega.events.v1.PositionStateEvent",
          "description": "Position state event contains the current position state for a single party in a single market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID for this position update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID for this position update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Current position",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "potential_buys",
              "description": "Potential orders",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "potential_sells",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vw_buy_price",
              "description": "Volume weighted prices",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vw_sell_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeDataNodeReady",
          "longName": "ProtocolUpgradeDataNodeReady",
          "fullName": "vega.events.v1.ProtocolUpgradeDataNodeReady",
          "description": "Event indicating the data node is ready for protocol upgrade",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "last_block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeEvent",
          "longName": "ProtocolUpgradeEvent",
          "fullName": "vega.events.v1.ProtocolUpgradeEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "upgrade_block_height",
              "description": "Block height at which to perform the upgrade",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_release_tag",
              "description": "Release tag for the vega binary",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "approvers",
              "description": "Tendermint validators that have agreed to the upgrade",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the proposal",
              "label": "",
              "type": "ProtocolUpgradeProposalStatus",
              "longType": "ProtocolUpgradeProposalStatus",
              "fullType": "vega.events.v1.ProtocolUpgradeProposalStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeStarted",
          "longName": "ProtocolUpgradeStarted",
          "fullName": "vega.events.v1.ProtocolUpgradeStarted",
          "description": "Event indicating the core is starting a protocol upgrade",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "last_block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RecurringGovernanceTransfer",
          "longName": "RecurringGovernanceTransfer",
          "fullName": "vega.events.v1.RecurringGovernanceTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "start_epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_epoch",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_epoch",
              "defaultValue": ""
            },
            {
              "name": "dispatch_strategy",
              "description": "",
              "label": "optional",
              "type": "DispatchStrategy",
              "longType": "vega.DispatchStrategy",
              "fullType": "vega.DispatchStrategy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_dispatch_strategy",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RecurringTransfer",
          "longName": "RecurringTransfer",
          "fullName": "vega.events.v1.RecurringTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "start_epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_epoch",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_epoch",
              "defaultValue": ""
            },
            {
              "name": "factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dispatch_strategy",
              "description": "",
              "label": "",
              "type": "DispatchStrategy",
              "longType": "vega.DispatchStrategy",
              "fullType": "vega.DispatchStrategy",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RefereeJoinedReferralSet",
          "longName": "RefereeJoinedReferralSet",
          "fullName": "vega.events.v1.RefereeJoinedReferralSet",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "set_id",
              "description": "Unique ID of the referral set the referee joined.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referee",
              "description": "Party that joined the set.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "joined_at",
              "description": "Time in Unix nanoseconds when the party joined the set.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the party joined the set.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RefereeJoinedTeam",
          "longName": "RefereeJoinedTeam",
          "fullName": "vega.events.v1.RefereeJoinedTeam",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "team_id",
              "description": "The unique identifier of the team the referee joined.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referee",
              "description": "The party that joined the team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "joined_at",
              "description": "Time in Unix nanoseconds when the party joined a team.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the party joined the team.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RefereeStats",
          "longName": "RefereeStats",
          "fullName": "vega.events.v1.RefereeStats",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Unique ID of the party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "discount_factor",
              "description": "Discount factor applied to the party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_notional_taker_volume",
              "description": "Current referee notional taker volume",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RefereeSwitchedTeam",
          "longName": "RefereeSwitchedTeam",
          "fullName": "vega.events.v1.RefereeSwitchedTeam",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_team_id",
              "description": "The unique identifier of the team the referee left.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_team_id",
              "description": "The unique identifier of the team joined.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referee",
              "description": "The party that switched team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "switched_at",
              "description": "Time in Unix nanoseconds when the party switched team. This time acts as\nthe joining time.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the party switched the team.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralProgramEnded",
          "longName": "ReferralProgramEnded",
          "fullName": "vega.events.v1.ReferralProgramEnded",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Program update version.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "Unique ID of the referral program.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ended_at",
              "description": "Time in Unix nanoseconds when the referral program ended.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the referral program ended.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralProgramStarted",
          "longName": "ReferralProgramStarted",
          "fullName": "vega.events.v1.ReferralProgramStarted",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "program",
              "description": "Referral program that has started.",
              "label": "",
              "type": "ReferralProgram",
              "longType": "vega.ReferralProgram",
              "fullType": "vega.ReferralProgram",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "started_at",
              "description": "Time in Unix nanoseconds when the referral program started.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the referral program started.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralProgramUpdated",
          "longName": "ReferralProgramUpdated",
          "fullName": "vega.events.v1.ReferralProgramUpdated",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "program",
              "description": "The updated referral program.",
              "label": "",
              "type": "ReferralProgram",
              "longType": "vega.ReferralProgram",
              "fullType": "vega.ReferralProgram",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Time in Unix nanoseconds when the referral program was updated.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the referral program was updated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSetCreated",
          "longName": "ReferralSetCreated",
          "fullName": "vega.events.v1.ReferralSetCreated",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "set_id",
              "description": "Unique ID of the created set.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referrer",
              "description": "Party that created the set.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Time in Unix nanoseconds when the set was created.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Time in Unix nanoseconds when the set was updated.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSetStatsUpdated",
          "longName": "ReferralSetStatsUpdated",
          "fullName": "vega.events.v1.ReferralSetStatsUpdated",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "set_id",
              "description": "Unique ID of the set.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the set's statistics are updated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referral_set_running_notional_taker_volume",
              "description": "Running volume for the set based on the window length of the current\nreferral program.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referees_stats",
              "description": "Referees' statistics for that epoch.",
              "label": "repeated",
              "type": "RefereeStats",
              "longType": "RefereeStats",
              "fullType": "vega.events.v1.RefereeStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_factor",
              "description": "Reward factor applied to the trades.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards_multiplier",
              "description": "Rewards multiplier applied to the trades.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards_factor_multiplier",
              "description": "Rewards factor multiplier for the trades.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "was_eligible",
              "description": "Indicates if the referral set was eligible to be part of the referral program.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referrer_taker_volume",
              "description": "Taker volume of the referrer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferrerRewardsGenerated",
          "longName": "ReferrerRewardsGenerated",
          "fullName": "vega.events.v1.ReferrerRewardsGenerated",
          "description": "Rewards generated for referrers by each of their referees",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "referrer",
              "description": "Referrer party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "generated_reward",
              "description": "Amount of rewards generated per party.",
              "label": "repeated",
              "type": "PartyAmount",
              "longType": "PartyAmount",
              "fullType": "vega.events.v1.PartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardPayoutEvent",
          "longName": "RewardPayoutEvent",
          "fullName": "vega.events.v1.RewardPayoutEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "percent_of_total_reward",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "locked_until_epoch",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SettleDistressed",
          "longName": "SettleDistressed",
          "fullName": "vega.events.v1.SettleDistressed",
          "description": "Settle distressed event contains information on distressed trading parties who are closed out\n\nNote: Any PositionResolution event (market level) will most likely be followed by a number of these events",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID i.e. a party's public key for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "margin",
              "description": "Margin value as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SettleMarket",
          "longName": "SettleMarket",
          "fullName": "vega.events.v1.SettleMarket",
          "description": "Settle market event to notify data node that a market has been settled\nso positions and PL can be updated accordingly",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price of settlement as a string",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "position_factor",
              "description": "Position factor - 10 ^ number of position decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SettlePosition",
          "longName": "SettlePosition",
          "fullName": "vega.events.v1.SettlePosition",
          "description": "Settle position event contains position settlement information for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID (public key) for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price of settlement as a string",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trade_settlements",
              "description": "A collection of 1 or more trade settlements",
              "label": "repeated",
              "type": "TradeSettlement",
              "longType": "TradeSettlement",
              "fullType": "vega.events.v1.TradeSettlement",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "position_factor",
              "description": "Position factor - 10 ^ number of position decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeLinking",
          "longName": "StakeLinking",
          "fullName": "vega.events.v1.StakeLinking",
          "description": "StakeLinking - an event notifying of stake being deposited or removed for a given party\nThese events are emitted for every Staking deposit or removed accepted by the network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Internal ID for this staking event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Stake linking event type.",
              "label": "",
              "type": "Type",
              "longType": "StakeLinking.Type",
              "fullType": "vega.events.v1.StakeLinking.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ts",
              "description": "Timestamp in Unix nanoseconds of when the event was emitted by Ethereum.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party",
              "description": "Party to whom the event is directed at.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount of stake deposited or removed.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the event.",
              "label": "",
              "type": "Status",
              "longType": "StakeLinking.Status",
              "fullType": "vega.events.v1.StakeLinking.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "finalized_at",
              "description": "Time at which the Vega network finalised the state of the event.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "Hash of the transaction in which the event happened.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "Block when the event happened.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "Block time.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "Log index.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "Ethereum address from which the stake link was initiated.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateVar",
          "longName": "StateVar",
          "fullName": "vega.events.v1.StateVar",
          "description": "StateVar event updates on state changes in state variable consensus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopOrderEvent",
          "longName": "StopOrderEvent",
          "fullName": "vega.events.v1.StopOrderEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "submission",
              "description": "",
              "label": "",
              "type": "OrderSubmission",
              "longType": "vega.commands.v1.OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stop_order",
              "description": "",
              "label": "",
              "type": "StopOrder",
              "longType": "vega.StopOrder",
              "fullType": "vega.StopOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StreamStartEvent",
          "longName": "StreamStartEvent",
          "fullName": "vega.events.v1.StreamStartEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "chain_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamCreated",
          "longName": "TeamCreated",
          "fullName": "vega.events.v1.TeamCreated",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "team_id",
              "description": "The unique identifier of the created team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referrer",
              "description": "The party that created the team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "team_url",
              "description": "Link to the team's homepage.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_team_url",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "Link to an image of the team's avatar.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_avatar_url",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Time in Unix nanoseconds when the team is created.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "Tells if a party can join the team or not.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the team was created.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamUpdated",
          "longName": "TeamUpdated",
          "fullName": "vega.events.v1.TeamUpdated",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "team_id",
              "description": "The unique identifier for the updated team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "team_url",
              "description": "Link to the team's homepage.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_team_url",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "Link to an image of the team's avatar.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_avatar_url",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "Tells if a party can join the team or not.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TimeUpdate",
          "longName": "TimeUpdate",
          "fullName": "vega.events.v1.TimeUpdate",
          "description": "Time update event contains the latest time update from Vega blockchain and indicates the start of a new block",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp containing latest update from Vega blockchain aka Vega-time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradeSettlement",
          "longName": "TradeSettlement",
          "fullName": "vega.events.v1.TradeSettlement",
          "description": "Trade settlement is part of the settle position event",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "size",
              "description": "Size of trade settlement",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price of settlement as string (in asset decimals)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_price",
              "description": "Price of settlement as a string (in market decimals)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionResult",
          "longName": "TransactionResult",
          "fullName": "vega.events.v1.TransactionResult",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Unique party ID for the related party",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the transaction, did it succeed or an error was raised.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "Hash of the transaction\n\nTransaction itself as received by the network",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_submission",
              "description": "",
              "label": "",
              "type": "OrderSubmission",
              "longType": "vega.commands.v1.OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "order_amendment",
              "description": "",
              "label": "",
              "type": "OrderAmendment",
              "longType": "vega.commands.v1.OrderAmendment",
              "fullType": "vega.commands.v1.OrderAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "order_cancellation",
              "description": "",
              "label": "",
              "type": "OrderCancellation",
              "longType": "vega.commands.v1.OrderCancellation",
              "fullType": "vega.commands.v1.OrderCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "proposal",
              "description": "",
              "label": "",
              "type": "ProposalSubmission",
              "longType": "vega.commands.v1.ProposalSubmission",
              "fullType": "vega.commands.v1.ProposalSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "vote_submission",
              "description": "",
              "label": "",
              "type": "VoteSubmission",
              "longType": "vega.commands.v1.VoteSubmission",
              "fullType": "vega.commands.v1.VoteSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_submission",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionSubmission",
              "longType": "vega.commands.v1.LiquidityProvisionSubmission",
              "fullType": "vega.commands.v1.LiquidityProvisionSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "withdraw_submission",
              "description": "",
              "label": "",
              "type": "WithdrawSubmission",
              "longType": "vega.commands.v1.WithdrawSubmission",
              "fullType": "vega.commands.v1.WithdrawSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "delegate_submission",
              "description": "",
              "label": "",
              "type": "DelegateSubmission",
              "longType": "vega.commands.v1.DelegateSubmission",
              "fullType": "vega.commands.v1.DelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "undelegate_submission",
              "description": "",
              "label": "",
              "type": "UndelegateSubmission",
              "longType": "vega.commands.v1.UndelegateSubmission",
              "fullType": "vega.commands.v1.UndelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_cancellation",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionCancellation",
              "longType": "vega.commands.v1.LiquidityProvisionCancellation",
              "fullType": "vega.commands.v1.LiquidityProvisionCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_amendment",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionAmendment",
              "longType": "vega.commands.v1.LiquidityProvisionAmendment",
              "fullType": "vega.commands.v1.LiquidityProvisionAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.commands.v1.Transfer",
              "fullType": "vega.commands.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "cancel_transfer",
              "description": "",
              "label": "",
              "type": "CancelTransfer",
              "longType": "vega.commands.v1.CancelTransfer",
              "fullType": "vega.commands.v1.CancelTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "announce_node",
              "description": "",
              "label": "",
              "type": "AnnounceNode",
              "longType": "vega.commands.v1.AnnounceNode",
              "fullType": "vega.commands.v1.AnnounceNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "oracle_data_submission",
              "description": "",
              "label": "",
              "type": "OracleDataSubmission",
              "longType": "vega.commands.v1.OracleDataSubmission",
              "fullType": "vega.commands.v1.OracleDataSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposal",
              "description": "",
              "label": "",
              "type": "ProtocolUpgradeProposal",
              "longType": "vega.commands.v1.ProtocolUpgradeProposal",
              "fullType": "vega.commands.v1.ProtocolUpgradeProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "issue_signatures",
              "description": "",
              "label": "",
              "type": "IssueSignatures",
              "longType": "vega.commands.v1.IssueSignatures",
              "fullType": "vega.commands.v1.IssueSignatures",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "batch_market_instructions",
              "description": "",
              "label": "",
              "type": "BatchMarketInstructions",
              "longType": "vega.commands.v1.BatchMarketInstructions",
              "fullType": "vega.commands.v1.BatchMarketInstructions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "key_rotate_submission",
              "description": "",
              "label": "",
              "type": "KeyRotateSubmission",
              "longType": "vega.commands.v1.KeyRotateSubmission",
              "fullType": "vega.commands.v1.KeyRotateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "ethereum_key_rotate_submission",
              "description": "",
              "label": "",
              "type": "EthereumKeyRotateSubmission",
              "longType": "vega.commands.v1.EthereumKeyRotateSubmission",
              "fullType": "vega.commands.v1.EthereumKeyRotateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "stop_order_submission",
              "description": "",
              "label": "",
              "type": "StopOrdersSubmission",
              "longType": "vega.commands.v1.StopOrdersSubmission",
              "fullType": "vega.commands.v1.StopOrdersSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "stop_order_cancellation",
              "description": "",
              "label": "",
              "type": "StopOrdersCancellation",
              "longType": "vega.commands.v1.StopOrdersCancellation",
              "fullType": "vega.commands.v1.StopOrdersCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "create_referral_set",
              "description": "",
              "label": "",
              "type": "CreateReferralSet",
              "longType": "vega.commands.v1.CreateReferralSet",
              "fullType": "vega.commands.v1.CreateReferralSet",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "update_referral_set",
              "description": "",
              "label": "",
              "type": "UpdateReferralSet",
              "longType": "vega.commands.v1.UpdateReferralSet",
              "fullType": "vega.commands.v1.UpdateReferralSet",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "apply_referral_code",
              "description": "",
              "label": "",
              "type": "ApplyReferralCode",
              "longType": "vega.commands.v1.ApplyReferralCode",
              "fullType": "vega.commands.v1.ApplyReferralCode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "success",
              "description": "",
              "label": "",
              "type": "SuccessDetails",
              "longType": "TransactionResult.SuccessDetails",
              "fullType": "vega.events.v1.TransactionResult.SuccessDetails",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "extra",
              "defaultValue": ""
            },
            {
              "name": "failure",
              "description": "",
              "label": "",
              "type": "FailureDetails",
              "longType": "TransactionResult.FailureDetails",
              "fullType": "vega.events.v1.TransactionResult.FailureDetails",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "extra",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FailureDetails",
          "longName": "TransactionResult.FailureDetails",
          "fullName": "vega.events.v1.TransactionResult.FailureDetails",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "error",
              "description": "Error message explaining the reason for the transaction failing processing",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SuccessDetails",
          "longName": "TransactionResult.SuccessDetails",
          "fullName": "vega.events.v1.TransactionResult.SuccessDetails",
          "description": "TBD",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "Transfer",
          "longName": "Transfer",
          "fullName": "vega.events.v1.Transfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_account_type",
              "description": "",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account_type",
              "description": "",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "Status",
              "longType": "Transfer.Status",
              "fullType": "vega.events.v1.Transfer.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reason",
              "defaultValue": ""
            },
            {
              "name": "one_off",
              "description": "",
              "label": "",
              "type": "OneOffTransfer",
              "longType": "OneOffTransfer",
              "fullType": "vega.events.v1.OneOffTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "recurring",
              "description": "",
              "label": "",
              "type": "RecurringTransfer",
              "longType": "RecurringTransfer",
              "fullType": "vega.events.v1.RecurringTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "one_off_governance",
              "description": "",
              "label": "",
              "type": "OneOffGovernanceTransfer",
              "longType": "OneOffGovernanceTransfer",
              "fullType": "vega.events.v1.OneOffGovernanceTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "recurring_governance",
              "description": "",
              "label": "",
              "type": "RecurringGovernanceTransfer",
              "longType": "RecurringGovernanceTransfer",
              "fullType": "vega.events.v1.RecurringGovernanceTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferFees",
          "longName": "TransferFees",
          "fullName": "vega.events.v1.TransferFees",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfer_id",
              "description": "Transfer that triggered the collection of fees.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount of fees paid.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "Epoch when the transfer was dispatched, and fees were paid.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TxErrorEvent",
          "longName": "TxErrorEvent",
          "fullName": "vega.events.v1.TxErrorEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Unique party ID for the related party",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "err_msg",
              "description": "Error message describing what went wrong",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_submission",
              "description": "",
              "label": "",
              "type": "OrderSubmission",
              "longType": "vega.commands.v1.OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "order_amendment",
              "description": "",
              "label": "",
              "type": "OrderAmendment",
              "longType": "vega.commands.v1.OrderAmendment",
              "fullType": "vega.commands.v1.OrderAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "order_cancellation",
              "description": "",
              "label": "",
              "type": "OrderCancellation",
              "longType": "vega.commands.v1.OrderCancellation",
              "fullType": "vega.commands.v1.OrderCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "proposal",
              "description": "",
              "label": "",
              "type": "ProposalSubmission",
              "longType": "vega.commands.v1.ProposalSubmission",
              "fullType": "vega.commands.v1.ProposalSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "vote_submission",
              "description": "",
              "label": "",
              "type": "VoteSubmission",
              "longType": "vega.commands.v1.VoteSubmission",
              "fullType": "vega.commands.v1.VoteSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_submission",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionSubmission",
              "longType": "vega.commands.v1.LiquidityProvisionSubmission",
              "fullType": "vega.commands.v1.LiquidityProvisionSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "withdraw_submission",
              "description": "",
              "label": "",
              "type": "WithdrawSubmission",
              "longType": "vega.commands.v1.WithdrawSubmission",
              "fullType": "vega.commands.v1.WithdrawSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "delegate_submission",
              "description": "",
              "label": "",
              "type": "DelegateSubmission",
              "longType": "vega.commands.v1.DelegateSubmission",
              "fullType": "vega.commands.v1.DelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "undelegate_submission",
              "description": "",
              "label": "",
              "type": "UndelegateSubmission",
              "longType": "vega.commands.v1.UndelegateSubmission",
              "fullType": "vega.commands.v1.UndelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_cancellation",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionCancellation",
              "longType": "vega.commands.v1.LiquidityProvisionCancellation",
              "fullType": "vega.commands.v1.LiquidityProvisionCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_amendment",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionAmendment",
              "longType": "vega.commands.v1.LiquidityProvisionAmendment",
              "fullType": "vega.commands.v1.LiquidityProvisionAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.commands.v1.Transfer",
              "fullType": "vega.commands.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "cancel_transfer",
              "description": "",
              "label": "",
              "type": "CancelTransfer",
              "longType": "vega.commands.v1.CancelTransfer",
              "fullType": "vega.commands.v1.CancelTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "announce_node",
              "description": "",
              "label": "",
              "type": "AnnounceNode",
              "longType": "vega.commands.v1.AnnounceNode",
              "fullType": "vega.commands.v1.AnnounceNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "oracle_data_submission",
              "description": "",
              "label": "",
              "type": "OracleDataSubmission",
              "longType": "vega.commands.v1.OracleDataSubmission",
              "fullType": "vega.commands.v1.OracleDataSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposal",
              "description": "",
              "label": "",
              "type": "ProtocolUpgradeProposal",
              "longType": "vega.commands.v1.ProtocolUpgradeProposal",
              "fullType": "vega.commands.v1.ProtocolUpgradeProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "issue_signatures",
              "description": "",
              "label": "",
              "type": "IssueSignatures",
              "longType": "vega.commands.v1.IssueSignatures",
              "fullType": "vega.commands.v1.IssueSignatures",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "batch_market_instructions",
              "description": "",
              "label": "",
              "type": "BatchMarketInstructions",
              "longType": "vega.commands.v1.BatchMarketInstructions",
              "fullType": "vega.commands.v1.BatchMarketInstructions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorRankingEvent",
          "longName": "ValidatorRankingEvent",
          "fullName": "vega.events.v1.ValidatorRankingEvent",
          "description": "Event that explains the status of the validator for the coming epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_score",
              "description": "Stake based score - no anti-whaling",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "performance_score",
              "description": "Performance base score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "Final score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_status",
              "description": "Status of the validator in the previous epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_status",
              "description": "Status of the validator in the next epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch seq for which the status is valid",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tm_voting_power",
              "description": "Tendermint voting power of the validator",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorScoreEvent",
          "longName": "ValidatorScoreEvent",
          "fullName": "vega.events.v1.ValidatorScoreEvent",
          "description": "ValidatorScoreEvent is the score a validator gets for a given epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "normalised_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_performance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "raw_validator_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_status",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "multisig_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorUpdate",
          "longName": "ValidatorUpdate",
          "fullName": "vega.events.v1.ValidatorUpdate",
          "description": "Validator update event contains information about validator node",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node ID of the validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_pub_key",
              "description": "Vega public key of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "Ethereum public key of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tm_pub_key",
              "description": "Public key of Tendermint",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info_url",
              "description": "URL with more info on the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "country",
              "description": "Country code (ISO 3166-1 alpha-2) for the location of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "AvatarURL of the validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_pub_key_index",
              "description": "Vega public key derivation index",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "added",
              "description": "Flag indicating if the validator has been added to or removed from vega",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_epoch",
              "description": "Epoch in which the announced pending node will start participating in the network",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter_address",
              "description": "Ethereum public key being used as the submitter to allow automatic signature generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch in which the node was announced or removed from the network",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VestingBalancesSummary",
          "longName": "VestingBalancesSummary",
          "fullName": "vega.events.v1.VestingBalancesSummary",
          "description": "Summary of the vesting and locked balances for an epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch_seq",
              "description": "Epoch for which these balances are valid.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parties_vesting_summary",
              "description": "Parties' summaries.",
              "label": "repeated",
              "type": "PartyVestingSummary",
              "longType": "PartyVestingSummary",
              "fullType": "vega.events.v1.PartyVestingSummary",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VestingStatsUpdated",
          "longName": "VestingStatsUpdated",
          "fullName": "vega.events.v1.VestingStatsUpdated",
          "description": "Stats of all parties invested in the vesting program.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "at_epoch",
              "description": "Epoch at which the vesting statistics are updated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stats",
              "description": "All parties stats.",
              "label": "repeated",
              "type": "PartyVestingStats",
              "longType": "PartyVestingStats",
              "fullType": "vega.events.v1.PartyVestingStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountProgramEnded",
          "longName": "VolumeDiscountProgramEnded",
          "fullName": "vega.events.v1.VolumeDiscountProgramEnded",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Program update version.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "Unique ID of the volume discount program.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ended_at",
              "description": "Time in Unix nanoseconds when the referral program ended.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the referral program ended.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountProgramStarted",
          "longName": "VolumeDiscountProgramStarted",
          "fullName": "vega.events.v1.VolumeDiscountProgramStarted",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "program",
              "description": "Volume discount program that has started.",
              "label": "",
              "type": "VolumeDiscountProgram",
              "longType": "vega.VolumeDiscountProgram",
              "fullType": "vega.VolumeDiscountProgram",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "started_at",
              "description": "Time in Unix nanoseconds when the volume discount program started.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the volume discount program started.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountProgramUpdated",
          "longName": "VolumeDiscountProgramUpdated",
          "fullName": "vega.events.v1.VolumeDiscountProgramUpdated",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "program",
              "description": "The updated volume discount program.",
              "label": "",
              "type": "VolumeDiscountProgram",
              "longType": "vega.VolumeDiscountProgram",
              "fullType": "vega.VolumeDiscountProgram",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Time in Unix nanoseconds when the volume discount program was updated.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the volume discount program was updated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountStatsUpdated",
          "longName": "VolumeDiscountStatsUpdated",
          "fullName": "vega.events.v1.VolumeDiscountStatsUpdated",
          "description": "Stats of all parties eligible for volume discount.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "at_epoch",
              "description": "Epoch at which the volume discount statistics are updated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stats",
              "description": "All parties' stats.",
              "label": "repeated",
              "type": "PartyVolumeDiscountStats",
              "longType": "PartyVolumeDiscountStats",
              "fullType": "vega.events.v1.PartyVolumeDiscountStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "data-node/api/v2/trading_data.proto",
      "description": "",
      "package": "datanode.api.v2",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "AccountField",
          "longName": "AccountField",
          "fullName": "datanode.api.v2.AccountField",
          "description": "List of the properties of an account, used for grouping",
          "values": [
            {
              "name": "ACCOUNT_FIELD_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "ACCOUNT_FIELD_ID",
              "number": "1",
              "description": ""
            },
            {
              "name": "ACCOUNT_FIELD_PARTY_ID",
              "number": "2",
              "description": ""
            },
            {
              "name": "ACCOUNT_FIELD_ASSET_ID",
              "number": "3",
              "description": ""
            },
            {
              "name": "ACCOUNT_FIELD_MARKET_ID",
              "number": "4",
              "description": ""
            },
            {
              "name": "ACCOUNT_FIELD_TYPE",
              "number": "5",
              "description": ""
            }
          ]
        },
        {
          "name": "LedgerEntryField",
          "longName": "LedgerEntryField",
          "fullName": "datanode.api.v2.LedgerEntryField",
          "description": "List of fields for a ledger entry",
          "values": [
            {
              "name": "LEDGER_ENTRY_FIELD_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "LEDGER_ENTRY_FIELD_ACCOUNT_FROM_ID",
              "number": "1",
              "description": ""
            },
            {
              "name": "LEDGER_ENTRY_FIELD_ACCOUNT_TO_ID",
              "number": "2",
              "description": ""
            },
            {
              "name": "LEDGER_ENTRY_FIELD_TRANSFER_TYPE",
              "number": "3",
              "description": ""
            }
          ]
        },
        {
          "name": "Type",
          "longName": "ListGovernanceDataRequest.Type",
          "fullName": "datanode.api.v2.ListGovernanceDataRequest.Type",
          "description": "Filter for the types of governance proposals to view",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_ALL",
              "number": "1",
              "description": "List all proposals"
            },
            {
              "name": "TYPE_NEW_MARKET",
              "number": "2",
              "description": "List new market proposals"
            },
            {
              "name": "TYPE_UPDATE_MARKET",
              "number": "3",
              "description": "List update market proposals"
            },
            {
              "name": "TYPE_NETWORK_PARAMETERS",
              "number": "4",
              "description": "List change Vega network parameter proposals"
            },
            {
              "name": "TYPE_NEW_ASSET",
              "number": "5",
              "description": "New asset proposals"
            },
            {
              "name": "TYPE_NEW_FREE_FORM",
              "number": "6",
              "description": "Proposals for creating a new free form proposal"
            },
            {
              "name": "TYPE_UPDATE_ASSET",
              "number": "7",
              "description": "Update asset proposals"
            },
            {
              "name": "TYPE_NEW_SPOT_MARKET",
              "number": "8",
              "description": "Propose a new spot market"
            },
            {
              "name": "TYPE_UPDATE_SPOT_MARKET",
              "number": "9",
              "description": "Update an existing spot market"
            },
            {
              "name": "TYPE_NEW_TRANSFER",
              "number": "10",
              "description": "Propose a new transfer"
            },
            {
              "name": "TYPE_CANCEL_TRANSFER",
              "number": "11",
              "description": "Proposal to cancel a transfer"
            },
            {
              "name": "TYPE_UPDATE_MARKET_STATE",
              "number": "12",
              "description": "Proposal for updating the state of a market"
            },
            {
              "name": "TYPE_UPDATE_REFERRAL_PROGRAM",
              "number": "13",
              "description": "Proposal to update the referral program"
            },
            {
              "name": "TYPE_UPDATE_VOLUME_DISCOUNT_PROGRAM",
              "number": "14",
              "description": "Proposal to update the volume discount program"
            }
          ]
        },
        {
          "name": "Table",
          "longName": "Table",
          "fullName": "datanode.api.v2.Table",
          "description": "",
          "values": [
            {
              "name": "TABLE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TABLE_BALANCES",
              "number": "1",
              "description": ""
            },
            {
              "name": "TABLE_CHECKPOINTS",
              "number": "2",
              "description": ""
            },
            {
              "name": "TABLE_DELEGATIONS",
              "number": "3",
              "description": ""
            },
            {
              "name": "TABLE_LEDGER",
              "number": "4",
              "description": ""
            },
            {
              "name": "TABLE_ORDERS",
              "number": "5",
              "description": ""
            },
            {
              "name": "TABLE_TRADES",
              "number": "6",
              "description": ""
            },
            {
              "name": "TABLE_MARKET_DATA",
              "number": "7",
              "description": ""
            },
            {
              "name": "TABLE_MARGIN_LEVELS",
              "number": "8",
              "description": ""
            },
            {
              "name": "TABLE_POSITIONS",
              "number": "9",
              "description": ""
            },
            {
              "name": "TABLE_LIQUIDITY_PROVISIONS",
              "number": "10",
              "description": ""
            },
            {
              "name": "TABLE_MARKETS",
              "number": "11",
              "description": ""
            },
            {
              "name": "TABLE_DEPOSITS",
              "number": "12",
              "description": ""
            },
            {
              "name": "TABLE_WITHDRAWALS",
              "number": "13",
              "description": ""
            },
            {
              "name": "TABLE_BLOCKS",
              "number": "14",
              "description": ""
            },
            {
              "name": "TABLE_REWARDS",
              "number": "15",
              "description": ""
            }
          ]
        },
        {
          "name": "TransferDirection",
          "longName": "TransferDirection",
          "fullName": "datanode.api.v2.TransferDirection",
          "description": "Direction of a transfer",
          "values": [
            {
              "name": "TRANSFER_DIRECTION_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TRANSFER_DIRECTION_TRANSFER_FROM",
              "number": "1",
              "description": ""
            },
            {
              "name": "TRANSFER_DIRECTION_TRANSFER_TO",
              "number": "2",
              "description": ""
            },
            {
              "name": "TRANSFER_DIRECTION_TRANSFER_TO_OR_FROM",
              "number": "3",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AccountBalance",
          "longName": "AccountBalance",
          "fullName": "datanode.api.v2.AccountBalance",
          "description": "Represents the current balance of an account for an asset on Vega, for a particular owner or party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "Party that owns the account.\nSpecial values include `network` - represents the Vega network and is\nmost commonly seen during liquidation of a distressed trading position.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "Asset balance represented as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.\nBalances cannot be negative.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset ID for the account.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID for the account, this field will be empty if the asset is in a general account.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Account type of this account.",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AccountEdge",
          "longName": "AccountEdge",
          "fullName": "datanode.api.v2.AccountEdge",
          "description": "Account data item with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Account balance data.",
              "label": "",
              "type": "AccountBalance",
              "longType": "AccountBalance",
              "fullType": "datanode.api.v2.AccountBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages with reference to this account.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AccountFilter",
          "longName": "AccountFilter",
          "fullName": "datanode.api.v2.AccountFilter",
          "description": "Account filter is used to filter account data.\n\nAn account is defined as a set of asset ID, type, party ID, and market ID.\n- Every account has an associated asset and type.\n- Certain account types such as the global reward pool for example, do not have an associated party.\n  These are denoted by the special party ID 'network'.\n- Certain account types do not have an associated market such as the general party accounts, for example.\n  These are denoted by the special market ID '' (an empty string).",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Restrict accounts to those holding balances in this asset ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_ids",
              "description": "Restrict accounts to those owned by the parties in this list. Pass an empty list for no filter.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_ids",
              "description": "Restrict accounts to those connected to the markets in this list. Pass an empty list for no filter.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_types",
              "description": "Restrict accounts to those connected to any of the types in this list. Pass an empty list for no filter.",
              "label": "repeated",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AccountSnapshotPage",
          "longName": "AccountSnapshotPage",
          "fullName": "datanode.api.v2.AccountSnapshotPage",
          "description": "'Initial image' snapshot containing current account balances - may be sent over several response messages",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "List of account balances.",
              "label": "repeated",
              "type": "AccountBalance",
              "longType": "AccountBalance",
              "fullType": "datanode.api.v2.AccountBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_page",
              "description": "Indicator if the current page is the last one or not.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AccountUpdates",
          "longName": "AccountUpdates",
          "fullName": "datanode.api.v2.AccountUpdates",
          "description": "List of account updates in the last block",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "List of account balances.",
              "label": "repeated",
              "type": "AccountBalance",
              "longType": "AccountBalance",
              "fullType": "datanode.api.v2.AccountBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AccountsConnection",
          "longName": "AccountsConnection",
          "fullName": "datanode.api.v2.AccountsConnection",
          "description": "Page of accounts data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of accounts data and their corresponding cursors.",
              "label": "repeated",
              "type": "AccountEdge",
              "longType": "AccountEdge",
              "fullType": "datanode.api.v2.AccountEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AggregatedBalance",
          "longName": "AggregatedBalance",
          "fullName": "datanode.api.v2.AggregatedBalance",
          "description": "AggregatedBalance data contains the balance of the set of requested accounts combined with corresponding\nparty ID, market ID and account type details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp in Unix nanoseconds of the block in which the balance exists.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "Balance of the set of requested accounts at the time above.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "If grouping by party, the party ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "If grouping by asset, the asset ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "If grouping by market, the market ID",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "account_type",
              "description": "If grouping by account type, the account type.",
              "label": "optional",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_account_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AggregatedBalanceConnection",
          "longName": "AggregatedBalanceConnection",
          "fullName": "datanode.api.v2.AggregatedBalanceConnection",
          "description": "Page of aggregated balance objects and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of aggregated balance data and their corresponding cursors.",
              "label": "repeated",
              "type": "AggregatedBalanceEdge",
              "longType": "AggregatedBalanceEdge",
              "fullType": "datanode.api.v2.AggregatedBalanceEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AggregatedBalanceEdge",
          "longName": "AggregatedBalanceEdge",
          "fullName": "datanode.api.v2.AggregatedBalanceEdge",
          "description": "Aggregated balance data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Balance of the set of requested accounts.",
              "label": "",
              "type": "AggregatedBalance",
              "longType": "AggregatedBalance",
              "fullType": "datanode.api.v2.AggregatedBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AggregatedLedgerEntriesConnection",
          "longName": "AggregatedLedgerEntriesConnection",
          "fullName": "datanode.api.v2.AggregatedLedgerEntriesConnection",
          "description": "Page of aggregated ledger entries data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of 'AggregatedLedgerEntry' data and their corresponding cursors.",
              "label": "repeated",
              "type": "AggregatedLedgerEntriesEdge",
              "longType": "AggregatedLedgerEntriesEdge",
              "fullType": "datanode.api.v2.AggregatedLedgerEntriesEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AggregatedLedgerEntriesEdge",
          "longName": "AggregatedLedgerEntriesEdge",
          "fullName": "datanode.api.v2.AggregatedLedgerEntriesEdge",
          "description": "Represents the aggregated ledger entry data with corresponding cursor for it",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "'AggregatedLedgerEntry' data.",
              "label": "",
              "type": "AggregatedLedgerEntry",
              "longType": "AggregatedLedgerEntry",
              "fullType": "datanode.api.v2.AggregatedLedgerEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AggregatedLedgerEntry",
          "longName": "AggregatedLedgerEntry",
          "fullName": "datanode.api.v2.AggregatedLedgerEntry",
          "description": "Represents an aggregated view of ledger entry data, sender and receiver accounts,\ndetails and balances for both sides after the transfer has been made",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp in Unix nanoseconds of the block in which the result is referring to.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantity",
              "description": "Amount of ledger entries for the set of requested accounts at the time above.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transfer_type",
              "description": "Transfer type.",
              "label": "",
              "type": "TransferType",
              "longType": "vega.TransferType",
              "fullType": "vega.TransferType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "Asset ID for the asset associated with the entry.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "from_account_type",
              "description": "Type of account sent from.",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account_type",
              "description": "Type of account received to.",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_account_party_id",
              "description": "Sender's party ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_from_account_party_id",
              "defaultValue": ""
            },
            {
              "name": "to_account_party_id",
              "description": "Receiver's party ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_to_account_party_id",
              "defaultValue": ""
            },
            {
              "name": "from_account_market_id",
              "description": "Sender market ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_from_account_market_id",
              "defaultValue": ""
            },
            {
              "name": "to_account_market_id",
              "description": "Receiver market ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_to_account_market_id",
              "defaultValue": ""
            },
            {
              "name": "from_account_balance",
              "description": "Sender account balance after the transfer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account_balance",
              "description": "Receiver account balance after the transfer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetEdge",
          "longName": "AssetEdge",
          "fullName": "datanode.api.v2.AssetEdge",
          "description": "Assets data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Asset data returned.",
              "label": "",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetsConnection",
          "longName": "AssetsConnection",
          "fullName": "datanode.api.v2.AssetsConnection",
          "description": "Page of asset data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of assets data and their corresponding cursors.",
              "label": "repeated",
              "type": "AssetEdge",
              "longType": "AssetEdge",
              "fullType": "datanode.api.v2.AssetEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Candle",
          "longName": "Candle",
          "fullName": "datanode.api.v2.Candle",
          "description": "Represents the high, low, open, and closing prices for an interval of trading,\nreferred to commonly as a candlestick or candle",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "start",
              "description": "Timestamp in Unix nanoseconds for the point in time when the candle was initially created/opened.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_update",
              "description": "Timestamp in Unix nanoseconds for the point in time when the candle was last updated.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "high",
              "description": "Highest price for trading during the candle interval.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "low",
              "description": "Lowest price for trading during the candle interval.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open",
              "description": "Open trade price.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "close",
              "description": "Closing trade price.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Total trading volume during the candle interval.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "notional",
              "description": "Total notional value traded during the candle interval.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CandleDataConnection",
          "longName": "CandleDataConnection",
          "fullName": "datanode.api.v2.CandleDataConnection",
          "description": "Page of candles data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of candle data items and their corresponding cursors.",
              "label": "repeated",
              "type": "CandleEdge",
              "longType": "CandleEdge",
              "fullType": "datanode.api.v2.CandleEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CandleEdge",
          "longName": "CandleEdge",
          "fullName": "datanode.api.v2.CandleEdge",
          "description": "Candle data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Candlestick data, i.e. high, low, open, and closing prices for an interval of trading.",
              "label": "",
              "type": "Candle",
              "longType": "Candle",
              "fullType": "datanode.api.v2.Candle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Checkpoint",
          "longName": "Checkpoint",
          "fullName": "datanode.api.v2.Checkpoint",
          "description": "Actual data regarding a checkpoint",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hash",
              "description": "Hash of the checkpoint.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "Block hash at which the checkpoint is made.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_block",
              "description": "Block number at which the checkpoint is made.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointEdge",
          "longName": "CheckpointEdge",
          "fullName": "datanode.api.v2.CheckpointEdge",
          "description": "Checkpoint data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data relating to a single checkpoint generated by the Vega network.",
              "label": "",
              "type": "Checkpoint",
              "longType": "Checkpoint",
              "fullType": "datanode.api.v2.Checkpoint",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointsConnection",
          "longName": "CheckpointsConnection",
          "fullName": "datanode.api.v2.CheckpointsConnection",
          "description": "Page of checkpoints data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of checkpoints data and their corresponding cursors.",
              "label": "repeated",
              "type": "CheckpointEdge",
              "longType": "CheckpointEdge",
              "fullType": "datanode.api.v2.CheckpointEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CoreSnapshotConnection",
          "longName": "CoreSnapshotConnection",
          "fullName": "datanode.api.v2.CoreSnapshotConnection",
          "description": "Page of core snapshot data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of core snapshot data and their corresponding cursors.",
              "label": "repeated",
              "type": "CoreSnapshotEdge",
              "longType": "CoreSnapshotEdge",
              "fullType": "datanode.api.v2.CoreSnapshotEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CoreSnapshotEdge",
          "longName": "CoreSnapshotEdge",
          "fullName": "datanode.api.v2.CoreSnapshotEdge",
          "description": "Core snapshot data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Core snapshot data.",
              "label": "",
              "type": "CoreSnapshotData",
              "longType": "vega.events.v1.CoreSnapshotData",
              "fullType": "vega.events.v1.CoreSnapshotData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DateRange",
          "longName": "DateRange",
          "fullName": "datanode.api.v2.DateRange",
          "description": "Date range for queries that can return historical data\nTimestamps should be provided as unix time in Unix nanoseconds and are inclusive.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "start_timestamp",
              "description": "Timestamp in Unix nanoseconds indicating the start of the date range.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_start_timestamp",
              "defaultValue": ""
            },
            {
              "name": "end_timestamp",
              "description": "Timestamp in Unix nanoseconds indicating the end of the date range.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_timestamp",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationEdge",
          "longName": "DelegationEdge",
          "fullName": "datanode.api.v2.DelegationEdge",
          "description": "Delegation data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "How much a party is delegating to a node and when.",
              "label": "",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationsConnection",
          "longName": "DelegationsConnection",
          "fullName": "datanode.api.v2.DelegationsConnection",
          "description": "Page of delegations data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of delegations data and their corresponding cursors.",
              "label": "repeated",
              "type": "DelegationEdge",
              "longType": "DelegationEdge",
              "fullType": "datanode.api.v2.DelegationEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DepositEdge",
          "longName": "DepositEdge",
          "fullName": "datanode.api.v2.DepositEdge",
          "description": "Deposits data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data associated with a single deposit made on the Vega network.",
              "label": "",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DepositsConnection",
          "longName": "DepositsConnection",
          "fullName": "datanode.api.v2.DepositsConnection",
          "description": "Page of deposits data received and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of deposits data and their corresponding cursors.",
              "label": "repeated",
              "type": "DepositEdge",
              "longType": "DepositEdge",
              "fullType": "datanode.api.v2.DepositEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerAddedBundle",
          "longName": "ERC20MultiSigSignerAddedBundle",
          "fullName": "datanode.api.v2.ERC20MultiSigSignerAddedBundle",
          "description": "Signature bundle data to be added",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_signer",
              "description": "Ethereum address of the signer to be removed.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "Ethereum address of the submitter.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Nonce used in the signing operation.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Unixnano timestamp for when the validator was added.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Bundle of signatures from current validators to sign in the new signer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch in which the validator was added.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerAddedBundleEdge",
          "longName": "ERC20MultiSigSignerAddedBundleEdge",
          "fullName": "datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge",
          "description": "Signature bundle data that is to be added with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Signature bundle data to be added.",
              "label": "",
              "type": "ERC20MultiSigSignerAddedBundle",
              "longType": "ERC20MultiSigSignerAddedBundle",
              "fullType": "datanode.api.v2.ERC20MultiSigSignerAddedBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerAddedConnection",
          "longName": "ERC20MultiSigSignerAddedConnection",
          "fullName": "datanode.api.v2.ERC20MultiSigSignerAddedConnection",
          "description": "Page of signature data items to be added and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of signature bundle data and their corresponding cursors.",
              "label": "repeated",
              "type": "ERC20MultiSigSignerAddedBundleEdge",
              "longType": "ERC20MultiSigSignerAddedBundleEdge",
              "fullType": "datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerAddedEdge",
          "longName": "ERC20MultiSigSignerAddedEdge",
          "fullName": "datanode.api.v2.ERC20MultiSigSignerAddedEdge",
          "description": "Signature data that is to be added with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Signature data to be added.",
              "label": "",
              "type": "ERC20MultiSigSignerAdded",
              "longType": "vega.events.v1.ERC20MultiSigSignerAdded",
              "fullType": "vega.events.v1.ERC20MultiSigSignerAdded",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerRemovedBundle",
          "longName": "ERC20MultiSigSignerRemovedBundle",
          "fullName": "datanode.api.v2.ERC20MultiSigSignerRemovedBundle",
          "description": "Signature bundle data to be removed",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "old_signer",
              "description": "Ethereum address of the signer to be removed.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "Ethereum address of the submitter.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Nonce used in the signing operation.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Unixnano timestamp for when the validator was added.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Bundle of signatures from current validators to sign in the new signer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch in which the validator was removed.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerRemovedBundleEdge",
          "longName": "ERC20MultiSigSignerRemovedBundleEdge",
          "fullName": "datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge",
          "description": "Signature bundle data to be removed, with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Signature bundle data to be added.",
              "label": "",
              "type": "ERC20MultiSigSignerRemovedBundle",
              "longType": "ERC20MultiSigSignerRemovedBundle",
              "fullType": "datanode.api.v2.ERC20MultiSigSignerRemovedBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerRemovedConnection",
          "longName": "ERC20MultiSigSignerRemovedConnection",
          "fullName": "datanode.api.v2.ERC20MultiSigSignerRemovedConnection",
          "description": "Page of signature data items to be removed and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of signature bundle data and their corresponding cursors.",
              "label": "repeated",
              "type": "ERC20MultiSigSignerRemovedBundleEdge",
              "longType": "ERC20MultiSigSignerRemovedBundleEdge",
              "fullType": "datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerRemovedEdge",
          "longName": "ERC20MultiSigSignerRemovedEdge",
          "fullName": "datanode.api.v2.ERC20MultiSigSignerRemovedEdge",
          "description": "Signature data to be removed with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Signature data to be removed.",
              "label": "",
              "type": "ERC20MultiSigSignerRemoved",
              "longType": "vega.events.v1.ERC20MultiSigSignerRemoved",
              "fullType": "vega.events.v1.ERC20MultiSigSignerRemoved",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochRewardSummaryConnection",
          "longName": "EpochRewardSummaryConnection",
          "fullName": "datanode.api.v2.EpochRewardSummaryConnection",
          "description": "Page of rewards summary data for epoch and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of rewards summary data for epochs and their corresponding cursors.",
              "label": "repeated",
              "type": "EpochRewardSummaryEdge",
              "longType": "EpochRewardSummaryEdge",
              "fullType": "datanode.api.v2.EpochRewardSummaryEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochRewardSummaryEdge",
          "longName": "EpochRewardSummaryEdge",
          "fullName": "datanode.api.v2.EpochRewardSummaryEdge",
          "description": "Rewards summary data for epoch with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Rewards summary data for epoch.",
              "label": "",
              "type": "EpochRewardSummary",
              "longType": "vega.EpochRewardSummary",
              "fullType": "vega.EpochRewardSummary",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateFeeRequest",
          "longName": "EstimateFeeRequest",
          "fullName": "datanode.api.v2.EstimateFeeRequest",
          "description": "Request to fetch the estimated fee if an order were to trade immediately",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID, used to specify the fee factors.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price at which the potential order is expected to trade.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size at which the potential order is expected to trade.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateFeeResponse",
          "longName": "EstimateFeeResponse",
          "fullName": "datanode.api.v2.EstimateFeeResponse",
          "description": "Response that is received from EstimateFeeRequest, contains the estimated fees for a given order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "fee",
              "description": "Summary of the estimated fees for this order if it were to trade now.",
              "label": "",
              "type": "Fee",
              "longType": "vega.Fee",
              "fullType": "vega.Fee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateMarginRequest",
          "longName": "EstimateMarginRequest",
          "fullName": "datanode.api.v2.EstimateMarginRequest",
          "description": "Request to fetch the estimated MarginLevels if an order were to trade immediately",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID for the order.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID of the order.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "side",
              "description": "Order side - indicator for Seller or Buyer side.",
              "label": "",
              "type": "Side",
              "longType": "vega.Side",
              "fullType": "vega.Side",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of the order.",
              "label": "",
              "type": "Type",
              "longType": "vega.Order.Type",
              "fullType": "vega.Order.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size of order.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price of the asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ],
          "options": {
            "deprecated": true
          }
        },
        {
          "name": "EstimateMarginResponse",
          "longName": "EstimateMarginResponse",
          "fullName": "datanode.api.v2.EstimateMarginResponse",
          "description": "Response to an estimate margin request, containing the estimated margin levels for a given order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "margin_levels",
              "description": "Summary of the estimated margins for this order if it were to trade now.",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ],
          "options": {
            "deprecated": true
          }
        },
        {
          "name": "EstimatePositionRequest",
          "longName": "EstimatePositionRequest",
          "fullName": "datanode.api.v2.EstimatePositionRequest",
          "description": "Request for the estimate of the margin level and, if available collateral is provided, liquidation price for the specified position.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to estimate position for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open_volume",
              "description": "Open volume. This field is a signed integer scaled to the market's position decimal places.\nA negative number denotes a short position.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "orders",
              "description": "Open and/or hypothetical orders.",
              "label": "repeated",
              "type": "OrderInfo",
              "longType": "OrderInfo",
              "fullType": "datanode.api.v2.OrderInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral_available",
              "description": "Collateral available for the position. If provided then response will contain the liquidation price estimate.\nCollateral available needs to be provided scaled to asset decimal places. Liquidation price returned is scaled to asset decimal places by default.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_collateral_available",
              "defaultValue": ""
            },
            {
              "name": "scale_liquidation_price_to_market_decimals",
              "description": "Whether the liquidation price estimates should be scaled to market decimal places or by asset decimal places. If not set, asset decimal places are used.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_scale_liquidation_price_to_market_decimals",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimatePositionResponse",
          "longName": "EstimatePositionResponse",
          "fullName": "datanode.api.v2.EstimatePositionResponse",
          "description": "Response for the estimate of the margin level and, if available collateral was provided in the request, liquidation price for the specified position.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "margin",
              "description": "Margin level range estimate for the specified position.",
              "label": "",
              "type": "MarginEstimate",
              "longType": "MarginEstimate",
              "fullType": "datanode.api.v2.MarginEstimate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidation",
              "description": "Liquidation price range estimate for the specified position. Only populated if available collateral was specified in the request.",
              "label": "",
              "type": "LiquidationEstimate",
              "longType": "LiquidationEstimate",
              "fullType": "datanode.api.v2.LiquidationEstimate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumKeyRotationEdge",
          "longName": "EthereumKeyRotationEdge",
          "fullName": "datanode.api.v2.EthereumKeyRotationEdge",
          "description": "Ethereum key rotation data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data relating to an Ethereum key rotation performed by a node on the Vega network.",
              "label": "",
              "type": "EthereumKeyRotation",
              "longType": "vega.events.v1.EthereumKeyRotation",
              "fullType": "vega.events.v1.EthereumKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumKeyRotationsConnection",
          "longName": "EthereumKeyRotationsConnection",
          "fullName": "datanode.api.v2.EthereumKeyRotationsConnection",
          "description": "Page of Ethereum key rotations data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of Ethereum key rotations data and their corresponding cursors.",
              "label": "repeated",
              "type": "EthereumKeyRotationEdge",
              "longType": "EthereumKeyRotationEdge",
              "fullType": "datanode.api.v2.EthereumKeyRotationEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExportLedgerEntriesRequest",
          "longName": "ExportLedgerEntriesRequest",
          "fullName": "datanode.api.v2.ExportLedgerEntriesRequest",
          "description": "Request that is sent when exporting ledger entries to csv",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict exported ledger entries to those relating to the given party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "Restrict exported ledger entries to those relating to the given asset ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "Date range to export ledger entries for.",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExportNetworkHistoryRequest",
          "longName": "ExportNetworkHistoryRequest",
          "fullName": "datanode.api.v2.ExportNetworkHistoryRequest",
          "description": "Request to export network history data in CSV format",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_block",
              "description": "Block to begin exporting from. Must be the first block of a history segment,\nwhich by default are 1000 blocks each; in that case - 1, 1001, 2001 etc. are valid values.\nThis can be checked by first calling the API to list all network history segments.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_block",
              "description": "Last block to export up to and including. Must be the last block of a history segment\nwhich by default are 1000 blocks each; in that case - 1000, 2000, 3000 etc. are valid values.\nThis can be checked by first calling the API to list all network history segments.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "table",
              "description": "Table to export data from.",
              "label": "",
              "type": "Table",
              "longType": "Table",
              "fullType": "datanode.api.v2.Table",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeesStatsForParty",
          "longName": "FeesStatsForParty",
          "fullName": "datanode.api.v2.FeesStatsForParty",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Settlement asset of the market.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_rewards_received",
              "description": "Total referral rewards received by referrer of the referral set.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referees_discount_applied",
              "description": "Total referral discounts applied to referee fees.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume_discount_applied",
              "description": "Total volume discounts applied to referee fees.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_maker_fees_received",
              "description": "Total maker fees received by the maker side.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPayment",
          "longName": "FundingPayment",
          "fullName": "datanode.api.v2.FundingPayment",
          "description": "A funding payment for a party on a perpetual market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party that received the funding payment.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market that produced the funding payment.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "funding_period_seq",
              "description": "Funding period sequence this payment was calculated from.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp, in Unix nanoseconds, at which this funding payment occured.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Funding payment amount, where a positive value indicates an earned payment received and a negative value a loss.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPaymentConnection",
          "longName": "FundingPaymentConnection",
          "fullName": "datanode.api.v2.FundingPaymentConnection",
          "description": "Page of funding payment data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of funding payment data and their corresponding cursors.",
              "label": "repeated",
              "type": "FundingPaymentEdge",
              "longType": "FundingPaymentEdge",
              "fullType": "datanode.api.v2.FundingPaymentEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPaymentEdge",
          "longName": "FundingPaymentEdge",
          "fullName": "datanode.api.v2.FundingPaymentEdge",
          "description": "Funding payment data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Funding payment data.",
              "label": "",
              "type": "FundingPayment",
              "longType": "FundingPayment",
              "fullType": "datanode.api.v2.FundingPayment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPeriodConnection",
          "longName": "FundingPeriodConnection",
          "fullName": "datanode.api.v2.FundingPeriodConnection",
          "description": "Page of funding period data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of funding period data and their corresponding cursors.",
              "label": "repeated",
              "type": "FundingPeriodEdge",
              "longType": "FundingPeriodEdge",
              "fullType": "datanode.api.v2.FundingPeriodEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPeriodDataPointConnection",
          "longName": "FundingPeriodDataPointConnection",
          "fullName": "datanode.api.v2.FundingPeriodDataPointConnection",
          "description": "Page of funding period data points and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of funding period data points and their corresponding cursors.",
              "label": "repeated",
              "type": "FundingPeriodDataPointEdge",
              "longType": "FundingPeriodDataPointEdge",
              "fullType": "datanode.api.v2.FundingPeriodDataPointEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPeriodDataPointEdge",
          "longName": "FundingPeriodDataPointEdge",
          "fullName": "datanode.api.v2.FundingPeriodDataPointEdge",
          "description": "Funding period data point with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Funding period data point.",
              "label": "",
              "type": "FundingPeriodDataPoint",
              "longType": "vega.events.v1.FundingPeriodDataPoint",
              "fullType": "vega.events.v1.FundingPeriodDataPoint",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FundingPeriodEdge",
          "longName": "FundingPeriodEdge",
          "fullName": "datanode.api.v2.FundingPeriodEdge",
          "description": "Funding period data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Funding period data.",
              "label": "",
              "type": "FundingPeriod",
              "longType": "vega.events.v1.FundingPeriod",
              "fullType": "vega.events.v1.FundingPeriod",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetActiveNetworkHistoryPeerAddressesRequest",
          "longName": "GetActiveNetworkHistoryPeerAddressesRequest",
          "fullName": "datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest",
          "description": "Request to get the addresses of active network history peers",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetActiveNetworkHistoryPeerAddressesResponse",
          "longName": "GetActiveNetworkHistoryPeerAddressesResponse",
          "fullName": "datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse",
          "description": "Response containing the addresses of active network history peers",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ip_addresses",
              "description": "List of IP addresses for the active peers.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAssetRequest",
          "longName": "GetAssetRequest",
          "fullName": "datanode.api.v2.GetAssetRequest",
          "description": "Request for obtaining asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Asset ID to get data for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAssetResponse",
          "longName": "GetAssetResponse",
          "fullName": "datanode.api.v2.GetAssetResponse",
          "description": "Response from getting an asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "Asset information that is returned.",
              "label": "",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetBalanceHistoryRequest",
          "longName": "GetBalanceHistoryRequest",
          "fullName": "datanode.api.v2.GetBalanceHistoryRequest",
          "description": "Request that is used when querying balance history",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "filter",
              "description": "Account filter contains values that can be set in order to limit balance history data to them.",
              "label": "",
              "type": "AccountFilter",
              "longType": "AccountFilter",
              "fullType": "datanode.api.v2.AccountFilter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "group_by",
              "description": "By default the net balances of all the accounts specified by the filter are returned.\nIf a list of fields is given in group_by, split out those balances by the supplied criteria.",
              "label": "repeated",
              "type": "AccountField",
              "longType": "AccountField",
              "fullType": "datanode.api.v2.AccountField",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetBalanceHistoryResponse",
          "longName": "GetBalanceHistoryResponse",
          "fullName": "datanode.api.v2.GetBalanceHistoryResponse",
          "description": "Response that is received when querying for balance history",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "balances",
              "description": "Page of aggregated balances with the corresponding page information.",
              "label": "",
              "type": "AggregatedBalanceConnection",
              "longType": "AggregatedBalanceConnection",
              "fullType": "datanode.api.v2.AggregatedBalanceConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCurrentReferralProgramRequest",
          "longName": "GetCurrentReferralProgramRequest",
          "fullName": "datanode.api.v2.GetCurrentReferralProgramRequest",
          "description": "Request to get the current referral program",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetCurrentReferralProgramResponse",
          "longName": "GetCurrentReferralProgramResponse",
          "fullName": "datanode.api.v2.GetCurrentReferralProgramResponse",
          "description": "Response containing the current referral program",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "current_referral_program",
              "description": "Referral program currently activated on the network.",
              "label": "",
              "type": "ReferralProgram",
              "longType": "ReferralProgram",
              "fullType": "datanode.api.v2.ReferralProgram",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCurrentVolumeDiscountProgramRequest",
          "longName": "GetCurrentVolumeDiscountProgramRequest",
          "fullName": "datanode.api.v2.GetCurrentVolumeDiscountProgramRequest",
          "description": "Request to get the current referral program",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetCurrentVolumeDiscountProgramResponse",
          "longName": "GetCurrentVolumeDiscountProgramResponse",
          "fullName": "datanode.api.v2.GetCurrentVolumeDiscountProgramResponse",
          "description": "Response containing the current referral program",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "current_volume_discount_program",
              "description": "Volume discount program currently activated on the network.",
              "label": "",
              "type": "VolumeDiscountProgram",
              "longType": "VolumeDiscountProgram",
              "fullType": "datanode.api.v2.VolumeDiscountProgram",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetDepositRequest",
          "longName": "GetDepositRequest",
          "fullName": "datanode.api.v2.GetDepositRequest",
          "description": "Request to get data about a specific deposit by ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Deposit ID to return data for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetDepositResponse",
          "longName": "GetDepositResponse",
          "fullName": "datanode.api.v2.GetDepositResponse",
          "description": "Response that is received from getting deposit data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deposit",
              "description": "Deposit matching the ID from the request.",
              "label": "",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20ListAssetBundleRequest",
          "longName": "GetERC20ListAssetBundleRequest",
          "fullName": "datanode.api.v2.GetERC20ListAssetBundleRequest",
          "description": "Request for listing the signature bundle to an ERC-20 token in the collateral bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Asset ID of the asset bundle requested.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20ListAssetBundleResponse",
          "longName": "GetERC20ListAssetBundleResponse",
          "fullName": "datanode.api.v2.GetERC20ListAssetBundleResponse",
          "description": "Response from listing the signature bundle to an ERC-20 token in the collateral bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_source",
              "description": "Address of the asset on Ethereum.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_asset_id",
              "description": "Asset ID for the underlying Vega asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Nonce that uniquely identifies this signature bundle and prevents resubmission.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Signatures bundle as hex encoded data, prefixed with `0x`\ne.g: `0x + sig1 + sig2 + ... + sixN`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20SetAssetLimitsBundleRequest",
          "longName": "GetERC20SetAssetLimitsBundleRequest",
          "fullName": "datanode.api.v2.GetERC20SetAssetLimitsBundleRequest",
          "description": "Request for the signature bundle to update the token limits i.e. maxLifetimeDeposit and withdrawThreshold for a given ERC20 token that is already allowlisted in the collateral bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal_id",
              "description": "Proposal ID of the asset update proposal.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20SetAssetLimitsBundleResponse",
          "longName": "GetERC20SetAssetLimitsBundleResponse",
          "fullName": "datanode.api.v2.GetERC20SetAssetLimitsBundleResponse",
          "description": "Response for the signature bundle to update the token limits i.e. maxLifetimeDeposit and withdrawThreshold for a given ERC20 token that is already allowlisted in the collateral bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_source",
              "description": "Address of the asset on Ethereum.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_asset_id",
              "description": "Asset ID for the underlying Vega asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Nonce that uniquely identifies this signature bundle and prevents resubmission.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lifetime_limit",
              "description": "Lifetime limit deposit for this asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "threshold",
              "description": "Threshold withdraw for this asset.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Signatures bundle as hex encoded data, prefixed with `0x`\ne.g: `0x + sig1 + sig2 + ... + sixN`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20WithdrawalApprovalRequest",
          "longName": "GetERC20WithdrawalApprovalRequest",
          "fullName": "datanode.api.v2.GetERC20WithdrawalApprovalRequest",
          "description": "Request to get all information required to bundle the call to finalise the withdrawal on the erc20 bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawal_id",
              "description": "Withdrawal ID to retrieve.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20WithdrawalApprovalResponse",
          "longName": "GetERC20WithdrawalApprovalResponse",
          "fullName": "datanode.api.v2.GetERC20WithdrawalApprovalResponse",
          "description": "Response with all information required to bundle the call to finalise the withdrawal on the erc20 bridge\nfunction withdraw_asset(address asset_source, uint256 asset_id, uint256 amount, uint256 expiry, uint256 nonce, bytes memory signatures)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_source",
              "description": "Address of asset on Ethereum.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount to be withdrawn.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Nonce that uniquely identifies this signature bundle and prevents resubmission.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Signatures bundle as hex encoded data, prefixed with `0x`\ne.g: 0x + sig1 + sig2 + ... + sixN.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_address",
              "description": "Ethereum address, prefixed with `0x`, that will receive the withdrawn assets.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "creation",
              "description": "Creation timestamps.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetEpochRequest",
          "longName": "GetEpochRequest",
          "fullName": "datanode.api.v2.GetEpochRequest",
          "description": "Request to fetch epoch data\nProvide either the epoch ID or the block height to get the epoch for. If both are provided, the epoch ID will be used.\nIf both are omitted, the current epoch will be returned.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Epoch ID. If provided, returns the epoch with the given ID.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "Block height. If provided, returns the epoch that the given block is in.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_block",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetEpochResponse",
          "longName": "GetEpochResponse",
          "fullName": "datanode.api.v2.GetEpochResponse",
          "description": "Response from getting epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Data specific to a single epoch on the Vega network. This includes the epoch number,\nstart and end times, and the nodes that participated in the epoch.",
              "label": "",
              "type": "Epoch",
              "longType": "vega.Epoch",
              "fullType": "vega.Epoch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetFeesStatsForPartyRequest",
          "longName": "GetFeesStatsForPartyRequest",
          "fullName": "datanode.api.v2.GetFeesStatsForPartyRequest",
          "description": "Request that is sent to retrieve fees statistics for a given party.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict fees statistics to those for the given party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "Restrict fees statistics to those related to the given asset.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "from_epoch",
              "description": "Epoch to filter from (included). If omitted, `to epoch` must not be set. If both omitted, the most recent epoch's data is returned.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_from_epoch",
              "defaultValue": ""
            },
            {
              "name": "to_epoch",
              "description": "Epoch to filter to (included). If omitted, the range goes from `from epoch` to the most recent epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_to_epoch",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetFeesStatsForPartyResponse",
          "longName": "GetFeesStatsForPartyResponse",
          "fullName": "datanode.api.v2.GetFeesStatsForPartyResponse",
          "description": "Response that is sent when requesting fees statistics for a given party.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "fees_stats_for_party",
              "description": "Fees statistics for the given request.",
              "label": "repeated",
              "type": "FeesStatsForParty",
              "longType": "FeesStatsForParty",
              "fullType": "datanode.api.v2.FeesStatsForParty",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetFeesStatsRequest",
          "longName": "GetFeesStatsRequest",
          "fullName": "datanode.api.v2.GetFeesStatsRequest",
          "description": "Request that is sent to retrieve fees statistics.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Restrict fee statistics to those related for the given market.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "Restrict fee statistics to those related for the given asset.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch to get referral fee statistics for. If not set, the last complete epoch is used.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_seq",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Restrict fee statistics to those for the given party.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetFeesStatsResponse",
          "longName": "GetFeesStatsResponse",
          "fullName": "datanode.api.v2.GetFeesStatsResponse",
          "description": "Response that is sent when requesting fees statistics.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "fees_stats",
              "description": "Fees statistics for the given request.",
              "label": "",
              "type": "FeesStats",
              "longType": "vega.events.v1.FeesStats",
              "fullType": "vega.events.v1.FeesStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetGovernanceDataRequest",
          "longName": "GetGovernanceDataRequest",
          "fullName": "datanode.api.v2.GetGovernanceDataRequest",
          "description": "Request to get governance data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "proposal_id",
              "description": "Proposal ID to get governance data for, if provided.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposal_id",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Reference to get proposal data for, if provided.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reference",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetGovernanceDataResponse",
          "longName": "GetGovernanceDataResponse",
          "fullName": "datanode.api.v2.GetGovernanceDataResponse",
          "description": "Response from getting governance data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Governance data content, i.e. proposal and votes for and against.",
              "label": "",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLastTradeRequest",
          "longName": "GetLastTradeRequest",
          "fullName": "datanode.api.v2.GetLastTradeRequest",
          "description": "Request for the latest trade that occurred on Vega for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to retrieve the last trade for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLastTradeResponse",
          "longName": "GetLastTradeResponse",
          "fullName": "datanode.api.v2.GetLastTradeResponse",
          "description": "Response for the latest trade that occurred on Vega for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trade",
              "description": "Information about the trade, if one is found.",
              "label": "",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLatestMarketDataRequest",
          "longName": "GetLatestMarketDataRequest",
          "fullName": "datanode.api.v2.GetLatestMarketDataRequest",
          "description": "Request that is sent when listing the latest market data for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to retrieve market data for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLatestMarketDataResponse",
          "longName": "GetLatestMarketDataResponse",
          "fullName": "datanode.api.v2.GetLatestMarketDataResponse",
          "description": "Response that is received when listing the latest market data for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_data",
              "description": "Market data that was requested.",
              "label": "",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLatestMarketDepthRequest",
          "longName": "GetLatestMarketDepthRequest",
          "fullName": "datanode.api.v2.GetLatestMarketDepthRequest",
          "description": "Request that is sent when requesting latest market depth data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to request market depth for, required field.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_depth",
              "description": "Maximum market depth.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max_depth",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLatestMarketDepthResponse",
          "longName": "GetLatestMarketDepthResponse",
          "fullName": "datanode.api.v2.GetLatestMarketDepthResponse",
          "description": "Response that is received when latest market depth data is queried",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID of the depth levels returned.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "Zero or more price levels for the buy side of the market depth data.",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "vega.PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "Zero or more price levels for the sell side of the market depth data.",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "vega.PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_trade",
              "description": "Last trade recorded on Vega.",
              "label": "",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "Sequence number incremented after each update.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetMarketDataHistoryByIDRequest",
          "longName": "GetMarketDataHistoryByIDRequest",
          "fullName": "datanode.api.v2.GetMarketDataHistoryByIDRequest",
          "description": "Request that is sent for getting Market Data History",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to request data history for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_timestamp",
              "description": "Timestamp in Unix nanoseconds indicating the start of the date range.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_start_timestamp",
              "defaultValue": ""
            },
            {
              "name": "end_timestamp",
              "description": "Timestamp in Unix nanoseconds indicating the end of the date range.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_timestamp",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination control.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetMarketDataHistoryByIDResponse",
          "longName": "GetMarketDataHistoryByIDResponse",
          "fullName": "datanode.api.v2.GetMarketDataHistoryByIDResponse",
          "description": "Response that is received when querying Market Data History",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_data",
              "description": "Page of market data history with the corresponding page information.",
              "label": "",
              "type": "MarketDataConnection",
              "longType": "MarketDataConnection",
              "fullType": "datanode.api.v2.MarketDataConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetMarketRequest",
          "longName": "GetMarketRequest",
          "fullName": "datanode.api.v2.GetMarketRequest",
          "description": "Request for getting a market by ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID of the market to retrieve data for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetMarketResponse",
          "longName": "GetMarketResponse",
          "fullName": "datanode.api.v2.GetMarketResponse",
          "description": "Response from getting a market by ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "Information about the market requested.",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetMostRecentNetworkHistorySegmentRequest",
          "longName": "GetMostRecentNetworkHistorySegmentRequest",
          "fullName": "datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest",
          "description": "Request to get the most recent history segment",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetMostRecentNetworkHistorySegmentResponse",
          "longName": "GetMostRecentNetworkHistorySegmentResponse",
          "fullName": "datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse",
          "description": "Response from getting most recent history segment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "segment",
              "description": "Data relating to a history segment created by a Vega data node.",
              "label": "",
              "type": "HistorySegment",
              "longType": "HistorySegment",
              "fullType": "datanode.api.v2.HistorySegment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "swarm_key_seed",
              "description": "Key seed for the swarm section.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNetworkDataRequest",
          "longName": "GetNetworkDataRequest",
          "fullName": "datanode.api.v2.GetNetworkDataRequest",
          "description": "Request to get network data",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetNetworkDataResponse",
          "longName": "GetNetworkDataResponse",
          "fullName": "datanode.api.v2.GetNetworkDataResponse",
          "description": "Response from getting network data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_data",
              "description": "Summary of information with respect to nodes on the Vega network.",
              "label": "",
              "type": "NodeData",
              "longType": "vega.NodeData",
              "fullType": "vega.NodeData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNetworkHistoryBootstrapPeersRequest",
          "longName": "GetNetworkHistoryBootstrapPeersRequest",
          "fullName": "datanode.api.v2.GetNetworkHistoryBootstrapPeersRequest",
          "description": "Request to get the nodes network history bootstrap peers",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetNetworkHistoryBootstrapPeersResponse",
          "longName": "GetNetworkHistoryBootstrapPeersResponse",
          "fullName": "datanode.api.v2.GetNetworkHistoryBootstrapPeersResponse",
          "description": "Response containing the nodes network history bootstrap peers",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bootstrap_peers",
              "description": "List of peers that can be used to bootstrap a Vega data node.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNetworkHistoryStatusRequest",
          "longName": "GetNetworkHistoryStatusRequest",
          "fullName": "datanode.api.v2.GetNetworkHistoryStatusRequest",
          "description": "Request to get the status of network history",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetNetworkHistoryStatusResponse",
          "longName": "GetNetworkHistoryStatusResponse",
          "fullName": "datanode.api.v2.GetNetworkHistoryStatusResponse",
          "description": "Response containing the status of network history",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ipfs_address",
              "description": "IPFS address of the data node currently connected to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "swarm_key",
              "description": "Swarm key used by the IPFS swarm.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "swarm_key_seed",
              "description": "Swarm key seed used by the IPFS swarm.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "connected_peers",
              "description": "List of peers connected to the IPFS swarm.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNetworkLimitsRequest",
          "longName": "GetNetworkLimitsRequest",
          "fullName": "datanode.api.v2.GetNetworkLimitsRequest",
          "description": "Request that is used to query current network limits",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetNetworkLimitsResponse",
          "longName": "GetNetworkLimitsResponse",
          "fullName": "datanode.api.v2.GetNetworkLimitsResponse",
          "description": "Response received when querying the current network limits",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "limits",
              "description": "List of received network limits.",
              "label": "",
              "type": "NetworkLimits",
              "longType": "vega.NetworkLimits",
              "fullType": "vega.NetworkLimits",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNetworkParameterRequest",
          "longName": "GetNetworkParameterRequest",
          "fullName": "datanode.api.v2.GetNetworkParameterRequest",
          "description": "Request for a single network parameter",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "Key identifying the network parameter.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNetworkParameterResponse",
          "longName": "GetNetworkParameterResponse",
          "fullName": "datanode.api.v2.GetNetworkParameterResponse",
          "description": "Response that is received when getting a network parameter",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_parameter",
              "description": "Network parameter key and value.",
              "label": "",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodeRequest",
          "longName": "GetNodeRequest",
          "fullName": "datanode.api.v2.GetNodeRequest",
          "description": "Request to get node data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Node ID to get data for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodeResponse",
          "longName": "GetNodeResponse",
          "fullName": "datanode.api.v2.GetNodeResponse",
          "description": "Response from getting node",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data specific to a single node on the Vega network.",
              "label": "",
              "type": "Node",
              "longType": "vega.Node",
              "fullType": "vega.Node",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetOracleSpecRequest",
          "longName": "GetOracleSpecRequest",
          "fullName": "datanode.api.v2.GetOracleSpecRequest",
          "description": "Request to get a specific oracle spec by its ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_spec_id",
              "description": "Oracle spec ID to request data for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetOracleSpecResponse",
          "longName": "GetOracleSpecResponse",
          "fullName": "datanode.api.v2.GetOracleSpecResponse",
          "description": "Response for a oracle spec",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_spec",
              "description": "External data spec matching the ID.",
              "label": "",
              "type": "OracleSpec",
              "longType": "vega.OracleSpec",
              "fullType": "vega.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetOrderRequest",
          "longName": "GetOrderRequest",
          "fullName": "datanode.api.v2.GetOrderRequest",
          "description": "Request that is sent when executing the query for getting a single order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Order ID to retrieve order information for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Historic version number of the order to return. If not set, the most current version will be returned.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetOrderResponse",
          "longName": "GetOrderResponse",
          "fullName": "datanode.api.v2.GetOrderResponse",
          "description": "Response received from the query for getting a single order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "Order details, if one was found.",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetPartyActivityStreakRequest",
          "longName": "GetPartyActivityStreakRequest",
          "fullName": "datanode.api.v2.GetPartyActivityStreakRequest",
          "description": "Request to get a party's activity streaks across epochs",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID to get the activity streak for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "Epoch to get the activity streak for. If not set, the last complete epoch is used.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetPartyActivityStreakResponse",
          "longName": "GetPartyActivityStreakResponse",
          "fullName": "datanode.api.v2.GetPartyActivityStreakResponse",
          "description": "Response when getting a party's activity streaks across epochs",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "activity_streak",
              "description": "Party's activity streak in a given epoch.",
              "label": "",
              "type": "PartyActivityStreak",
              "longType": "vega.events.v1.PartyActivityStreak",
              "fullType": "vega.events.v1.PartyActivityStreak",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetPartyRequest",
          "longName": "GetPartyRequest",
          "fullName": "datanode.api.v2.GetPartyRequest",
          "description": "Request to get party by ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID to retrieve party information for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetPartyResponse",
          "longName": "GetPartyResponse",
          "fullName": "datanode.api.v2.GetPartyResponse",
          "description": "Response from getting party by ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "Data for the party requested.",
              "label": "",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetPartyVestingStatsRequest",
          "longName": "GetPartyVestingStatsRequest",
          "fullName": "datanode.api.v2.GetPartyVestingStatsRequest",
          "description": "Request sent to get statistics about the vesting rewards for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID to query the vesting stats for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetPartyVestingStatsResponse",
          "longName": "GetPartyVestingStatsResponse",
          "fullName": "datanode.api.v2.GetPartyVestingStatsResponse",
          "description": "Vesting reward statistics for a given party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_bonus_multiplier",
              "description": "Reward bonus multiplier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch for which this information is valid.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantum_balance",
              "description": "The balance of the party, in quantum.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetProtocolUpgradeStatusRequest",
          "longName": "GetProtocolUpgradeStatusRequest",
          "fullName": "datanode.api.v2.GetProtocolUpgradeStatusRequest",
          "description": "Request to get protocol upgrade status",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetProtocolUpgradeStatusResponse",
          "longName": "GetProtocolUpgradeStatusResponse",
          "fullName": "datanode.api.v2.GetProtocolUpgradeStatusResponse",
          "description": "Response from getting protocol upgrade status",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ready",
              "description": "Indicator if the upgrade is ready or not.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetReferralSetStatsRequest",
          "longName": "GetReferralSetStatsRequest",
          "fullName": "datanode.api.v2.GetReferralSetStatsRequest",
          "description": "Request to get a referral set's stats",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "referral_set_id",
              "description": "Restrict referral set statistics to those for the given referral set.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_referral_set_id",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch to get referral set statistics for. If not set, the last complete epoch is used.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_at_epoch",
              "defaultValue": ""
            },
            {
              "name": "referee",
              "description": "Restrict referral set statisitcs to those for the given referee.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_referee",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetReferralSetStatsResponse",
          "longName": "GetReferralSetStatsResponse",
          "fullName": "datanode.api.v2.GetReferralSetStatsResponse",
          "description": "Response containing the volume discount statistics for the given epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "stats",
              "description": "Referral set statistics for the epoch.",
              "label": "",
              "type": "ReferralSetStatsConnection",
              "longType": "ReferralSetStatsConnection",
              "fullType": "datanode.api.v2.ReferralSetStatsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRiskFactorsRequest",
          "longName": "GetRiskFactorsRequest",
          "fullName": "datanode.api.v2.GetRiskFactorsRequest",
          "description": "Request to get risk factor",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to get the risk factor for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRiskFactorsResponse",
          "longName": "GetRiskFactorsResponse",
          "fullName": "datanode.api.v2.GetRiskFactorsResponse",
          "description": "Response that is received from getting a risk factor",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "risk_factor",
              "description": "Risk factor emitted by the risk model for a given market.",
              "label": "",
              "type": "RiskFactor",
              "longType": "vega.RiskFactor",
              "fullType": "vega.RiskFactor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetStakeRequest",
          "longName": "GetStakeRequest",
          "fullName": "datanode.api.v2.GetStakeRequest",
          "description": "Request to get stake",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID for which the stake information is requested.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination information to limit the data that is returned.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetStakeResponse",
          "longName": "GetStakeResponse",
          "fullName": "datanode.api.v2.GetStakeResponse",
          "description": "Response that is received from requesting stake information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "current_stake_available",
              "description": "Current stake available information.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_linkings",
              "description": "Paged list of stake data with corresponding page information.",
              "label": "",
              "type": "StakesConnection",
              "longType": "StakesConnection",
              "fullType": "datanode.api.v2.StakesConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetStopOrderRequest",
          "longName": "GetStopOrderRequest",
          "fullName": "datanode.api.v2.GetStopOrderRequest",
          "description": "Request that is sent when executing the query for getting a single stop order.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Order ID to retrieve order information for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetStopOrderResponse",
          "longName": "GetStopOrderResponse",
          "fullName": "datanode.api.v2.GetStopOrderResponse",
          "description": "Response received from the query for getting a single stop order.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "Order details, if one was found.",
              "label": "",
              "type": "StopOrderEvent",
              "longType": "vega.events.v1.StopOrderEvent",
              "fullType": "vega.events.v1.StopOrderEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetTransferRequest",
          "longName": "GetTransferRequest",
          "fullName": "datanode.api.v2.GetTransferRequest",
          "description": "Request that is sent for getting a transfer by ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfer_id",
              "description": "Transfer ID to request data for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetTransferResponse",
          "longName": "GetTransferResponse",
          "fullName": "datanode.api.v2.GetTransferResponse",
          "description": "Response that is received when querying transfers by ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfer",
              "description": "Transfer requested by ID.",
              "label": "",
              "type": "Transfer",
              "longType": "vega.events.v1.Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fees",
              "description": "Fees paid for this transfer.",
              "label": "repeated",
              "type": "TransferFees",
              "longType": "vega.events.v1.TransferFees",
              "fullType": "vega.events.v1.TransferFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVegaTimeRequest",
          "longName": "GetVegaTimeRequest",
          "fullName": "datanode.api.v2.GetVegaTimeRequest",
          "description": "Request to get the current time of the Vega network",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetVegaTimeResponse",
          "longName": "GetVegaTimeResponse",
          "fullName": "datanode.api.v2.GetVegaTimeResponse",
          "description": "Response for the current consensus coordinated time on the Vega network, referred to as \"VegaTime\"",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp representation of current VegaTime as represented in Unix nanoseconds, for example\n`1580473859111222333` corresponds to `2020-01-31T12:30:59.111222333Z`.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVestingBalancesSummaryRequest",
          "longName": "GetVestingBalancesSummaryRequest",
          "fullName": "datanode.api.v2.GetVestingBalancesSummaryRequest",
          "description": "Request sent to list the vesting and locked balances for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID to query vesting balances for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "Optional asset ID, all asset balances returned if not set.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVestingBalancesSummaryResponse",
          "longName": "GetVestingBalancesSummaryResponse",
          "fullName": "datanode.api.v2.GetVestingBalancesSummaryResponse",
          "description": "List of vesting and locked balances for a party.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch for which these balances are valid.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_seq",
              "defaultValue": ""
            },
            {
              "name": "locked_balances",
              "description": "List of locked balances for the party.",
              "label": "repeated",
              "type": "PartyLockedBalance",
              "longType": "vega.events.v1.PartyLockedBalance",
              "fullType": "vega.events.v1.PartyLockedBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vesting_balances",
              "description": "List of vesting balances for the party.",
              "label": "repeated",
              "type": "PartyVestingBalance",
              "longType": "vega.events.v1.PartyVestingBalance",
              "fullType": "vega.events.v1.PartyVestingBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVolumeDiscountStatsRequest",
          "longName": "GetVolumeDiscountStatsRequest",
          "fullName": "datanode.api.v2.GetVolumeDiscountStatsRequest",
          "description": "Request to get the volume discount statistics for a given epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "at_epoch",
              "description": "Epoch to get volume discount statistics for. If not set, last epoch is used.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_at_epoch",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Restrict volume discount statistics to those for the given party.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVolumeDiscountStatsResponse",
          "longName": "GetVolumeDiscountStatsResponse",
          "fullName": "datanode.api.v2.GetVolumeDiscountStatsResponse",
          "description": "Response containing the volume discount statistics for the given epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "stats",
              "description": "Volume discount statistics for an epoch.",
              "label": "",
              "type": "VolumeDiscountStatsConnection",
              "longType": "VolumeDiscountStatsConnection",
              "fullType": "datanode.api.v2.VolumeDiscountStatsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetWithdrawalRequest",
          "longName": "GetWithdrawalRequest",
          "fullName": "datanode.api.v2.GetWithdrawalRequest",
          "description": "Request to get a specific withdrawal by ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Withdrawal ID to retrieve data for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetWithdrawalResponse",
          "longName": "GetWithdrawalResponse",
          "fullName": "datanode.api.v2.GetWithdrawalResponse",
          "description": "Response for a withdrawal request",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawal",
              "description": "Withdrawal matching the ID from the request.",
              "label": "",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceDataConnection",
          "longName": "GovernanceDataConnection",
          "fullName": "datanode.api.v2.GovernanceDataConnection",
          "description": "Page of governance data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of governance data and their corresponding cursors.",
              "label": "repeated",
              "type": "GovernanceDataEdge",
              "longType": "GovernanceDataEdge",
              "fullType": "datanode.api.v2.GovernanceDataEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceDataEdge",
          "longName": "GovernanceDataEdge",
          "fullName": "datanode.api.v2.GovernanceDataEdge",
          "description": "Governance data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Governance data content, i.e. proposal and votes for and against.",
              "label": "",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "HistorySegment",
          "longName": "HistorySegment",
          "fullName": "datanode.api.v2.HistorySegment",
          "description": "Describes a network history segment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_height",
              "description": "Starting height of the history segment.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_height",
              "description": "Ending height of the history segment.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "history_segment_id",
              "description": "History segment ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_history_segment_id",
              "description": "Previous history segment ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "database_version",
              "description": "Database schema version of the history segment.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "Chain ID of the history segment.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InfoRequest",
          "longName": "InfoRequest",
          "fullName": "datanode.api.v2.InfoRequest",
          "description": "Request that is sent when querying node information",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "InfoResponse",
          "longName": "InfoResponse",
          "fullName": "datanode.api.v2.InfoResponse",
          "description": "Response that is received from the node information query",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Semver formatted version of the data node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commit_hash",
              "description": "Commit hash from which the data node was built.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IntervalToCandleId",
          "longName": "IntervalToCandleId",
          "fullName": "datanode.api.v2.IntervalToCandleId",
          "description": "Maps an interval for a given market to its corresponding candle ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interval",
              "description": "Interval for the candle.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "candle_id",
              "description": "Unique id of the candle.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyRotationConnection",
          "longName": "KeyRotationConnection",
          "fullName": "datanode.api.v2.KeyRotationConnection",
          "description": "Page of key rotations data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of key rotation data and their corresponding cursors.",
              "label": "repeated",
              "type": "KeyRotationEdge",
              "longType": "KeyRotationEdge",
              "fullType": "datanode.api.v2.KeyRotationEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyRotationEdge",
          "longName": "KeyRotationEdge",
          "fullName": "datanode.api.v2.KeyRotationEdge",
          "description": "Key rotation data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data relating to a key rotation that was performed by a node on the Vega network.",
              "label": "",
              "type": "KeyRotation",
              "longType": "vega.events.v1.KeyRotation",
              "fullType": "vega.events.v1.KeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LedgerEntryFilter",
          "longName": "LedgerEntryFilter",
          "fullName": "datanode.api.v2.LedgerEntryFilter",
          "description": "Ledger entry filter sets filters on returned set of ledger entries.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "close_on_account_filters",
              "description": "Determines whether an entry must have accounts matching both the account_from_filter\nand the account_to_filter. If set to 'true', entries must have matches in both filters.\nIf set to `false`, entries matching only the account_from_filter or the account_to_filter will also be included.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_account_filter",
              "description": "Used to set values for filtering sender accounts. Party must be provided in this filter or 'to' account filter, or both.",
              "label": "",
              "type": "AccountFilter",
              "longType": "AccountFilter",
              "fullType": "datanode.api.v2.AccountFilter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account_filter",
              "description": "Used to set values for filtering receiver accounts. Party must be provided in this filter or 'from' account filter, or both.",
              "label": "",
              "type": "AccountFilter",
              "longType": "AccountFilter",
              "fullType": "datanode.api.v2.AccountFilter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transfer_types",
              "description": "List of transfer types that is used for filtering sender and receiver accounts.",
              "label": "repeated",
              "type": "TransferType",
              "longType": "vega.TransferType",
              "fullType": "vega.TransferType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidationEstimate",
          "longName": "LiquidationEstimate",
          "fullName": "datanode.api.v2.LiquidationEstimate",
          "description": "Liquidation estimate for both worst and best case possible.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "worst_case",
              "description": "Liquidation price estimate assuming slippage cap is applied.",
              "label": "",
              "type": "LiquidationPrice",
              "longType": "LiquidationPrice",
              "fullType": "datanode.api.v2.LiquidationPrice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_case",
              "description": "Liquidation price estimate assuming no slippage.",
              "label": "",
              "type": "LiquidationPrice",
              "longType": "LiquidationPrice",
              "fullType": "datanode.api.v2.LiquidationPrice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidationPrice",
          "longName": "LiquidationPrice",
          "fullName": "datanode.api.v2.LiquidationPrice",
          "description": "Liquidation price estimate for either only the current open volume and position given some or all buy orders get filled, or position given some or all sell orders get filled.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "open_volume_only",
              "description": "Liquidation price for current open volume ignoring any active orders.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "including_buy_orders",
              "description": "Liquidation price assuming buy orders start getting filled.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "including_sell_orders",
              "description": "Liquidation price assuming sell orders start getting filled.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvider",
          "longName": "LiquidityProvider",
          "fullName": "datanode.api.v2.LiquidityProvider",
          "description": "Liquidity provider information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID of the liquidity provider.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "ID of the market the liquidity provider is active in.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee_share",
              "description": "Information used for calculating an LP's fee share, such as the equity like share,\naverage entry valuation and liquidity score for the liquidity provider for the specified market.",
              "label": "",
              "type": "LiquidityProviderFeeShare",
              "longType": "vega.LiquidityProviderFeeShare",
              "fullType": "vega.LiquidityProviderFeeShare",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sla",
              "description": "Information about LP's SLA performance.",
              "label": "",
              "type": "LiquidityProviderSLA",
              "longType": "vega.LiquidityProviderSLA",
              "fullType": "vega.LiquidityProviderSLA",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProviderConnection",
          "longName": "LiquidityProviderConnection",
          "fullName": "datanode.api.v2.LiquidityProviderConnection",
          "description": "Page of liquidity provider data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of liquidity provider data.",
              "label": "repeated",
              "type": "LiquidityProviderEdge",
              "longType": "LiquidityProviderEdge",
              "fullType": "datanode.api.v2.LiquidityProviderEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProviderEdge",
          "longName": "LiquidityProviderEdge",
          "fullName": "datanode.api.v2.LiquidityProviderEdge",
          "description": "Liquidity provider data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Liquidity provider information returned by the API.",
              "label": "",
              "type": "LiquidityProvider",
              "longType": "LiquidityProvider",
              "fullType": "datanode.api.v2.LiquidityProvider",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further data.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvision",
          "longName": "LiquidityProvision",
          "fullName": "datanode.api.v2.LiquidityProvision",
          "description": "Liquidity provider commitment. For API purposes this can report a pending liquidity provision,\nthe current live provision or both in the event that an update has been accepted on the network, but has yet\nto go live and thus there is still a pending provision that will become active in the next epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "current",
              "description": "Liquidity provision that is currently live.",
              "label": "",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending",
              "description": "Liquidity provision that is currently pending and will go live in the next epoch.",
              "label": "optional",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pending",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionWithPendingEdge",
          "longName": "LiquidityProvisionWithPendingEdge",
          "fullName": "datanode.api.v2.LiquidityProvisionWithPendingEdge",
          "description": "Liquidity provision data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data corresponding to a liquidity provider's commitment.",
              "label": "",
              "type": "LiquidityProvision",
              "longType": "LiquidityProvision",
              "fullType": "datanode.api.v2.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionsConnection",
          "longName": "LiquidityProvisionsConnection",
          "fullName": "datanode.api.v2.LiquidityProvisionsConnection",
          "description": "Page of liquidity provisions data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of liquidity provisions data and their corresponding cursors.",
              "label": "repeated",
              "type": "LiquidityProvisionsEdge",
              "longType": "LiquidityProvisionsEdge",
              "fullType": "datanode.api.v2.LiquidityProvisionsEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionsEdge",
          "longName": "LiquidityProvisionsEdge",
          "fullName": "datanode.api.v2.LiquidityProvisionsEdge",
          "description": "Liquidity provision data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data corresponding to a liquidity provider's commitment.",
              "label": "",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionsWithPendingConnection",
          "longName": "LiquidityProvisionsWithPendingConnection",
          "fullName": "datanode.api.v2.LiquidityProvisionsWithPendingConnection",
          "description": "Page of liquidity provisions data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of liquidity provisions data and their corresponding cursors.",
              "label": "repeated",
              "type": "LiquidityProvisionWithPendingEdge",
              "longType": "LiquidityProvisionWithPendingEdge",
              "fullType": "datanode.api.v2.LiquidityProvisionWithPendingEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used to fetch further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAccountsRequest",
          "longName": "ListAccountsRequest",
          "fullName": "datanode.api.v2.ListAccountsRequest",
          "description": "Request that is sent when listing accounts.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "filter",
              "description": "Account filter contains all filter conditions and values that can be applied to the listing.",
              "label": "",
              "type": "AccountFilter",
              "longType": "AccountFilter",
              "fullType": "datanode.api.v2.AccountFilter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAccountsResponse",
          "longName": "ListAccountsResponse",
          "fullName": "datanode.api.v2.ListAccountsResponse",
          "description": "Response that is received from listing accounts query.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "Page of accounts data and corresponding page information.",
              "label": "",
              "type": "AccountsConnection",
              "longType": "AccountsConnection",
              "fullType": "datanode.api.v2.AccountsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAllLiquidityProvisionsRequest",
          "longName": "ListAllLiquidityProvisionsRequest",
          "fullName": "datanode.api.v2.ListAllLiquidityProvisionsRequest",
          "description": "Request for listing liquidity provisions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Restrict liquidity provisions to those placed on the given market.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Restrict liquidity provisions to those placed by the given party.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Restrict liquidity provisions to those with the given order reference.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reference",
              "defaultValue": ""
            },
            {
              "name": "live",
              "description": "Whether to include live liquidity provisions. If not set, live orders will not be included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_live",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAllLiquidityProvisionsResponse",
          "longName": "ListAllLiquidityProvisionsResponse",
          "fullName": "datanode.api.v2.ListAllLiquidityProvisionsResponse",
          "description": "Response from listing liquidity provisions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "liquidity_provisions",
              "description": "Page of liquidity provisions data and corresponding page information.",
              "label": "",
              "type": "LiquidityProvisionsWithPendingConnection",
              "longType": "LiquidityProvisionsWithPendingConnection",
              "fullType": "datanode.api.v2.LiquidityProvisionsWithPendingConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAllNetworkHistorySegmentsRequest",
          "longName": "ListAllNetworkHistorySegmentsRequest",
          "fullName": "datanode.api.v2.ListAllNetworkHistorySegmentsRequest",
          "description": "Request to list all the nodes history segments",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListAllNetworkHistorySegmentsResponse",
          "longName": "ListAllNetworkHistorySegmentsResponse",
          "fullName": "datanode.api.v2.ListAllNetworkHistorySegmentsResponse",
          "description": "Response with a list of all the nodes history segments",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "segments",
              "description": "Page of history segments data and corresponding page information.",
              "label": "repeated",
              "type": "HistorySegment",
              "longType": "HistorySegment",
              "fullType": "datanode.api.v2.HistorySegment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAllPositionsRequest",
          "longName": "ListAllPositionsRequest",
          "fullName": "datanode.api.v2.ListAllPositionsRequest",
          "description": "Request to list positions, given the position filter is supplied.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "filter",
              "description": "Filter to apply to the positions.",
              "label": "",
              "type": "PositionsFilter",
              "longType": "PositionsFilter",
              "fullType": "datanode.api.v2.PositionsFilter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAllPositionsResponse",
          "longName": "ListAllPositionsResponse",
          "fullName": "datanode.api.v2.ListAllPositionsResponse",
          "description": "Response to query for listing of positions, given the filter is supplied",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "positions",
              "description": "Page of positions data and corresponding page information.",
              "label": "",
              "type": "PositionConnection",
              "longType": "PositionConnection",
              "fullType": "datanode.api.v2.PositionConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAssetsRequest",
          "longName": "ListAssetsRequest",
          "fullName": "datanode.api.v2.ListAssetsRequest",
          "description": "Request for listing assets data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Optional asset ID to list data for.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination information to limit the data that is returned.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAssetsResponse",
          "longName": "ListAssetsResponse",
          "fullName": "datanode.api.v2.ListAssetsResponse",
          "description": "Response from listing assets",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "Page of assets data and corresponding page information.",
              "label": "",
              "type": "AssetsConnection",
              "longType": "AssetsConnection",
              "fullType": "datanode.api.v2.AssetsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListBalanceChangesRequest",
          "longName": "ListBalanceChangesRequest",
          "fullName": "datanode.api.v2.ListBalanceChangesRequest",
          "description": "Request to use when querying balances changes.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "filter",
              "description": "Limit the accounts considered according to the filter supplied.",
              "label": "",
              "type": "AccountFilter",
              "longType": "AccountFilter",
              "fullType": "datanode.api.v2.AccountFilter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "Date range over which to query.",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListBalanceChangesResponse",
          "longName": "ListBalanceChangesResponse",
          "fullName": "datanode.api.v2.ListBalanceChangesResponse",
          "description": "Response that is received from querying balances changes.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "balances",
              "description": "Page of aggregated balances data and corresponding page information.",
              "label": "",
              "type": "AggregatedBalanceConnection",
              "longType": "AggregatedBalanceConnection",
              "fullType": "datanode.api.v2.AggregatedBalanceConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCandleDataRequest",
          "longName": "ListCandleDataRequest",
          "fullName": "datanode.api.v2.ListCandleDataRequest",
          "description": "Request that is used when listing candles for a market at an interval",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "candle_id",
              "description": "Candle ID to retrieve candle data for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_timestamp",
              "description": "Timestamp in Unix nanoseconds to retrieve candles from.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_timestamp",
              "description": "Timestamp in Unix nanoseconds to retrieve candles to.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCandleDataResponse",
          "longName": "ListCandleDataResponse",
          "fullName": "datanode.api.v2.ListCandleDataResponse",
          "description": "Response for list of candles for a market at an interval",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "candles",
              "description": "Page of candle data and corresponding page information.",
              "label": "",
              "type": "CandleDataConnection",
              "longType": "CandleDataConnection",
              "fullType": "datanode.api.v2.CandleDataConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCandleIntervalsRequest",
          "longName": "ListCandleIntervalsRequest",
          "fullName": "datanode.api.v2.ListCandleIntervalsRequest",
          "description": "Request that is used to fetch a list of supported intervals for the given market along with the corresponding candle ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Unique ID for the market to list candle intervals for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCandleIntervalsResponse",
          "longName": "ListCandleIntervalsResponse",
          "fullName": "datanode.api.v2.ListCandleIntervalsResponse",
          "description": "List of mapped pairs `interval` -\u003e `candle ID` for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interval_to_candle_id",
              "description": "List of the mappings.",
              "label": "repeated",
              "type": "IntervalToCandleId",
              "longType": "IntervalToCandleId",
              "fullType": "datanode.api.v2.IntervalToCandleId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCheckpointsRequest",
          "longName": "ListCheckpointsRequest",
          "fullName": "datanode.api.v2.ListCheckpointsRequest",
          "description": "Request to get all checkpoints. Currently no fields, probably will be expanded to allow filtering data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "Optional pagination information to limit the data that is returned.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCheckpointsResponse",
          "longName": "ListCheckpointsResponse",
          "fullName": "datanode.api.v2.ListCheckpointsResponse",
          "description": "Response message containing all checkpoints requested",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "checkpoints",
              "description": "Page of checkpoints data and corresponding page information.",
              "label": "",
              "type": "CheckpointsConnection",
              "longType": "CheckpointsConnection",
              "fullType": "datanode.api.v2.CheckpointsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCoreSnapshotsRequest",
          "longName": "ListCoreSnapshotsRequest",
          "fullName": "datanode.api.v2.ListCoreSnapshotsRequest",
          "description": "Request type for ListCoreSnapshots; fetches a paginated list of the core snapshots.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "Optional pagination information to limit the data that is returned.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCoreSnapshotsResponse",
          "longName": "ListCoreSnapshotsResponse",
          "fullName": "datanode.api.v2.ListCoreSnapshotsResponse",
          "description": "Response from a ListCoreSnapshots RPC call; a paginated list of the core snapshots.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "core_snapshots",
              "description": "Page of core snapshot data and corresponding page information.",
              "label": "",
              "type": "CoreSnapshotConnection",
              "longType": "CoreSnapshotConnection",
              "fullType": "datanode.api.v2.CoreSnapshotConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDelegationsRequest",
          "longName": "ListDelegationsRequest",
          "fullName": "datanode.api.v2.ListDelegationsRequest",
          "description": "Request for listing delegations",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict delegations to those made by the given party ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "Restrict delegations to those made to the given node ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_node_id",
              "defaultValue": ""
            },
            {
              "name": "epoch_id",
              "description": "Return delegations made in the given epoch. If not set, delegations for the current epoch will be returned.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDelegationsResponse",
          "longName": "ListDelegationsResponse",
          "fullName": "datanode.api.v2.ListDelegationsResponse",
          "description": "Response from listing delegations",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegations",
              "description": "Page of delegations data and corresponding page information.",
              "label": "",
              "type": "DelegationsConnection",
              "longType": "DelegationsConnection",
              "fullType": "datanode.api.v2.DelegationsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDepositsRequest",
          "longName": "ListDepositsRequest",
          "fullName": "datanode.api.v2.ListDepositsRequest",
          "description": "Request to list all deposits for a given party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict deposits to those made by the given party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "Date range of the requested data, if provided.",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDepositsResponse",
          "longName": "ListDepositsResponse",
          "fullName": "datanode.api.v2.ListDepositsResponse",
          "description": "Response from listing deposits",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deposits",
              "description": "Page of deposits data and corresponding page information.",
              "label": "",
              "type": "DepositsConnection",
              "longType": "DepositsConnection",
              "fullType": "datanode.api.v2.DepositsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListERC20MultiSigSignerAddedBundlesRequest",
          "longName": "ListERC20MultiSigSignerAddedBundlesRequest",
          "fullName": "datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest",
          "description": "Request for adding a signature bundle to the signer list of a multisig contract for a particular validator",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node ID of the validator for which a signature bundle is required.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "Ethereum address of the validator that will submit the bundle.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch in which the bundle was generated, i.e. the epoch in which the node was promoted to consensus validator.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListERC20MultiSigSignerAddedBundlesResponse",
          "longName": "ListERC20MultiSigSignerAddedBundlesResponse",
          "fullName": "datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse",
          "description": "Response from adding a signature bundle to the signer list of a multisig contract for a particular validator",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bundles",
              "description": "Page of bundles for that validator - it may have been added multiple times if removed in between - and corresponding page information.",
              "label": "",
              "type": "ERC20MultiSigSignerAddedConnection",
              "longType": "ERC20MultiSigSignerAddedConnection",
              "fullType": "datanode.api.v2.ERC20MultiSigSignerAddedConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListERC20MultiSigSignerRemovedBundlesRequest",
          "longName": "ListERC20MultiSigSignerRemovedBundlesRequest",
          "fullName": "datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest",
          "description": "Request for removing a signature bundle from the signer list of the multisig contract for a particular validator",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node ID of the validator of which a signature bundle is required.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "Ethereum address of the validator that will submit the bundle.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch in which the bundle was generated, i.e. the epoch in which the node was demoted from a consensus validator.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListERC20MultiSigSignerRemovedBundlesResponse",
          "longName": "ListERC20MultiSigSignerRemovedBundlesResponse",
          "fullName": "datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse",
          "description": "Response when removing a signature bundle from the signer list of the multisig contract for a particular validator",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bundles",
              "description": "Page of signer bundle data items for that validator and corresponding page information.",
              "label": "",
              "type": "ERC20MultiSigSignerRemovedConnection",
              "longType": "ERC20MultiSigSignerRemovedConnection",
              "fullType": "datanode.api.v2.ERC20MultiSigSignerRemovedConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListEntitiesRequest",
          "longName": "ListEntitiesRequest",
          "fullName": "datanode.api.v2.ListEntitiesRequest",
          "description": "Request to list all entities that were created by the given transaction hash",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transaction_hash",
              "description": "Transaction hash to match against",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListEntitiesResponse",
          "longName": "ListEntitiesResponse",
          "fullName": "datanode.api.v2.ListEntitiesResponse",
          "description": "Response from listing entities that were created for a given transaction hash",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "",
              "label": "repeated",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "orders",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "positions",
              "description": "",
              "label": "repeated",
              "type": "Position",
              "longType": "vega.Position",
              "fullType": "vega.Position",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ledger_entries",
              "description": "",
              "label": "repeated",
              "type": "LedgerEntry",
              "longType": "vega.LedgerEntry",
              "fullType": "vega.LedgerEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance_changes",
              "description": "",
              "label": "repeated",
              "type": "AccountBalance",
              "longType": "AccountBalance",
              "fullType": "datanode.api.v2.AccountBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transfers",
              "description": "",
              "label": "repeated",
              "type": "Transfer",
              "longType": "vega.events.v1.Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "votes",
              "description": "",
              "label": "repeated",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "erc20_multi_sig_signer_added_bundles",
              "description": "",
              "label": "repeated",
              "type": "ERC20MultiSigSignerAddedBundle",
              "longType": "ERC20MultiSigSignerAddedBundle",
              "fullType": "datanode.api.v2.ERC20MultiSigSignerAddedBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "erc20_multi_sig_signer_removed_bundles",
              "description": "",
              "label": "repeated",
              "type": "ERC20MultiSigSignerRemovedBundle",
              "longType": "ERC20MultiSigSignerRemovedBundle",
              "fullType": "datanode.api.v2.ERC20MultiSigSignerRemovedBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trades",
              "description": "",
              "label": "repeated",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_specs",
              "description": "",
              "label": "repeated",
              "type": "OracleSpec",
              "longType": "vega.OracleSpec",
              "fullType": "vega.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_data",
              "description": "",
              "label": "repeated",
              "type": "OracleData",
              "longType": "vega.OracleData",
              "fullType": "vega.OracleData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "markets",
              "description": "",
              "label": "repeated",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parties",
              "description": "",
              "label": "repeated",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "margin_levels",
              "description": "",
              "label": "repeated",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards",
              "description": "",
              "label": "repeated",
              "type": "Reward",
              "longType": "vega.Reward",
              "fullType": "vega.Reward",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deposits",
              "description": "",
              "label": "repeated",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdrawals",
              "description": "",
              "label": "repeated",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provisions",
              "description": "",
              "label": "repeated",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delegations",
              "description": "",
              "label": "repeated",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nodes",
              "description": "",
              "label": "repeated",
              "type": "NodeBasic",
              "longType": "NodeBasic",
              "fullType": "datanode.api.v2.NodeBasic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_signatures",
              "description": "",
              "label": "repeated",
              "type": "NodeSignature",
              "longType": "vega.commands.v1.NodeSignature",
              "fullType": "vega.commands.v1.NodeSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "network_parameters",
              "description": "",
              "label": "repeated",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "key_rotations",
              "description": "",
              "label": "repeated",
              "type": "KeyRotation",
              "longType": "vega.events.v1.KeyRotation",
              "fullType": "vega.events.v1.KeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_key_rotations",
              "description": "",
              "label": "repeated",
              "type": "EthereumKeyRotation",
              "longType": "vega.events.v1.EthereumKeyRotation",
              "fullType": "vega.events.v1.EthereumKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposals",
              "description": "",
              "label": "repeated",
              "type": "ProtocolUpgradeEvent",
              "longType": "vega.events.v1.ProtocolUpgradeEvent",
              "fullType": "vega.events.v1.ProtocolUpgradeEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListEpochRewardSummariesRequest",
          "longName": "ListEpochRewardSummariesRequest",
          "fullName": "datanode.api.v2.ListEpochRewardSummariesRequest",
          "description": "Request to get summary of reward per epoch for a given range of epochs",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "filter",
              "description": "Limit the results considered according to the filter supplied.",
              "label": "",
              "type": "RewardSummaryFilter",
              "longType": "RewardSummaryFilter",
              "fullType": "datanode.api.v2.RewardSummaryFilter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination information to limit the data that is returned.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListEpochRewardSummariesResponse",
          "longName": "ListEpochRewardSummariesResponse",
          "fullName": "datanode.api.v2.ListEpochRewardSummariesResponse",
          "description": "Return message with reward details in for a single party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "summaries",
              "description": "Page of rewards details for a single party and corresponding page information.",
              "label": "",
              "type": "EpochRewardSummaryConnection",
              "longType": "EpochRewardSummaryConnection",
              "fullType": "datanode.api.v2.EpochRewardSummaryConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListEthereumKeyRotationsRequest",
          "longName": "ListEthereumKeyRotationsRequest",
          "fullName": "datanode.api.v2.ListEthereumKeyRotationsRequest",
          "description": "Request to list ethereum key rotations for nodes, optionally filtered by node",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node ID to get the rotation for, if provided.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_node_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination information to limit the data that is returned.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListEthereumKeyRotationsResponse",
          "longName": "ListEthereumKeyRotationsResponse",
          "fullName": "datanode.api.v2.ListEthereumKeyRotationsResponse",
          "description": "Response message containing Ethereum key rotations",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key_rotations",
              "description": "Page of Ethereum key rotations data and corresponding page information.",
              "label": "",
              "type": "EthereumKeyRotationsConnection",
              "longType": "EthereumKeyRotationsConnection",
              "fullType": "datanode.api.v2.EthereumKeyRotationsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListFundingPaymentsRequest",
          "longName": "ListFundingPaymentsRequest",
          "fullName": "datanode.api.v2.ListFundingPaymentsRequest",
          "description": "Request to list a a party's funding payments",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID to get funding payment for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Restrict funding payments returned to those generated by the given market.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListFundingPaymentsResponse",
          "longName": "ListFundingPaymentsResponse",
          "fullName": "datanode.api.v2.ListFundingPaymentsResponse",
          "description": "Response from listing funding payments",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "funding_payments",
              "description": "Page of funding period data and corresponding page information.",
              "label": "",
              "type": "FundingPaymentConnection",
              "longType": "FundingPaymentConnection",
              "fullType": "datanode.api.v2.FundingPaymentConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListFundingPeriodDataPointsRequest",
          "longName": "ListFundingPeriodDataPointsRequest",
          "fullName": "datanode.api.v2.ListFundingPeriodDataPointsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to get funding period data points for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "Restrict the data points to those within the given date range.",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            },
            {
              "name": "source",
              "description": "Restrict the data points to those with the given source type.",
              "label": "optional",
              "type": "Source",
              "longType": "vega.events.v1.FundingPeriodDataPoint.Source",
              "fullType": "vega.events.v1.FundingPeriodDataPoint.Source",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_source",
              "defaultValue": ""
            },
            {
              "name": "seq",
              "description": "Restrict the data points to those that contributed to the given funding period sequence.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_seq",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListFundingPeriodDataPointsResponse",
          "longName": "ListFundingPeriodDataPointsResponse",
          "fullName": "datanode.api.v2.ListFundingPeriodDataPointsResponse",
          "description": "Response from listing funding period data points.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "funding_period_data_points",
              "description": "Page of funding period data points and corresponding page information.",
              "label": "",
              "type": "FundingPeriodDataPointConnection",
              "longType": "FundingPeriodDataPointConnection",
              "fullType": "datanode.api.v2.FundingPeriodDataPointConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListFundingPeriodsRequest",
          "longName": "ListFundingPeriodsRequest",
          "fullName": "datanode.api.v2.ListFundingPeriodsRequest",
          "description": "Request to list a perpetual market's funding periods",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to get funding periods for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "Restrict the funding periods to those within the given date range.",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListFundingPeriodsResponse",
          "longName": "ListFundingPeriodsResponse",
          "fullName": "datanode.api.v2.ListFundingPeriodsResponse",
          "description": "Response from listing funding periods",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "funding_periods",
              "description": "Page of funding period data and corresponding page information.",
              "label": "",
              "type": "FundingPeriodConnection",
              "longType": "FundingPeriodConnection",
              "fullType": "datanode.api.v2.FundingPeriodConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListGovernanceDataRequest",
          "longName": "ListGovernanceDataRequest",
          "fullName": "datanode.api.v2.ListGovernanceDataRequest",
          "description": "Request to list governance data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "proposal_state",
              "description": "Restrict proposals to those with the given state.",
              "label": "optional",
              "type": "State",
              "longType": "vega.Proposal.State",
              "fullType": "vega.Proposal.State",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposal_state",
              "defaultValue": ""
            },
            {
              "name": "proposal_type",
              "description": "Restrict proposals to those with the given type.",
              "label": "optional",
              "type": "Type",
              "longType": "ListGovernanceDataRequest.Type",
              "fullType": "datanode.api.v2.ListGovernanceDataRequest.Type",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposal_type",
              "defaultValue": ""
            },
            {
              "name": "proposer_party_id",
              "description": "Restrict proposals to those proposed by the given party ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposer_party_id",
              "defaultValue": ""
            },
            {
              "name": "proposal_reference",
              "description": "Restrict proposals to those with the given reference.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposal_reference",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListGovernanceDataResponse",
          "longName": "ListGovernanceDataResponse",
          "fullName": "datanode.api.v2.ListGovernanceDataResponse",
          "description": "Response from listing governance data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "connection",
              "description": "Page of governance data and corresponding page information.",
              "label": "",
              "type": "GovernanceDataConnection",
              "longType": "GovernanceDataConnection",
              "fullType": "datanode.api.v2.GovernanceDataConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListKeyRotationsRequest",
          "longName": "ListKeyRotationsRequest",
          "fullName": "datanode.api.v2.ListKeyRotationsRequest",
          "description": "Request to list all key rotations",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node ID to get key rotations for, if provided.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_node_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination information to limit the data that is returned.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListKeyRotationsResponse",
          "longName": "ListKeyRotationsResponse",
          "fullName": "datanode.api.v2.ListKeyRotationsResponse",
          "description": "Response message containing Vega key rotations",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "rotations",
              "description": "Page of key rotations data and corresponding page information.",
              "label": "",
              "type": "KeyRotationConnection",
              "longType": "KeyRotationConnection",
              "fullType": "datanode.api.v2.KeyRotationConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListLatestMarketDataRequest",
          "longName": "ListLatestMarketDataRequest",
          "fullName": "datanode.api.v2.ListLatestMarketDataRequest",
          "description": "Request that is sent when listing the latest market data for every market",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListLatestMarketDataResponse",
          "longName": "ListLatestMarketDataResponse",
          "fullName": "datanode.api.v2.ListLatestMarketDataResponse",
          "description": "Response that is received when listing the latest market data for every market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets_data",
              "description": "",
              "label": "repeated",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListLedgerEntriesRequest",
          "longName": "ListLedgerEntriesRequest",
          "fullName": "datanode.api.v2.ListLedgerEntriesRequest",
          "description": "Request that is sent when listing ledger entries.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "filter",
              "description": "Ledger entry filter that contains all values and conditions according to which\nthe listing of ledger entries is filtered.You must provide at least one party in\n'from' account filter, or 'to' account filter.",
              "label": "",
              "type": "LedgerEntryFilter",
              "longType": "LedgerEntryFilter",
              "fullType": "datanode.api.v2.LedgerEntryFilter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "Date range for which to list ledger entries.\nIf not set, the date range is restricted to the last 5 days.\nIf a start and end date is provided, but the range is more than 5 days, the end date will be restricted to 5 days from the start.\nIf a start date is provided, but no end date, the end date will be set to 5 days from the start.\nIf an end date is provided, but no start date, the start date will be set to 5 days before the end.",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListLedgerEntriesResponse",
          "longName": "ListLedgerEntriesResponse",
          "fullName": "datanode.api.v2.ListLedgerEntriesResponse",
          "description": "Response that is received when listing ledger entries",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ledger_entries",
              "description": "Page of aggregated ledger entries data and corresponding page information.",
              "label": "",
              "type": "AggregatedLedgerEntriesConnection",
              "longType": "AggregatedLedgerEntriesConnection",
              "fullType": "datanode.api.v2.AggregatedLedgerEntriesConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListLiquidityProvidersRequest",
          "longName": "ListLiquidityProvidersRequest",
          "fullName": "datanode.api.v2.ListLiquidityProvidersRequest",
          "description": "Request for listing active liquidity providers for a given market.\nEither market ID or party ID or both, must be provided.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to retrieve liquidity providers for. If omitted, you must provide a party ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID to retrieve data for. If omitted, you must provide a market ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListLiquidityProvidersResponse",
          "longName": "ListLiquidityProvidersResponse",
          "fullName": "datanode.api.v2.ListLiquidityProvidersResponse",
          "description": "Response for listing liquidity providers.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "liquidity_providers",
              "description": "Page of liquidity providers and corresponding page information.",
              "label": "",
              "type": "LiquidityProviderConnection",
              "longType": "LiquidityProviderConnection",
              "fullType": "datanode.api.v2.LiquidityProviderConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListLiquidityProvisionsRequest",
          "longName": "ListLiquidityProvisionsRequest",
          "fullName": "datanode.api.v2.ListLiquidityProvisionsRequest",
          "description": "Request for listing liquidity provisions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Restrict liquidity provisions to those placed on the given market.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Restrict liquidity provisions to those placed by the given party.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Restrict liquidity provisions to those with the given order reference.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reference",
              "defaultValue": ""
            },
            {
              "name": "live",
              "description": "Whether to include live liquidity provisions. If not set, live orders will not be included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_live",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListLiquidityProvisionsResponse",
          "longName": "ListLiquidityProvisionsResponse",
          "fullName": "datanode.api.v2.ListLiquidityProvisionsResponse",
          "description": "Response from listing liquidity provisions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "liquidity_provisions",
              "description": "Page of liquidity provisions data and corresponding page information.",
              "label": "",
              "type": "LiquidityProvisionsConnection",
              "longType": "LiquidityProvisionsConnection",
              "fullType": "datanode.api.v2.LiquidityProvisionsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarginLevelsRequest",
          "longName": "ListMarginLevelsRequest",
          "fullName": "datanode.api.v2.ListMarginLevelsRequest",
          "description": "Request for listing margin levels",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID for which to list the margin levels",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID for which to list the margin levels",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination control",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarginLevelsResponse",
          "longName": "ListMarginLevelsResponse",
          "fullName": "datanode.api.v2.ListMarginLevelsResponse",
          "description": "Response from listing margin levels",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "margin_levels",
              "description": "Page of margin levels data and corresponding page information.",
              "label": "",
              "type": "MarginConnection",
              "longType": "MarginConnection",
              "fullType": "datanode.api.v2.MarginConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsRequest",
          "longName": "ListMarketsRequest",
          "fullName": "datanode.api.v2.ListMarketsRequest",
          "description": "Request for listing markets",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "Pagination control.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "include_settled",
              "description": "Whether to include settled markets. If not set, settled markets will be included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_include_settled",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsResponse",
          "longName": "ListMarketsResponse",
          "fullName": "datanode.api.v2.ListMarketsResponse",
          "description": "Response from listing markets",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets",
              "description": "Page of markets and corresponding page information.",
              "label": "",
              "type": "MarketConnection",
              "longType": "MarketConnection",
              "fullType": "datanode.api.v2.MarketConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNetworkParametersRequest",
          "longName": "ListNetworkParametersRequest",
          "fullName": "datanode.api.v2.ListNetworkParametersRequest",
          "description": "Message requesting for the list of all network parameters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "Optional pagination information to limit the data that is returned.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNetworkParametersResponse",
          "longName": "ListNetworkParametersResponse",
          "fullName": "datanode.api.v2.ListNetworkParametersResponse",
          "description": "Response containing all of the Vega network parameters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_parameters",
              "description": "Page of network parameters and corresponding page information.",
              "label": "",
              "type": "NetworkParameterConnection",
              "longType": "NetworkParameterConnection",
              "fullType": "datanode.api.v2.NetworkParameterConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNodeSignaturesRequest",
          "longName": "ListNodeSignaturesRequest",
          "fullName": "datanode.api.v2.ListNodeSignaturesRequest",
          "description": "Request to specify the ID of the resource to retrieve aggregated signatures for",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Resource ID to list signatures for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination information to limit the data that is returned.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNodeSignaturesResponse",
          "longName": "ListNodeSignaturesResponse",
          "fullName": "datanode.api.v2.ListNodeSignaturesResponse",
          "description": "Response to specify the ID of the resource to retrieve aggregated signatures for",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signatures",
              "description": "Page of nodes signatures and corresponding page information.",
              "label": "",
              "type": "NodeSignaturesConnection",
              "longType": "NodeSignaturesConnection",
              "fullType": "datanode.api.v2.NodeSignaturesConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNodesRequest",
          "longName": "ListNodesRequest",
          "fullName": "datanode.api.v2.ListNodesRequest",
          "description": "Request to list nodes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch_seq",
              "description": "Return the node list for the given epoch. If not set, the node list for the current epoch will be returned.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_seq",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNodesResponse",
          "longName": "ListNodesResponse",
          "fullName": "datanode.api.v2.ListNodesResponse",
          "description": "Response from listing nodes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "nodes",
              "description": "Page of node data and corresponding page information.",
              "label": "",
              "type": "NodesConnection",
              "longType": "NodesConnection",
              "fullType": "datanode.api.v2.NodesConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOracleDataRequest",
          "longName": "ListOracleDataRequest",
          "fullName": "datanode.api.v2.ListOracleDataRequest",
          "description": "Request to get all seen oracle data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_spec_id",
              "description": "Oracle spec ID to list data for.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_oracle_spec_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOracleDataResponse",
          "longName": "ListOracleDataResponse",
          "fullName": "datanode.api.v2.ListOracleDataResponse",
          "description": "Response to get all seen oracle data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_data",
              "description": "Page of seen oracle data and corresponding page information.",
              "label": "",
              "type": "OracleDataConnection",
              "longType": "OracleDataConnection",
              "fullType": "datanode.api.v2.OracleDataConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOracleSpecsRequest",
          "longName": "ListOracleSpecsRequest",
          "fullName": "datanode.api.v2.ListOracleSpecsRequest",
          "description": "Request to get all active oracle specs",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOracleSpecsResponse",
          "longName": "ListOracleSpecsResponse",
          "fullName": "datanode.api.v2.ListOracleSpecsResponse",
          "description": "Response to get all active oracle specs",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_specs",
              "description": "Page of active oracle specs and corresponding page information.",
              "label": "",
              "type": "OracleSpecsConnection",
              "longType": "OracleSpecsConnection",
              "fullType": "datanode.api.v2.OracleSpecsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOrderVersionsRequest",
          "longName": "ListOrderVersionsRequest",
          "fullName": "datanode.api.v2.ListOrderVersionsRequest",
          "description": "Request that is sent when listing possible order versions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Order ID to list versions for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOrderVersionsResponse",
          "longName": "ListOrderVersionsResponse",
          "fullName": "datanode.api.v2.ListOrderVersionsResponse",
          "description": "Response that is received when listing possible order versions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "Page of order versions and corresponding page information.",
              "label": "",
              "type": "OrderConnection",
              "longType": "OrderConnection",
              "fullType": "datanode.api.v2.OrderConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOrdersRequest",
          "longName": "ListOrdersRequest",
          "fullName": "datanode.api.v2.ListOrdersRequest",
          "description": "Request that is sent when executing a query for a list of orders",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "Optional pagination control.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Order filter contains all filtering conditions and values that are applied to the orders listing.",
              "label": "optional",
              "type": "OrderFilter",
              "longType": "OrderFilter",
              "fullType": "datanode.api.v2.OrderFilter",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_filter",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOrdersResponse",
          "longName": "ListOrdersResponse",
          "fullName": "datanode.api.v2.ListOrdersResponse",
          "description": "Response that is received from the query to list orders",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "Page of orders data and corresponding page information.",
              "label": "",
              "type": "OrderConnection",
              "longType": "OrderConnection",
              "fullType": "datanode.api.v2.OrderConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPaidLiquidityFeesRequest",
          "longName": "ListPaidLiquidityFeesRequest",
          "fullName": "datanode.api.v2.ListPaidLiquidityFeesRequest",
          "description": "Paid liquidity fees request.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Restrict fee data to those fees generated in the given market.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "Restrict fee statistics to those paid in the given asset.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch to get paid liquidity fee statistics for. If omitted, the last complete epoch is used.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_seq",
              "defaultValue": ""
            },
            {
              "name": "party_ids",
              "description": "Restrict fee data to those fees paid to the given parties.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPaidLiquidityFeesResponse",
          "longName": "ListPaidLiquidityFeesResponse",
          "fullName": "datanode.api.v2.ListPaidLiquidityFeesResponse",
          "description": "Paid liquidity fees response.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "paid_liquidity_fees",
              "description": "Page of paid liquidity fees and corresponding page information.",
              "label": "",
              "type": "PaidLiquidityFeesConnection",
              "longType": "PaidLiquidityFeesConnection",
              "fullType": "datanode.api.v2.PaidLiquidityFeesConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPartiesRequest",
          "longName": "ListPartiesRequest",
          "fullName": "datanode.api.v2.ListPartiesRequest",
          "description": "Request to list parties by ID",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict the returned party to only the given party ID. If not set, all parties will be returned.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination control.",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPartiesResponse",
          "longName": "ListPartiesResponse",
          "fullName": "datanode.api.v2.ListPartiesResponse",
          "description": "Response from listing parties",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties",
              "description": "Page of parties data and corresponding page information.",
              "label": "",
              "type": "PartyConnection",
              "longType": "PartyConnection",
              "fullType": "datanode.api.v2.PartyConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPositionsRequest",
          "longName": "ListPositionsRequest",
          "fullName": "datanode.api.v2.ListPositionsRequest",
          "description": "Request used to list all positions for a party.\nOptionally, if a market ID is set, the results will be filtered for that market only.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID to list positions for, required field.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID to filter for. If empty, no markets will be filtered.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ],
          "options": {
            "deprecated": true
          }
        },
        {
          "name": "ListPositionsResponse",
          "longName": "ListPositionsResponse",
          "fullName": "datanode.api.v2.ListPositionsResponse",
          "description": "Response for a list of positions for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "positions",
              "description": "Page of positions data and corresponding page information.",
              "label": "",
              "type": "PositionConnection",
              "longType": "PositionConnection",
              "fullType": "datanode.api.v2.PositionConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ],
          "options": {
            "deprecated": true
          }
        },
        {
          "name": "ListProtocolUpgradeProposalsRequest",
          "longName": "ListProtocolUpgradeProposalsRequest",
          "fullName": "datanode.api.v2.ListProtocolUpgradeProposalsRequest",
          "description": "Request type for ListProtocolUpgradeProposals; fetches a paginated list of protocol upgrade proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "Restrict protocol upgrade proposals to those with the given status.",
              "label": "optional",
              "type": "ProtocolUpgradeProposalStatus",
              "longType": "vega.events.v1.ProtocolUpgradeProposalStatus",
              "fullType": "vega.events.v1.ProtocolUpgradeProposalStatus",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_status",
              "defaultValue": ""
            },
            {
              "name": "approved_by",
              "description": "Restrict protocol upgrade proposals to those approved by the given node ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_approved_by",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListProtocolUpgradeProposalsResponse",
          "longName": "ListProtocolUpgradeProposalsResponse",
          "fullName": "datanode.api.v2.ListProtocolUpgradeProposalsResponse",
          "description": "Response type from a ListProtocolUpgradeProposals RPC call; a paginated list of protocol upgrade proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "protocol_upgrade_proposals",
              "description": "Page of protocol upgrade proposals and corresponding page information.",
              "label": "",
              "type": "ProtocolUpgradeProposalConnection",
              "longType": "ProtocolUpgradeProposalConnection",
              "fullType": "datanode.api.v2.ProtocolUpgradeProposalConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListReferralSetRefereesRequest",
          "longName": "ListReferralSetRefereesRequest",
          "fullName": "datanode.api.v2.ListReferralSetRefereesRequest",
          "description": "Request to retrieve information about a referral set's referees",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "referral_set_id",
              "description": "Referral set ID to retrieve information for",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_referral_set_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "referrer",
              "description": "Referrer to filter by. If referrer set ID is provided, this field is ignored.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_referrer",
              "defaultValue": ""
            },
            {
              "name": "referee",
              "description": "Referee to filter by. If referrer set ID or referrer is provided, this field is ignored.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_referee",
              "defaultValue": ""
            },
            {
              "name": "aggregation_epochs",
              "description": "Epochs to aggregate party volume and rewards over. If omitted, 30 epochs will be used.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_aggregation_epochs",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListReferralSetRefereesResponse",
          "longName": "ListReferralSetRefereesResponse",
          "fullName": "datanode.api.v2.ListReferralSetRefereesResponse",
          "description": "Response containing information about a referral set's referees",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "referral_set_referees",
              "description": "Page of referral set referee data and corresponding page information.",
              "label": "",
              "type": "ReferralSetRefereeConnection",
              "longType": "ReferralSetRefereeConnection",
              "fullType": "datanode.api.v2.ReferralSetRefereeConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListReferralSetsRequest",
          "longName": "ListReferralSetsRequest",
          "fullName": "datanode.api.v2.ListReferralSetsRequest",
          "description": "Request to retrieve information about a referral set or sets",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "referral_set_id",
              "description": "Referral set ID to retrieve information for",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_referral_set_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "referrer",
              "description": "Referrer to filter by. If referrer set ID is provided, this field is ignored.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_referrer",
              "defaultValue": ""
            },
            {
              "name": "referee",
              "description": "Referee to filter by. If referrer set ID or referrer is provided, this field is ignored.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_referee",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListReferralSetsResponse",
          "longName": "ListReferralSetsResponse",
          "fullName": "datanode.api.v2.ListReferralSetsResponse",
          "description": "Response containing information about a referral set or sets",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "referral_sets",
              "description": "Page of referral set data and corresponding page information.",
              "label": "",
              "type": "ReferralSetConnection",
              "longType": "ReferralSetConnection",
              "fullType": "datanode.api.v2.ReferralSetConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListRewardSummariesRequest",
          "longName": "ListRewardSummariesRequest",
          "fullName": "datanode.api.v2.ListRewardSummariesRequest",
          "description": "Request to get reward details for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict the reward summary to rewards paid to the given parties.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "Restrict the reward summary to rewards paid in the given assets.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListRewardSummariesResponse",
          "longName": "ListRewardSummariesResponse",
          "fullName": "datanode.api.v2.ListRewardSummariesResponse",
          "description": "Response from listing reward details in for a single party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "summaries",
              "description": "Page of rewards details data and corresponding page information.",
              "label": "repeated",
              "type": "RewardSummary",
              "longType": "vega.RewardSummary",
              "fullType": "vega.RewardSummary",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListRewardsRequest",
          "longName": "ListRewardsRequest",
          "fullName": "datanode.api.v2.ListRewardsRequest",
          "description": "Request to get reward details for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict rewards data to those that were received by the given party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "Restrict rewards data to those that were paid with the given asset ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination control.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "from_epoch",
              "description": "Restrict rewards data to those that were paid after and including the given epoch ID.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_from_epoch",
              "defaultValue": ""
            },
            {
              "name": "to_epoch",
              "description": "Restrict rewards data to those that were paid up to and including the given epoch ID.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_to_epoch",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListRewardsResponse",
          "longName": "ListRewardsResponse",
          "fullName": "datanode.api.v2.ListRewardsResponse",
          "description": "Response for listing reward details for a single party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "rewards",
              "description": "Page of rewards data and corresponding page information.",
              "label": "",
              "type": "RewardsConnection",
              "longType": "RewardsConnection",
              "fullType": "datanode.api.v2.RewardsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListStopOrdersRequest",
          "longName": "ListStopOrdersRequest",
          "fullName": "datanode.api.v2.ListStopOrdersRequest",
          "description": "Request that is sent when executing a query for a list of stop orders.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "Optional pagination control.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "filter",
              "description": "Order filter contains all filtering conditions and values that are applied to the orders listing.",
              "label": "optional",
              "type": "StopOrderFilter",
              "longType": "StopOrderFilter",
              "fullType": "datanode.api.v2.StopOrderFilter",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_filter",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListStopOrdersResponse",
          "longName": "ListStopOrdersResponse",
          "fullName": "datanode.api.v2.ListStopOrdersResponse",
          "description": "Response that is received from the query to list stop orders.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "Page of stop orders data and corresponding page information.",
              "label": "",
              "type": "StopOrderConnection",
              "longType": "StopOrderConnection",
              "fullType": "datanode.api.v2.StopOrderConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListSuccessorMarketsRequest",
          "longName": "ListSuccessorMarketsRequest",
          "fullName": "datanode.api.v2.ListSuccessorMarketsRequest",
          "description": "Request for listing successor markets.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID that is a member of the succession line. This can be the original market\nor any subsequent child market that succeeded it.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "include_full_history",
              "description": "Flag to indicate whether or not to include the full succession line, or only list\nthe children of the given market ID. If true, the full succession line is included.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination control.",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListSuccessorMarketsResponse",
          "longName": "ListSuccessorMarketsResponse",
          "fullName": "datanode.api.v2.ListSuccessorMarketsResponse",
          "description": "Response from a list successor markets request.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "successor_markets",
              "description": "List of markets in the succession line.",
              "label": "",
              "type": "SuccessorMarketConnection",
              "longType": "SuccessorMarketConnection",
              "fullType": "datanode.api.v2.SuccessorMarketConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTeamRefereeHistoryRequest",
          "longName": "ListTeamRefereeHistoryRequest",
          "fullName": "datanode.api.v2.ListTeamRefereeHistoryRequest",
          "description": "Request that is sent when listing the referee history for a given team.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "referee",
              "description": "Party ID to list referee history for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTeamRefereeHistoryResponse",
          "longName": "ListTeamRefereeHistoryResponse",
          "fullName": "datanode.api.v2.ListTeamRefereeHistoryResponse",
          "description": "Response that is sent when listing the referee history for a given team.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "team_referee_history",
              "description": "Page of team referee history data and corresponding page information.",
              "label": "",
              "type": "TeamRefereeHistoryConnection",
              "longType": "TeamRefereeHistoryConnection",
              "fullType": "datanode.api.v2.TeamRefereeHistoryConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTeamRefereesRequest",
          "longName": "ListTeamRefereesRequest",
          "fullName": "datanode.api.v2.ListTeamRefereesRequest",
          "description": "Request that is sent when listing the referees for a given team.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "team_id",
              "description": "Team ID to list referees for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTeamRefereesResponse",
          "longName": "ListTeamRefereesResponse",
          "fullName": "datanode.api.v2.ListTeamRefereesResponse",
          "description": "Response that is sent when listing the referees for a given team.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "team_referees",
              "description": "Page of team referee data and corresponding page information.",
              "label": "",
              "type": "TeamRefereeConnection",
              "longType": "TeamRefereeConnection",
              "fullType": "datanode.api.v2.TeamRefereeConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTeamsRequest",
          "longName": "ListTeamsRequest",
          "fullName": "datanode.api.v2.ListTeamsRequest",
          "description": "Request to list all teams",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "team_id",
              "description": "Restrict teams to those with the given team ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_team_id",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Restrict teams to those where the given party is a referrer or a referee.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTeamsResponse",
          "longName": "ListTeamsResponse",
          "fullName": "datanode.api.v2.ListTeamsResponse",
          "description": "Response for the list teams request containing the team information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "teams",
              "description": "Page of team data and corresponding page information.",
              "label": "",
              "type": "TeamConnection",
              "longType": "TeamConnection",
              "fullType": "datanode.api.v2.TeamConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTradesRequest",
          "longName": "ListTradesRequest",
          "fullName": "datanode.api.v2.ListTradesRequest",
          "description": "Request to list trades",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_ids",
              "description": "Restrict trades to those that occurred on the given markets.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_ids",
              "description": "Restrict trades to those that were caused by the given orders.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_ids",
              "description": "Restrict trades to those that were caused by orders placed by the given parties.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination control.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "Restrict trades to those made during the given date range. If not set, all trades will be returned.",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTradesResponse",
          "longName": "ListTradesResponse",
          "fullName": "datanode.api.v2.ListTradesResponse",
          "description": "Response from listing trades",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "Page of trades data and corresponding page information.",
              "label": "",
              "type": "TradeConnection",
              "longType": "TradeConnection",
              "fullType": "datanode.api.v2.TradeConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTransfersRequest",
          "longName": "ListTransfersRequest",
          "fullName": "datanode.api.v2.ListTransfersRequest",
          "description": "Request that is sent to list transfers",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pubkey",
              "description": "Restrict transfer to those where the given public key is a sender or receiver.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pubkey",
              "defaultValue": ""
            },
            {
              "name": "direction",
              "description": "Restrict transfers to those in the given direction from the supplied public key.\nWhen is_reward is true, and pubkey is set, then direction MUST be TRANSFER_DIRECTION_DIRECTION_FROM.",
              "label": "",
              "type": "TransferDirection",
              "longType": "TransferDirection",
              "fullType": "datanode.api.v2.TransferDirection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "is_reward",
              "description": "Restrict transfers to those related to reward transfers.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_is_reward",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTransfersResponse",
          "longName": "ListTransfersResponse",
          "fullName": "datanode.api.v2.ListTransfersResponse",
          "description": "Response that is received when listing  transfers",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfers",
              "description": "Page of transfers data and corresponding page information.",
              "label": "",
              "type": "TransferConnection",
              "longType": "TransferConnection",
              "fullType": "datanode.api.v2.TransferConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListVotesRequest",
          "longName": "ListVotesRequest",
          "fullName": "datanode.api.v2.ListVotesRequest",
          "description": "Request that is used to list governance votes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party for which the votes are requested.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "proposal_id",
              "description": "Proposal ID to list votes for.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposal_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListVotesResponse",
          "longName": "ListVotesResponse",
          "fullName": "datanode.api.v2.ListVotesResponse",
          "description": "Response that is received when listing Votes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "votes",
              "description": "Page of votes data received and corresponding page information.",
              "label": "",
              "type": "VoteConnection",
              "longType": "VoteConnection",
              "fullType": "datanode.api.v2.VoteConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListWithdrawalsRequest",
          "longName": "ListWithdrawalsRequest",
          "fullName": "datanode.api.v2.ListWithdrawalsRequest",
          "description": "List all withdrawals for a given party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict withdrawals to those made by this party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls.",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "Date range of the requested data, if provided.",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListWithdrawalsResponse",
          "longName": "ListWithdrawalsResponse",
          "fullName": "datanode.api.v2.ListWithdrawalsResponse",
          "description": "Response from listing withdrawals data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawals",
              "description": "Page of withdrawals data and corresponding page information.",
              "label": "",
              "type": "WithdrawalsConnection",
              "longType": "WithdrawalsConnection",
              "fullType": "datanode.api.v2.WithdrawalsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginConnection",
          "longName": "MarginConnection",
          "fullName": "datanode.api.v2.MarginConnection",
          "description": "Page of margins data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of margins data and their corresponding cursors.",
              "label": "repeated",
              "type": "MarginEdge",
              "longType": "MarginEdge",
              "fullType": "datanode.api.v2.MarginEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginEdge",
          "longName": "MarginEdge",
          "fullName": "datanode.api.v2.MarginEdge",
          "description": "Margin data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Margin levels data that satisfy a list margin levels request.",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginEstimate",
          "longName": "MarginEstimate",
          "fullName": "datanode.api.v2.MarginEstimate",
          "description": "Margin level estimate for both worst and best case possible.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "worst_case",
              "description": "Margin level estimate assuming slippage cap is applied.",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_case",
              "description": "Margin level estimate assuming no slippage.",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketConnection",
          "longName": "MarketConnection",
          "fullName": "datanode.api.v2.MarketConnection",
          "description": "Page of markets and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of markets and their corresponding cursors.",
              "label": "repeated",
              "type": "MarketEdge",
              "longType": "MarketEdge",
              "fullType": "datanode.api.v2.MarketEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDataConnection",
          "longName": "MarketDataConnection",
          "fullName": "datanode.api.v2.MarketDataConnection",
          "description": "Page of market data items and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of market data items and their corresponding cursors.",
              "label": "repeated",
              "type": "MarketDataEdge",
              "longType": "MarketDataEdge",
              "fullType": "datanode.api.v2.MarketDataEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDataEdge",
          "longName": "MarketDataEdge",
          "fullName": "datanode.api.v2.MarketDataEdge",
          "description": "Market data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data generated by a market when open.",
              "label": "",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketEdge",
          "longName": "MarketEdge",
          "fullName": "datanode.api.v2.MarketEdge",
          "description": "Market information with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Information about the market.",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkParameterConnection",
          "longName": "NetworkParameterConnection",
          "fullName": "datanode.api.v2.NetworkParameterConnection",
          "description": "Page of network parameters and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of network parameters data and their corresponding cursors.",
              "label": "repeated",
              "type": "NetworkParameterEdge",
              "longType": "NetworkParameterEdge",
              "fullType": "datanode.api.v2.NetworkParameterEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkParameterEdge",
          "longName": "NetworkParameterEdge",
          "fullName": "datanode.api.v2.NetworkParameterEdge",
          "description": "Network parameter with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Name and associated value of a network parameter.",
              "label": "",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeBasic",
          "longName": "NodeBasic",
          "fullName": "datanode.api.v2.NodeBasic",
          "description": "Represents a basic node without any epoch specific details like delegations, staking, rewards etc.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique ID identifying the node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pub_key",
              "description": "Node operator's public key.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tm_pub_key",
              "description": "Tendermint public key of the node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "Ethereum public key of the node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info_url",
              "description": "URL that provides more information about the node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "location",
              "description": "Country code for the location of the node.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Node status.",
              "label": "",
              "type": "NodeStatus",
              "longType": "vega.NodeStatus",
              "fullType": "vega.NodeStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Node name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "Avatar URL.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeEdge",
          "longName": "NodeEdge",
          "fullName": "datanode.api.v2.NodeEdge",
          "description": "Node data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data specific to a single node on the Vega network.",
              "label": "",
              "type": "Node",
              "longType": "vega.Node",
              "fullType": "vega.Node",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeSignatureEdge",
          "longName": "NodeSignatureEdge",
          "fullName": "datanode.api.v2.NodeSignatureEdge",
          "description": "Nodes signature edge with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Node signature data.",
              "label": "",
              "type": "NodeSignature",
              "longType": "vega.commands.v1.NodeSignature",
              "fullType": "vega.commands.v1.NodeSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeSignaturesConnection",
          "longName": "NodeSignaturesConnection",
          "fullName": "datanode.api.v2.NodeSignaturesConnection",
          "description": "Page of node signatures and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of node signatures and their corresponding cursors.",
              "label": "repeated",
              "type": "NodeSignatureEdge",
              "longType": "NodeSignatureEdge",
              "fullType": "datanode.api.v2.NodeSignatureEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodesConnection",
          "longName": "NodesConnection",
          "fullName": "datanode.api.v2.NodesConnection",
          "description": "Page of node data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of node data and their corresponding cursors.",
              "label": "repeated",
              "type": "NodeEdge",
              "longType": "NodeEdge",
              "fullType": "datanode.api.v2.NodeEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveAccountsRequest",
          "longName": "ObserveAccountsRequest",
          "fullName": "datanode.api.v2.ObserveAccountsRequest",
          "description": "Request that is sent when getting a subscription to a stream of accounts.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID to filter accounts by. If empty, no markets will be filtered.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID to filter accounts by. If empty, no parties will be filtered.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset ID to filter accounts by. If empty, no assets will be filtered.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Account type to subscribe to, required field.",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveAccountsResponse",
          "longName": "ObserveAccountsResponse",
          "fullName": "datanode.api.v2.ObserveAccountsResponse",
          "description": "Response that is received when subscribing to a stream of accounts.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "snapshot",
              "description": "'Initial image' snapshot containing current account balances.",
              "label": "",
              "type": "AccountSnapshotPage",
              "longType": "AccountSnapshotPage",
              "fullType": "datanode.api.v2.AccountSnapshotPage",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "response",
              "defaultValue": ""
            },
            {
              "name": "updates",
              "description": "List of account updates in the last block.",
              "label": "",
              "type": "AccountUpdates",
              "longType": "AccountUpdates",
              "fullType": "datanode.api.v2.AccountUpdates",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "response",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveCandleDataRequest",
          "longName": "ObserveCandleDataRequest",
          "fullName": "datanode.api.v2.ObserveCandleDataRequest",
          "description": "Request that is used to subscribe to a stream of candles",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "candle_id",
              "description": "Unique ID for the candle.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveCandleDataResponse",
          "longName": "ObserveCandleDataResponse",
          "fullName": "datanode.api.v2.ObserveCandleDataResponse",
          "description": "Response that is received when subscribing to a stream of candles",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "candle",
              "description": "Candle data.",
              "label": "",
              "type": "Candle",
              "longType": "Candle",
              "fullType": "datanode.api.v2.Candle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveDelegationsRequest",
          "longName": "ObserveDelegationsRequest",
          "fullName": "datanode.api.v2.ObserveDelegationsRequest",
          "description": "Request to subscribe to all event related to delegations, with the given filters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID to get delegations for, if provided.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "Node ID to get delegations for, if provided.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_node_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveDelegationsResponse",
          "longName": "ObserveDelegationsResponse",
          "fullName": "datanode.api.v2.ObserveDelegationsResponse",
          "description": "Response with all events related to delegations, with the given filters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegation",
              "description": "How much a party is delegating to a node and when.",
              "label": "",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveEventBusRequest",
          "longName": "ObserveEventBusRequest",
          "fullName": "datanode.api.v2.ObserveEventBusRequest",
          "description": "Request to subscribe to a stream of one or more event types from the Vega event bus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "One or more types of event, required field.",
              "label": "repeated",
              "type": "BusEventType",
              "longType": "vega.events.v1.BusEventType",
              "fullType": "vega.events.v1.BusEventType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID to filter for, optional field. If empty, no markets will be excluded from the stream.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID to filter for, optional field. If empty, no parties will be excluded from the stream.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_size",
              "description": "Batch size,\nIf not specified, any events received will be sent immediately. If the client is not ready\nfor the next data-set, data may be dropped a number of times, and eventually the stream is closed.\nif specified, the first batch will be sent when ready. To receive the next set of events, the client\nmust write an `ObserveEventBatch` message on the stream to flush the buffer.\nIf no message is received in 5 seconds, the stream is closed.\nDefault: 0, send any and all events when they are available.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveEventBusResponse",
          "longName": "ObserveEventBusResponse",
          "fullName": "datanode.api.v2.ObserveEventBusResponse",
          "description": "Response to a subscribed stream of events from the Vega event bus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "events",
              "description": "List of events that occurred on the Vega event bus.",
              "label": "repeated",
              "type": "BusEvent",
              "longType": "vega.events.v1.BusEvent",
              "fullType": "vega.events.v1.BusEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveGovernanceRequest",
          "longName": "ObserveGovernanceRequest",
          "fullName": "datanode.api.v2.ObserveGovernanceRequest",
          "description": "Request for governance subscription",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict proposal updates to those proposed by the given party ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveGovernanceResponse",
          "longName": "ObserveGovernanceResponse",
          "fullName": "datanode.api.v2.ObserveGovernanceResponse",
          "description": "Response from governance subscription",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Governance data, i.e. proposal and votes for and against.",
              "label": "",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveLedgerMovementsRequest",
          "longName": "ObserveLedgerMovementsRequest",
          "fullName": "datanode.api.v2.ObserveLedgerMovementsRequest",
          "description": "Request to subscribe to ledger movements",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ObserveLedgerMovementsResponse",
          "longName": "ObserveLedgerMovementsResponse",
          "fullName": "datanode.api.v2.ObserveLedgerMovementsResponse",
          "description": "Response from ledger movements subscription",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ledger_movement",
              "description": "Ledger movements data with list of ledger entries and and post-transfer balances.",
              "label": "",
              "type": "LedgerMovement",
              "longType": "vega.LedgerMovement",
              "fullType": "vega.LedgerMovement",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveLiquidityProvisionsRequest",
          "longName": "ObserveLiquidityProvisionsRequest",
          "fullName": "datanode.api.v2.ObserveLiquidityProvisionsRequest",
          "description": "Request sent to subscribe to liquidity provisions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Target market to observe for liquidity provisions.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Target party to observe for submitted liquidity provisions.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveLiquidityProvisionsResponse",
          "longName": "ObserveLiquidityProvisionsResponse",
          "fullName": "datanode.api.v2.ObserveLiquidityProvisionsResponse",
          "description": "Response from liquidity provisions subscription",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "liquidity_provisions",
              "description": "",
              "label": "repeated",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarginLevelsRequest",
          "longName": "ObserveMarginLevelsRequest",
          "fullName": "datanode.api.v2.ObserveMarginLevelsRequest",
          "description": "Request to subscribe to a stream of MarginLevels data.\nIf a party ID is provided, the stream will contain margin levels for that party only.\nOptionally, the list can be additionally filtered by market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict margin level updates to those relating to the given party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Restrict margin level updates to those relating to the given market.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarginLevelsResponse",
          "longName": "ObserveMarginLevelsResponse",
          "fullName": "datanode.api.v2.ObserveMarginLevelsResponse",
          "description": "Response from subscribing to margin levels data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "margin_levels",
              "description": "Margin levels data that match the subscription request filters.",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDataRequest",
          "longName": "ObserveMarketsDataRequest",
          "fullName": "datanode.api.v2.ObserveMarketsDataRequest",
          "description": "Request that is sent for market data subscription",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_ids",
              "description": "Restrict updates to market data by the given market IDs.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDataResponse",
          "longName": "ObserveMarketsDataResponse",
          "fullName": "datanode.api.v2.ObserveMarketsDataResponse",
          "description": "Response that is received for market data subscription",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_data",
              "description": "List of market data.",
              "label": "repeated",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDepthRequest",
          "longName": "ObserveMarketsDepthRequest",
          "fullName": "datanode.api.v2.ObserveMarketsDepthRequest",
          "description": "Request that is sent to get market depth subscription",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_ids",
              "description": "Restrict market depth data by the given market IDs.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDepthResponse",
          "longName": "ObserveMarketsDepthResponse",
          "fullName": "datanode.api.v2.ObserveMarketsDepthResponse",
          "description": "Response that is received for MarketDepth subscription.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_depth",
              "description": "List of market depth data.",
              "label": "repeated",
              "type": "MarketDepth",
              "longType": "vega.MarketDepth",
              "fullType": "vega.MarketDepth",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDepthUpdatesRequest",
          "longName": "ObserveMarketsDepthUpdatesRequest",
          "fullName": "datanode.api.v2.ObserveMarketsDepthUpdatesRequest",
          "description": "Request that is sent for market depth update subscription",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_ids",
              "description": "Restrict updates to market depth by the given market IDs.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDepthUpdatesResponse",
          "longName": "ObserveMarketsDepthUpdatesResponse",
          "fullName": "datanode.api.v2.ObserveMarketsDepthUpdatesResponse",
          "description": "Response that is received for market depth update subscription",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "update",
              "description": "List of market depth update data.",
              "label": "repeated",
              "type": "MarketDepthUpdate",
              "longType": "vega.MarketDepthUpdate",
              "fullType": "vega.MarketDepthUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveOrdersRequest",
          "longName": "ObserveOrdersRequest",
          "fullName": "datanode.api.v2.ObserveOrdersRequest",
          "description": "Request to subscribe to a stream of orders.\n\nRequest fields market ID and party ID are both optional filters:\nIf omitted all orders, for all parties on all markets will be returned on the stream\nBoth filters can be combined",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_ids",
              "description": "Restrict orders to those placed on the given markets.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_ids",
              "description": "Restrict orders to those placed on the by the given parties.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "exclude_liquidity",
              "description": "Whether liquidity orders should be excluded from the stream. If not set, liquidity orders will be included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_exclude_liquidity",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveOrdersResponse",
          "longName": "ObserveOrdersResponse",
          "fullName": "datanode.api.v2.ObserveOrdersResponse",
          "description": "Response that is received from an orders subscription.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "snapshot",
              "description": "An 'initial image' snapshot containing current live orders.",
              "label": "",
              "type": "OrderSnapshotPage",
              "longType": "OrderSnapshotPage",
              "fullType": "datanode.api.v2.OrderSnapshotPage",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "response",
              "defaultValue": ""
            },
            {
              "name": "updates",
              "description": "List of order updates in the last block.",
              "label": "",
              "type": "OrderUpdates",
              "longType": "OrderUpdates",
              "fullType": "datanode.api.v2.OrderUpdates",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "response",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObservePositionsRequest",
          "longName": "ObservePositionsRequest",
          "fullName": "datanode.api.v2.ObservePositionsRequest",
          "description": "Request that is used to subscribe to a stream of positions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict position updates to those related to the given parties.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Restrict position updates to those related to the given markets.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObservePositionsResponse",
          "longName": "ObservePositionsResponse",
          "fullName": "datanode.api.v2.ObservePositionsResponse",
          "description": "Response received from a positions subscription request",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "snapshot",
              "description": "An 'initial image' snapshot containing current positions.",
              "label": "",
              "type": "PositionSnapshotPage",
              "longType": "PositionSnapshotPage",
              "fullType": "datanode.api.v2.PositionSnapshotPage",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "response",
              "defaultValue": ""
            },
            {
              "name": "updates",
              "description": "List of position updates in the last block.",
              "label": "",
              "type": "PositionUpdates",
              "longType": "PositionUpdates",
              "fullType": "datanode.api.v2.PositionUpdates",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "response",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveRewardsRequest",
          "longName": "ObserveRewardsRequest",
          "fullName": "datanode.api.v2.ObserveRewardsRequest",
          "description": "Request sent for subscribing to rewards",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Asset ID to get rewards data for, if provided.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID to get rewards data for, if provided.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveRewardsResponse",
          "longName": "ObserveRewardsResponse",
          "fullName": "datanode.api.v2.ObserveRewardsResponse",
          "description": "Response that is received from subscribing to rewards data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reward",
              "description": "Rewards data received.",
              "label": "",
              "type": "Reward",
              "longType": "vega.Reward",
              "fullType": "vega.Reward",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveTradesRequest",
          "longName": "ObserveTradesRequest",
          "fullName": "datanode.api.v2.ObserveTradesRequest",
          "description": "Request to subscribe to a stream of trades\n\nRequest fields market ID and party ID are both optional filters:\nIf omitted all trades, for all parties on all markets will be returned on the stream\nIf market ID is given, trades from that market will be returned on the stream\nIf party ID is given, trades from that party will be returned on the stream\nBoth filters can be combined.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_ids",
              "description": "Restrict the trades streamed to those made on the given markets.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_ids",
              "description": "Restrict the trades streamed to those made by the given parties.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveTradesResponse",
          "longName": "ObserveTradesResponse",
          "fullName": "datanode.api.v2.ObserveTradesResponse",
          "description": "Stream of trades",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "List of 0 or more trades.",
              "label": "repeated",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveVotesRequest",
          "longName": "ObserveVotesRequest",
          "fullName": "datanode.api.v2.ObserveVotesRequest",
          "description": "Request that is sent to subscribe to votes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Restrict vote updates to those made by the given party.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "proposal_id",
              "description": "Restrict vote updates to those made on the given proposal.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposal_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveVotesResponse",
          "longName": "ObserveVotesResponse",
          "fullName": "datanode.api.v2.ObserveVotesResponse",
          "description": "Response that is received from votes subscription",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vote",
              "description": "Data associated with governance votes that are published to the stream.",
              "label": "",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleDataConnection",
          "longName": "OracleDataConnection",
          "fullName": "datanode.api.v2.OracleDataConnection",
          "description": "Page of oracle data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of oracle data and their corresponding cursors.",
              "label": "repeated",
              "type": "OracleDataEdge",
              "longType": "OracleDataEdge",
              "fullType": "datanode.api.v2.OracleDataEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleDataEdge",
          "longName": "OracleDataEdge",
          "fullName": "datanode.api.v2.OracleDataEdge",
          "description": "Oracle data item with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data that was received from an external oracle.",
              "label": "",
              "type": "OracleData",
              "longType": "vega.OracleData",
              "fullType": "vega.OracleData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecEdge",
          "longName": "OracleSpecEdge",
          "fullName": "datanode.api.v2.OracleSpecEdge",
          "description": "Oracle specs data item with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "External spec data that satisfies the list request.",
              "label": "",
              "type": "OracleSpec",
              "longType": "vega.OracleSpec",
              "fullType": "vega.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecsConnection",
          "longName": "OracleSpecsConnection",
          "fullName": "datanode.api.v2.OracleSpecsConnection",
          "description": "Page of oracle specs and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of oracle specs data and their corresponding cursors.",
              "label": "repeated",
              "type": "OracleSpecEdge",
              "longType": "OracleSpecEdge",
              "fullType": "datanode.api.v2.OracleSpecEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderConnection",
          "longName": "OrderConnection",
          "fullName": "datanode.api.v2.OrderConnection",
          "description": "Page of orders data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of orders and their corresponding cursors.",
              "label": "repeated",
              "type": "OrderEdge",
              "longType": "OrderEdge",
              "fullType": "datanode.api.v2.OrderEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderEdge",
          "longName": "OrderEdge",
          "fullName": "datanode.api.v2.OrderEdge",
          "description": "Order data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data associated with an order submitted to a Vega node.",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderFilter",
          "longName": "OrderFilter",
          "fullName": "datanode.api.v2.OrderFilter",
          "description": "Order filter that contains all filtering conditions and values that are applied to the orders listing",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "statuses",
              "description": "Restrict orders to those with the given statuses.",
              "label": "repeated",
              "type": "Status",
              "longType": "vega.Order.Status",
              "fullType": "vega.Order.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "types",
              "description": "Restrict orders to those with the given types.",
              "label": "repeated",
              "type": "Type",
              "longType": "vega.Order.Type",
              "fullType": "vega.Order.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_in_forces",
              "description": "Restrict orders to those with the given Time In Force.",
              "label": "repeated",
              "type": "TimeInForce",
              "longType": "vega.Order.TimeInForce",
              "fullType": "vega.Order.TimeInForce",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "exclude_liquidity",
              "description": "Indicator if liquidity provisions should be included or not in the list.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_ids",
              "description": "Restrict orders to those placed by the given party IDs.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_ids",
              "description": "Restrict orders to those placed on the given market IDs.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Restrict orders to those with the given reference.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reference",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "Restrict orders to those placed during the given date range. If not set, all orders will be returned.",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            },
            {
              "name": "live_only",
              "description": "Restrict orders to those that are live. If not set, it is treated as being false.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_live_only",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderInfo",
          "longName": "OrderInfo",
          "fullName": "datanode.api.v2.OrderInfo",
          "description": "Basic description of an order.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "side",
              "description": "Side for the order, e.g. buy or sell.",
              "label": "",
              "type": "Side",
              "longType": "vega.Side",
              "fullType": "vega.Side",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the order. The price is an unsigned integer. For example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "remaining",
              "description": "Size remaining.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_market_order",
              "description": "Boolean that indicates if it is a market order.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderSnapshotPage",
          "longName": "OrderSnapshotPage",
          "fullName": "datanode.api.v2.OrderSnapshotPage",
          "description": "'Initial image' of live orders, may be sent over multiple response messages.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "List of order data parts.",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_page",
              "description": "Indicator if the last page is reached or not.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderUpdates",
          "longName": "OrderUpdates",
          "fullName": "datanode.api.v2.OrderUpdates",
          "description": "List of order updates in the last block.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "List of orders data.",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PageInfo",
          "longName": "PageInfo",
          "fullName": "datanode.api.v2.PageInfo",
          "description": "Page information for cursor based pagination",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "has_next_page",
              "description": "Indicator if there is a next page.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "has_previous_page",
              "description": "Indicator if there is a previous page.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_cursor",
              "description": "Start cursor.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_cursor",
              "description": "End cursor.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Pagination",
          "longName": "Pagination",
          "fullName": "datanode.api.v2.Pagination",
          "description": "All data returned from the API is ordered in a well-defined manner.\nThe specific columns and the order in which the sorting is performed\ndepend on the API endpoint being called. However, the primary sorting\ncolumn is usually the timestamp of the block in which the data was last updated.\n\nTo prevent excessively large response messages and to avoid overloading\ndatabase resources, the API employs a cursor-based pagination mechanism.\n\nThis Pagination message can be optionally provided as part of the request to specify:\n- The starting point within the total result set for beginning the page\n- The size of the returned page\n- The ordering of the data within that page\n\nIf no Pagination message is provided, the API will return the first page of\ndata using the default page size. The default page size is 1000.\n\nTo retrieve subsequent pages, the caller must examine the PageInfo structure\nreturned in the response to find a cursor string that uniquely identifies the\nlast row of that page. This cursor should then be passed in the 'after' field\nof the Pagination message in a subsequent request.\n\nFor paging backward, take the cursor for the first row of the page from PageInfo\nand pass it in the 'before' field of the Pagination message.\n\nPagination message that uses both first/after and last/before is considered invalid.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "first",
              "description": "Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_first",
              "defaultValue": ""
            },
            {
              "name": "after",
              "description": "If paging forwards, the cursor string for the last row of the previous page.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_after",
              "defaultValue": ""
            },
            {
              "name": "last",
              "description": "Number of records to be returned that sort less than row identified by cursor supplied in 'before'.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_last",
              "defaultValue": ""
            },
            {
              "name": "before",
              "description": "If paging forwards, the cursor string for the first row of the previous page.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_before",
              "defaultValue": ""
            },
            {
              "name": "newest_first",
              "description": "Whether to order the results with the newest records first. If not set, the default value is true.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_newest_first",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PaidLiquidityFeesConnection",
          "longName": "PaidLiquidityFeesConnection",
          "fullName": "datanode.api.v2.PaidLiquidityFeesConnection",
          "description": "Paid liquidity fees data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of paid liquidity fees data.",
              "label": "repeated",
              "type": "PaidLiquidityFeesEdge",
              "longType": "PaidLiquidityFeesEdge",
              "fullType": "datanode.api.v2.PaidLiquidityFeesEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PaidLiquidityFeesEdge",
          "longName": "PaidLiquidityFeesEdge",
          "fullName": "datanode.api.v2.PaidLiquidityFeesEdge",
          "description": "Paid liquidity fees data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Paid liquidity fees data returned by the API.",
              "label": "",
              "type": "PaidLiquidityFeesStats",
              "longType": "vega.events.v1.PaidLiquidityFeesStats",
              "fullType": "vega.events.v1.PaidLiquidityFeesStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further data.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyConnection",
          "longName": "PartyConnection",
          "fullName": "datanode.api.v2.PartyConnection",
          "description": "Page of parties data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of parties and their corresponding cursors.",
              "label": "repeated",
              "type": "PartyEdge",
              "longType": "PartyEdge",
              "fullType": "datanode.api.v2.PartyEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyEdge",
          "longName": "PartyEdge",
          "fullName": "datanode.api.v2.PartyEdge",
          "description": "Party data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data associated with a party.",
              "label": "",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PingRequest",
          "longName": "PingRequest",
          "fullName": "datanode.api.v2.PingRequest",
          "description": "Request to ping the data node",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "PingResponse",
          "longName": "PingResponse",
          "fullName": "datanode.api.v2.PingResponse",
          "description": "Ping response from the data node",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "PositionConnection",
          "longName": "PositionConnection",
          "fullName": "datanode.api.v2.PositionConnection",
          "description": "Page of positions and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of positions data and their corresponding cursors.",
              "label": "repeated",
              "type": "PositionEdge",
              "longType": "PositionEdge",
              "fullType": "datanode.api.v2.PositionEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionEdge",
          "longName": "PositionEdge",
          "fullName": "datanode.api.v2.PositionEdge",
          "description": "Position data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Position data for a party on a market.",
              "label": "",
              "type": "Position",
              "longType": "vega.Position",
              "fullType": "vega.Position",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionSnapshotPage",
          "longName": "PositionSnapshotPage",
          "fullName": "datanode.api.v2.PositionSnapshotPage",
          "description": "'Initial image' of current positions, may be sent over multiple response messages",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "positions",
              "description": "List of positions data.",
              "label": "repeated",
              "type": "Position",
              "longType": "vega.Position",
              "fullType": "vega.Position",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_page",
              "description": "Indicator if last page is reached or not.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionUpdates",
          "longName": "PositionUpdates",
          "fullName": "datanode.api.v2.PositionUpdates",
          "description": "List of position updates in the last block",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "positions",
              "description": "List of positions data.",
              "label": "repeated",
              "type": "Position",
              "longType": "vega.Position",
              "fullType": "vega.Position",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionsFilter",
          "longName": "PositionsFilter",
          "fullName": "datanode.api.v2.PositionsFilter",
          "description": "Filter to apply to the ListAllPositionsRequest",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_ids",
              "description": "Restrict positions to those related to the given parties.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_ids",
              "description": "Restrict positions to those on the given markets.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeProposalConnection",
          "longName": "ProtocolUpgradeProposalConnection",
          "fullName": "datanode.api.v2.ProtocolUpgradeProposalConnection",
          "description": "Page of protocol upgrade proposals and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of protocol upgrade proposals data and their corresponding cursors.",
              "label": "repeated",
              "type": "ProtocolUpgradeProposalEdge",
              "longType": "ProtocolUpgradeProposalEdge",
              "fullType": "datanode.api.v2.ProtocolUpgradeProposalEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeProposalEdge",
          "longName": "ProtocolUpgradeProposalEdge",
          "fullName": "datanode.api.v2.ProtocolUpgradeProposalEdge",
          "description": "Protocol upgrade proposal data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Protocol upgrade proposal data.",
              "label": "",
              "type": "ProtocolUpgradeEvent",
              "longType": "vega.events.v1.ProtocolUpgradeEvent",
              "fullType": "vega.events.v1.ProtocolUpgradeEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralProgram",
          "longName": "ReferralProgram",
          "fullName": "datanode.api.v2.ReferralProgram",
          "description": "Referral program details.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Incremental version of the program. It is incremented after each program\nupdate.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "Unique ID generated from the proposal that created this program.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "benefit_tiers",
              "description": "Defined tiers in increasing order. First element will give Tier 1, second\nelement will give Tier 2, and so on.",
              "label": "repeated",
              "type": "BenefitTier",
              "longType": "vega.BenefitTier",
              "fullType": "vega.BenefitTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_of_program_timestamp",
              "description": "Timestamp in Unix nanoseconds, after which when the current epoch ends, the\nprogram will end and benefits will be disabled.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_length",
              "description": "Number of epochs over which the referral set's running volume is evaluated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking_tiers",
              "description": "Defined benefit tiers ordered by increasing reward multiplier. Determines the level of\nbenefit a party can expect based on their staking.",
              "label": "repeated",
              "type": "StakingTier",
              "longType": "vega.StakingTier",
              "fullType": "vega.StakingTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ended_at",
              "description": "Timestamp, in Unix nanoseconds, when the program ended.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_ended_at",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSet",
          "longName": "ReferralSet",
          "fullName": "datanode.api.v2.ReferralSet",
          "description": "Data relating to a referral set.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique ID of the created set.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referrer",
              "description": "Party that created the set.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Timestamp, in Unix nanoseconds, when the set was created.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Timestamp, in Unix nanoseconds, when the set was updated.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSetConnection",
          "longName": "ReferralSetConnection",
          "fullName": "datanode.api.v2.ReferralSetConnection",
          "description": "Page of referral set data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of referral set data and their corresponding cursors.",
              "label": "repeated",
              "type": "ReferralSetEdge",
              "longType": "ReferralSetEdge",
              "fullType": "datanode.api.v2.ReferralSetEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSetEdge",
          "longName": "ReferralSetEdge",
          "fullName": "datanode.api.v2.ReferralSetEdge",
          "description": "Referral set data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Referral set data.",
              "label": "",
              "type": "ReferralSet",
              "longType": "ReferralSet",
              "fullType": "datanode.api.v2.ReferralSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSetReferee",
          "longName": "ReferralSetReferee",
          "fullName": "datanode.api.v2.ReferralSetReferee",
          "description": "Data relating to referees that have joined a referral set",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "referral_set_id",
              "description": "Unique ID of the referral set the referee joined.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referee",
              "description": "Party that joined the set.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "joined_at",
              "description": "Timestamp, in Unix nanoseconds, when the party joined the set.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_epoch",
              "description": "Epoch at which the party joined the set.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_referee_notional_taker_volume",
              "description": "Total notional volume of the referee's aggressive trades over the aggregation period.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_referee_generated_rewards",
              "description": "Total rewards generated by the referee over the aggregation period.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSetRefereeConnection",
          "longName": "ReferralSetRefereeConnection",
          "fullName": "datanode.api.v2.ReferralSetRefereeConnection",
          "description": "Page of data about the referral set's referees and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of referral set referee data and their corresponding cursors.",
              "label": "repeated",
              "type": "ReferralSetRefereeEdge",
              "longType": "ReferralSetRefereeEdge",
              "fullType": "datanode.api.v2.ReferralSetRefereeEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSetRefereeEdge",
          "longName": "ReferralSetRefereeEdge",
          "fullName": "datanode.api.v2.ReferralSetRefereeEdge",
          "description": "Data about the Referral set's referees with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Referral set referee data.",
              "label": "",
              "type": "ReferralSetReferee",
              "longType": "ReferralSetReferee",
              "fullType": "datanode.api.v2.ReferralSetReferee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSetStats",
          "longName": "ReferralSetStats",
          "fullName": "datanode.api.v2.ReferralSetStats",
          "description": "Referral set statistics for a given epoch for a party.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "at_epoch",
              "description": "Epoch at which the set's statistics were updated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referral_set_running_notional_taker_volume",
              "description": "Running volume for the set based on the window length of the current\nreferral program.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "discount_factor",
              "description": "Discount factor applied to the party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_factor",
              "description": "Reward factor applied to the party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_notional_taker_volume",
              "description": "Current referee notional taker volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards_multiplier",
              "description": "Multiplier applied to the referral reward factor when calculating referral rewards due to the referrer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards_factor_multiplier",
              "description": "Proportion of the referee's taker fees to be rewarded to the referrer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "was_eligible",
              "description": "Indicates if the referral set was eligible to be part of the referral program.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referrer_taker_volume",
              "description": "Referrer's taker volume",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSetStatsConnection",
          "longName": "ReferralSetStatsConnection",
          "fullName": "datanode.api.v2.ReferralSetStatsConnection",
          "description": "Page of volume discount stats data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of volume discount statistics data and their corresponding cursors.",
              "label": "repeated",
              "type": "ReferralSetStatsEdge",
              "longType": "ReferralSetStatsEdge",
              "fullType": "datanode.api.v2.ReferralSetStatsEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSetStatsEdge",
          "longName": "ReferralSetStatsEdge",
          "fullName": "datanode.api.v2.ReferralSetStatsEdge",
          "description": "Referral set stats data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Referral set stats data.",
              "label": "",
              "type": "ReferralSetStats",
              "longType": "ReferralSetStats",
              "fullType": "datanode.api.v2.ReferralSetStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardEdge",
          "longName": "RewardEdge",
          "fullName": "datanode.api.v2.RewardEdge",
          "description": "Rewards data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Details for a single reward payment.",
              "label": "",
              "type": "Reward",
              "longType": "vega.Reward",
              "fullType": "vega.Reward",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardSummaryFilter",
          "longName": "RewardSummaryFilter",
          "fullName": "datanode.api.v2.RewardSummaryFilter",
          "description": "Filter to restrict the results returned by the ListEpochRewardSummaries",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "asset_ids",
              "description": "Restrict reward summaries to those connected to the assets in the given list.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_ids",
              "description": "Restrict reward summaries to those connected to the markets in the given list.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_epoch",
              "description": "Restrict rewards summaries to those that were paid after and including the given epoch ID.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_from_epoch",
              "defaultValue": ""
            },
            {
              "name": "to_epoch",
              "description": "Restrict rewards summaries to those that were paid up to and including the given epoch ID.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_to_epoch",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardsConnection",
          "longName": "RewardsConnection",
          "fullName": "datanode.api.v2.RewardsConnection",
          "description": "Page of rewards data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of rewards data items and their corresponding cursors.",
              "label": "repeated",
              "type": "RewardEdge",
              "longType": "RewardEdge",
              "fullType": "datanode.api.v2.RewardEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeLinkingEdge",
          "longName": "StakeLinkingEdge",
          "fullName": "datanode.api.v2.StakeLinkingEdge",
          "description": "Stake linking data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Stake linking represent the intent from a party to deposit.",
              "label": "",
              "type": "StakeLinking",
              "longType": "vega.events.v1.StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakesConnection",
          "longName": "StakesConnection",
          "fullName": "datanode.api.v2.StakesConnection",
          "description": "Page of stake data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of stake data and their corresponding cursors.",
              "label": "repeated",
              "type": "StakeLinkingEdge",
              "longType": "StakeLinkingEdge",
              "fullType": "datanode.api.v2.StakeLinkingEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopOrderConnection",
          "longName": "StopOrderConnection",
          "fullName": "datanode.api.v2.StopOrderConnection",
          "description": "Page of stop orders data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of stop orders and their corresponding cursors.",
              "label": "repeated",
              "type": "StopOrderEdge",
              "longType": "StopOrderEdge",
              "fullType": "datanode.api.v2.StopOrderEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopOrderEdge",
          "longName": "StopOrderEdge",
          "fullName": "datanode.api.v2.StopOrderEdge",
          "description": "Order data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data associated with an order submitted to a Vega node.",
              "label": "",
              "type": "StopOrderEvent",
              "longType": "vega.events.v1.StopOrderEvent",
              "fullType": "vega.events.v1.StopOrderEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopOrderFilter",
          "longName": "StopOrderFilter",
          "fullName": "datanode.api.v2.StopOrderFilter",
          "description": "Stop order filter\n\nStop order filter that contains all filtering conditions and values that are applied to the stop orders listing.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "statuses",
              "description": "Restrict orders to those with the given statuses.",
              "label": "repeated",
              "type": "Status",
              "longType": "vega.StopOrder.Status",
              "fullType": "vega.StopOrder.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiry_strategies",
              "description": "Restrict orders to those with the given expiry strategies.",
              "label": "repeated",
              "type": "ExpiryStrategy",
              "longType": "vega.StopOrder.ExpiryStrategy",
              "fullType": "vega.StopOrder.ExpiryStrategy",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "date_range",
              "description": "Restrict orders to those placed during the given date range. If not set, all orders will be returned.",
              "label": "optional",
              "type": "DateRange",
              "longType": "DateRange",
              "fullType": "datanode.api.v2.DateRange",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_date_range",
              "defaultValue": ""
            },
            {
              "name": "party_ids",
              "description": "Restrict orders to those placed by the given party IDs.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_ids",
              "description": "Restrict orders to those placed on the given market IDs.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "live_only",
              "description": "Live stop orders only",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_live_only",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SuccessorMarket",
          "longName": "SuccessorMarket",
          "fullName": "datanode.api.v2.SuccessorMarket",
          "description": "Successor market information includes the market that is a member of the succession line\nand any governance data that is associated with proposals for child markets\nwhether enacted or not.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "The market that is a member of the succession line.",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposals",
              "description": "All proposals for child markets that have the market as a parent.",
              "label": "repeated",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SuccessorMarketConnection",
          "longName": "SuccessorMarketConnection",
          "fullName": "datanode.api.v2.SuccessorMarketConnection",
          "description": "Page of successor market records and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of successor markets and their cursors.",
              "label": "repeated",
              "type": "SuccessorMarketEdge",
              "longType": "SuccessorMarketEdge",
              "fullType": "datanode.api.v2.SuccessorMarketEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information for pagination control.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SuccessorMarketEdge",
          "longName": "SuccessorMarketEdge",
          "fullName": "datanode.api.v2.SuccessorMarketEdge",
          "description": "Successor market record with the corresponding cursor for paginated results",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Successor market record.",
              "label": "",
              "type": "SuccessorMarket",
              "longType": "SuccessorMarket",
              "fullType": "datanode.api.v2.SuccessorMarket",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor identifying the record for pagination control.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Team",
          "longName": "Team",
          "fullName": "datanode.api.v2.Team",
          "description": "Team record containing the team information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "team_id",
              "description": "ID of the created team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referrer",
              "description": "Party ID that created the team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "team_url",
              "description": "Link to the team's homepage.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_team_url",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "Link to an image of the team's avatar.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_avatar_url",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Timestamp in Unix nanoseconds when the team was created.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "Whether or not the team is closed to new party members.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at_epoch",
              "description": "Epoch at which the team was created.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamConnection",
          "longName": "TeamConnection",
          "fullName": "datanode.api.v2.TeamConnection",
          "description": "Page of team data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of team data and their corresponding cursors.",
              "label": "repeated",
              "type": "TeamEdge",
              "longType": "TeamEdge",
              "fullType": "datanode.api.v2.TeamEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamEdge",
          "longName": "TeamEdge",
          "fullName": "datanode.api.v2.TeamEdge",
          "description": "Team data item with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Team data.",
              "label": "",
              "type": "Team",
              "longType": "Team",
              "fullType": "datanode.api.v2.Team",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamReferee",
          "longName": "TeamReferee",
          "fullName": "datanode.api.v2.TeamReferee",
          "description": "A team's referee info",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "team_id",
              "description": "ID of the team the referee joined.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referee",
              "description": "Party that joined the team.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "joined_at",
              "description": "Timestamp in Unix nanoseconds when the party joined the team.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "joined_at_epoch",
              "description": "Epoch at which the party joined the team.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamRefereeConnection",
          "longName": "TeamRefereeConnection",
          "fullName": "datanode.api.v2.TeamRefereeConnection",
          "description": "Page of team referee data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of team referee data and their corresponding cursors.",
              "label": "repeated",
              "type": "TeamRefereeEdge",
              "longType": "TeamRefereeEdge",
              "fullType": "datanode.api.v2.TeamRefereeEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamRefereeEdge",
          "longName": "TeamRefereeEdge",
          "fullName": "datanode.api.v2.TeamRefereeEdge",
          "description": "Team referee data item with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Team referee data.",
              "label": "",
              "type": "TeamReferee",
              "longType": "TeamReferee",
              "fullType": "datanode.api.v2.TeamReferee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamRefereeHistory",
          "longName": "TeamRefereeHistory",
          "fullName": "datanode.api.v2.TeamRefereeHistory",
          "description": "A referee's team change information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "team_id",
              "description": "ID of the team the referee joined.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "joined_at",
              "description": "Timestamp in Unix nanoseconds when the party joined the team.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "joined_at_epoch",
              "description": "Epoch at which the party joined the team.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamRefereeHistoryConnection",
          "longName": "TeamRefereeHistoryConnection",
          "fullName": "datanode.api.v2.TeamRefereeHistoryConnection",
          "description": "Page of history data about a referee's team membership and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of team referee history data and their corresponding cursors.",
              "label": "repeated",
              "type": "TeamRefereeHistoryEdge",
              "longType": "TeamRefereeHistoryEdge",
              "fullType": "datanode.api.v2.TeamRefereeHistoryEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamRefereeHistoryEdge",
          "longName": "TeamRefereeHistoryEdge",
          "fullName": "datanode.api.v2.TeamRefereeHistoryEdge",
          "description": "Team referee history data item with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Team referee data.",
              "label": "",
              "type": "TeamRefereeHistory",
              "longType": "TeamRefereeHistory",
              "fullType": "datanode.api.v2.TeamRefereeHistory",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradeConnection",
          "longName": "TradeConnection",
          "fullName": "datanode.api.v2.TradeConnection",
          "description": "Page of trades and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of trades and their corresponding cursors.",
              "label": "repeated",
              "type": "TradeEdge",
              "longType": "TradeEdge",
              "fullType": "datanode.api.v2.TradeEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradeEdge",
          "longName": "TradeEdge",
          "fullName": "datanode.api.v2.TradeEdge",
          "description": "Trade data item with the corresponding cursor..",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data associated with a trade that has been executed.",
              "label": "",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferConnection",
          "longName": "TransferConnection",
          "fullName": "datanode.api.v2.TransferConnection",
          "description": "Page of transfers data items and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of transfers data and their corresponding cursors.",
              "label": "repeated",
              "type": "TransferEdge",
              "longType": "TransferEdge",
              "fullType": "datanode.api.v2.TransferEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferEdge",
          "longName": "TransferEdge",
          "fullName": "datanode.api.v2.TransferEdge",
          "description": "Transfers data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data relating to a transfer that has been made.",
              "label": "",
              "type": "TransferNode",
              "longType": "TransferNode",
              "fullType": "datanode.api.v2.TransferNode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferNode",
          "longName": "TransferNode",
          "fullName": "datanode.api.v2.TransferNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfer",
              "description": "Data relating to a transfer that has been made.",
              "label": "",
              "type": "Transfer",
              "longType": "vega.events.v1.Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fees",
              "description": "Fees paid for this transfer.",
              "label": "repeated",
              "type": "TransferFees",
              "longType": "vega.events.v1.TransferFees",
              "fullType": "vega.events.v1.TransferFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountProgram",
          "longName": "VolumeDiscountProgram",
          "fullName": "datanode.api.v2.VolumeDiscountProgram",
          "description": "Volume discount program details.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Incremental version of the program. It is incremented after each program\nupdate.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "Unique ID generated from the proposal that created this program.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "benefit_tiers",
              "description": "Defined benefit tiers ordered by increasing discounts. Determines the level of\nbenefit a party can expect based on performance criteria.",
              "label": "repeated",
              "type": "VolumeBenefitTier",
              "longType": "vega.VolumeBenefitTier",
              "fullType": "vega.VolumeBenefitTier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_of_program_timestamp",
              "description": "Timestamp in Unix nanoseconds, after which when the current epoch\nends, the program will end and benefits will be disabled.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_length",
              "description": "Number of epochs over which a volume discount statistics' running volume is evaluated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ended_at",
              "description": "Timestamp in Unix nanoseconds, at which the program ended.",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_ended_at",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountStats",
          "longName": "VolumeDiscountStats",
          "fullName": "datanode.api.v2.VolumeDiscountStats",
          "description": "Volume discount statistics for a given epoch for all parties.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "at_epoch",
              "description": "Epoch at which the statistics apply.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID for which the statistics apply.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "discount_factor",
              "description": "Discount factor applied given the party's running volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "running_volume",
              "description": "The party's running volume.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountStatsConnection",
          "longName": "VolumeDiscountStatsConnection",
          "fullName": "datanode.api.v2.VolumeDiscountStatsConnection",
          "description": "Page of volume discount stats data and corresponding page information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of volume discount statistics data and their corresponding cursors.",
              "label": "repeated",
              "type": "VolumeDiscountStatsEdge",
              "longType": "VolumeDiscountStatsEdge",
              "fullType": "datanode.api.v2.VolumeDiscountStatsEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountStatsEdge",
          "longName": "VolumeDiscountStatsEdge",
          "fullName": "datanode.api.v2.VolumeDiscountStatsEdge",
          "description": "Volume discount stats data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Volume discount stats data.",
              "label": "",
              "type": "VolumeDiscountStats",
              "longType": "VolumeDiscountStats",
              "fullType": "datanode.api.v2.VolumeDiscountStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VoteConnection",
          "longName": "VoteConnection",
          "fullName": "datanode.api.v2.VoteConnection",
          "description": "Page of vote data items and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of vote data and their corresponding cursors.",
              "label": "repeated",
              "type": "VoteEdge",
              "longType": "VoteEdge",
              "fullType": "datanode.api.v2.VoteEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VoteEdge",
          "longName": "VoteEdge",
          "fullName": "datanode.api.v2.VoteEdge",
          "description": "Votes data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data associated with a governance vote.",
              "label": "",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawalEdge",
          "longName": "WithdrawalEdge",
          "fullName": "datanode.api.v2.WithdrawalEdge",
          "description": "Withdrawals data with the corresponding cursor.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "Data associated with a single withdrawal made from the Vega network.",
              "label": "",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "Cursor that can be used to fetch further pages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawalsConnection",
          "longName": "WithdrawalsConnection",
          "fullName": "datanode.api.v2.WithdrawalsConnection",
          "description": "Page of withdrawals data and corresponding page information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "Page of withdrawals data and their corresponding cursors.",
              "label": "repeated",
              "type": "WithdrawalEdge",
              "longType": "WithdrawalEdge",
              "fullType": "datanode.api.v2.WithdrawalEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Page information that is used for fetching further pages.",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "TradingDataService",
          "longName": "TradingDataService",
          "fullName": "datanode.api.v2.TradingDataService",
          "description": "",
          "methods": [
            {
              "name": "ListAccounts",
              "description": "List accounts\n\nGet a list of accounts matching the supplied filter, including their current balances.\nIf a given account has never had a balance, it will be absent from the list.",
              "requestType": "ListAccountsRequest",
              "requestLongType": "ListAccountsRequest",
              "requestFullType": "datanode.api.v2.ListAccountsRequest",
              "requestStreaming": false,
              "responseType": "ListAccountsResponse",
              "responseLongType": "ListAccountsResponse",
              "responseFullType": "datanode.api.v2.ListAccountsResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveAccounts",
              "description": "Accounts subscription\n\nSubscribe to a stream of accounts",
              "requestType": "ObserveAccountsRequest",
              "requestLongType": "ObserveAccountsRequest",
              "requestFullType": "datanode.api.v2.ObserveAccountsRequest",
              "requestStreaming": false,
              "responseType": "ObserveAccountsResponse",
              "responseLongType": "ObserveAccountsResponse",
              "responseFullType": "datanode.api.v2.ObserveAccountsResponse",
              "responseStreaming": true
            },
            {
              "name": "Info",
              "description": "Data node information\n\nGet information about the data node.\nResponse contains a semver formatted version of the data node and the commit hash, from which the data node was built",
              "requestType": "InfoRequest",
              "requestLongType": "InfoRequest",
              "requestFullType": "datanode.api.v2.InfoRequest",
              "requestStreaming": false,
              "responseType": "InfoResponse",
              "responseLongType": "InfoResponse",
              "responseFullType": "datanode.api.v2.InfoResponse",
              "responseStreaming": false
            },
            {
              "name": "GetOrder",
              "description": "Get order\n\nGet an order by its ID. An order's ID will be the SHA3-256 hash of the signature that the order was submitted with",
              "requestType": "GetOrderRequest",
              "requestLongType": "GetOrderRequest",
              "requestFullType": "datanode.api.v2.GetOrderRequest",
              "requestStreaming": false,
              "responseType": "GetOrderResponse",
              "responseLongType": "GetOrderResponse",
              "responseFullType": "datanode.api.v2.GetOrderResponse",
              "responseStreaming": false
            },
            {
              "name": "ListOrders",
              "description": "List orders\n\nGet a list of orders that match the given filters",
              "requestType": "ListOrdersRequest",
              "requestLongType": "ListOrdersRequest",
              "requestFullType": "datanode.api.v2.ListOrdersRequest",
              "requestStreaming": false,
              "responseType": "ListOrdersResponse",
              "responseLongType": "ListOrdersResponse",
              "responseFullType": "datanode.api.v2.ListOrdersResponse",
              "responseStreaming": false
            },
            {
              "name": "ListOrderVersions",
              "description": "List order versions\n\nGet a list of all versions of an order in the order history",
              "requestType": "ListOrderVersionsRequest",
              "requestLongType": "ListOrderVersionsRequest",
              "requestFullType": "datanode.api.v2.ListOrderVersionsRequest",
              "requestStreaming": false,
              "responseType": "ListOrderVersionsResponse",
              "responseLongType": "ListOrderVersionsResponse",
              "responseFullType": "datanode.api.v2.ListOrderVersionsResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveOrders",
              "description": "Observe orders\n\nSubscribe to a stream of orders",
              "requestType": "ObserveOrdersRequest",
              "requestLongType": "ObserveOrdersRequest",
              "requestFullType": "datanode.api.v2.ObserveOrdersRequest",
              "requestStreaming": false,
              "responseType": "ObserveOrdersResponse",
              "responseLongType": "ObserveOrdersResponse",
              "responseFullType": "datanode.api.v2.ObserveOrdersResponse",
              "responseStreaming": true
            },
            {
              "name": "GetStopOrder",
              "description": "Get stop order\n\nGet a stop order by its ID. A stop order's ID will be the SHA3-256 hash of the signature that the order was submitted with.\nA stop order's ID is likely to be different from the ID of the order that will be submitted when the stop is triggered.",
              "requestType": "GetStopOrderRequest",
              "requestLongType": "GetStopOrderRequest",
              "requestFullType": "datanode.api.v2.GetStopOrderRequest",
              "requestStreaming": false,
              "responseType": "GetStopOrderResponse",
              "responseLongType": "GetStopOrderResponse",
              "responseFullType": "datanode.api.v2.GetStopOrderResponse",
              "responseStreaming": false
            },
            {
              "name": "ListStopOrders",
              "description": "List stop orders\n\nGet a list of stop orders that match the given filters",
              "requestType": "ListStopOrdersRequest",
              "requestLongType": "ListStopOrdersRequest",
              "requestFullType": "datanode.api.v2.ListStopOrdersRequest",
              "requestStreaming": false,
              "responseType": "ListStopOrdersResponse",
              "responseLongType": "ListStopOrdersResponse",
              "responseFullType": "datanode.api.v2.ListStopOrdersResponse",
              "responseStreaming": false
            },
            {
              "name": "ListPositions",
              "description": "Deprecated: List positions\n\nGet a list of positions by party's public key using cursor based pagination\nDeprecated: use ListAllPositions instead",
              "requestType": "ListPositionsRequest",
              "requestLongType": "ListPositionsRequest",
              "requestFullType": "datanode.api.v2.ListPositionsRequest",
              "requestStreaming": false,
              "responseType": "ListPositionsResponse",
              "responseLongType": "ListPositionsResponse",
              "responseFullType": "datanode.api.v2.ListPositionsResponse",
              "responseStreaming": false,
              "options": {
                "deprecated": true
              }
            },
            {
              "name": "ListAllPositions",
              "description": "List positions\n\nGet a list of all of a party's positions",
              "requestType": "ListAllPositionsRequest",
              "requestLongType": "ListAllPositionsRequest",
              "requestFullType": "datanode.api.v2.ListAllPositionsRequest",
              "requestStreaming": false,
              "responseType": "ListAllPositionsResponse",
              "responseLongType": "ListAllPositionsResponse",
              "responseFullType": "datanode.api.v2.ListAllPositionsResponse",
              "responseStreaming": false
            },
            {
              "name": "ObservePositions",
              "description": "Observe positions\n\nSubscribe to a stream of position updates. The first messages sent through the stream will contain\ninformation about current positions, followed by updates to those positions.",
              "requestType": "ObservePositionsRequest",
              "requestLongType": "ObservePositionsRequest",
              "requestFullType": "datanode.api.v2.ObservePositionsRequest",
              "requestStreaming": false,
              "responseType": "ObservePositionsResponse",
              "responseLongType": "ObservePositionsResponse",
              "responseFullType": "datanode.api.v2.ObservePositionsResponse",
              "responseStreaming": true
            },
            {
              "name": "ListLedgerEntries",
              "description": "List ledger entries\n\nGet a list of ledger entries within the given date range. The date range is restricted to a maximum of 5 days.\nThis query requests and sums the number of ledger entries from a given subset of accounts, specified via the 'filter' argument.\nIt returns a time series - implemented as a list of AggregateLedgerEntry structs - with a row for every time\nthe summed ledger entries of the set of specified accounts changes.\nEach account filter must contain no more than one party ID.\nAt least one party ID must be specified in the from or to account filter.\n\nEntries can be filtered by:\n  - the sending account (market ID, asset ID, account type)\n  - receiving account (market ID, asset ID, account type)\n  - sending AND receiving account\n  - transfer type either in addition to the above filters or as a standalone option\nNote: The date range is restricted to any 5 days.\n  If no start or end date is provided, only ledger entries from the last 5 days will be returned.\n  If a start and end date are provided, but the end date is more than 5 days after the start date, only data up to 5 days after the start date will be returned.\n  If a start date is provided but no end date, the end date will be set to 5 days after the start date.\n  If no start date is provided, but the end date is, the start date will be set to 5 days before the end date.",
              "requestType": "ListLedgerEntriesRequest",
              "requestLongType": "ListLedgerEntriesRequest",
              "requestFullType": "datanode.api.v2.ListLedgerEntriesRequest",
              "requestStreaming": false,
              "responseType": "ListLedgerEntriesResponse",
              "responseLongType": "ListLedgerEntriesResponse",
              "responseFullType": "datanode.api.v2.ListLedgerEntriesResponse",
              "responseStreaming": false
            },
            {
              "name": "ExportLedgerEntries",
              "description": "Export ledger entries\n\nExport ledger entries records ledger entries to a csv file.\nMay or may not contain a date range - if no date range is provided, list all records for all times.\n\nLedger entries can be exported by:\n  - export ledger entries for a single party for a given asset within a given time range\n  - export ledger entries for a single party for a given asset for all times\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME\nbuf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE",
              "requestType": "ExportLedgerEntriesRequest",
              "requestLongType": "ExportLedgerEntriesRequest",
              "requestFullType": "datanode.api.v2.ExportLedgerEntriesRequest",
              "requestStreaming": false,
              "responseType": "HttpBody",
              "responseLongType": ".google.api.HttpBody",
              "responseFullType": "google.api.HttpBody",
              "responseStreaming": true
            },
            {
              "name": "ListBalanceChanges",
              "description": "List balance changes\n\nGet a list of the changes in account balances over a period of time.",
              "requestType": "ListBalanceChangesRequest",
              "requestLongType": "ListBalanceChangesRequest",
              "requestFullType": "datanode.api.v2.ListBalanceChangesRequest",
              "requestStreaming": false,
              "responseType": "ListBalanceChangesResponse",
              "responseLongType": "ListBalanceChangesResponse",
              "responseFullType": "datanode.api.v2.ListBalanceChangesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetLatestMarketData",
              "description": "Get latest market data\n\nGet the latest market data for a given market",
              "requestType": "GetLatestMarketDataRequest",
              "requestLongType": "GetLatestMarketDataRequest",
              "requestFullType": "datanode.api.v2.GetLatestMarketDataRequest",
              "requestStreaming": false,
              "responseType": "GetLatestMarketDataResponse",
              "responseLongType": "GetLatestMarketDataResponse",
              "responseFullType": "datanode.api.v2.GetLatestMarketDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ListLatestMarketData",
              "description": "List latest market data\n\nGet a list of the latest market data for every market",
              "requestType": "ListLatestMarketDataRequest",
              "requestLongType": "ListLatestMarketDataRequest",
              "requestFullType": "datanode.api.v2.ListLatestMarketDataRequest",
              "requestStreaming": false,
              "responseType": "ListLatestMarketDataResponse",
              "responseLongType": "ListLatestMarketDataResponse",
              "responseFullType": "datanode.api.v2.ListLatestMarketDataResponse",
              "responseStreaming": false
            },
            {
              "name": "GetLatestMarketDepth",
              "description": "Get latest market depth\n\nGet the latest market depth for a given market",
              "requestType": "GetLatestMarketDepthRequest",
              "requestLongType": "GetLatestMarketDepthRequest",
              "requestFullType": "datanode.api.v2.GetLatestMarketDepthRequest",
              "requestStreaming": false,
              "responseType": "GetLatestMarketDepthResponse",
              "responseLongType": "GetLatestMarketDepthResponse",
              "responseFullType": "datanode.api.v2.GetLatestMarketDepthResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveMarketsDepth",
              "description": "Observe markets depth\n\nSubscribe to a stream of the latest market depth for a given market",
              "requestType": "ObserveMarketsDepthRequest",
              "requestLongType": "ObserveMarketsDepthRequest",
              "requestFullType": "datanode.api.v2.ObserveMarketsDepthRequest",
              "requestStreaming": false,
              "responseType": "ObserveMarketsDepthResponse",
              "responseLongType": "ObserveMarketsDepthResponse",
              "responseFullType": "datanode.api.v2.ObserveMarketsDepthResponse",
              "responseStreaming": true
            },
            {
              "name": "ObserveMarketsDepthUpdates",
              "description": "Observe markets depth updates\n\nSubscribe to a stream of updates on market depth for a given market",
              "requestType": "ObserveMarketsDepthUpdatesRequest",
              "requestLongType": "ObserveMarketsDepthUpdatesRequest",
              "requestFullType": "datanode.api.v2.ObserveMarketsDepthUpdatesRequest",
              "requestStreaming": false,
              "responseType": "ObserveMarketsDepthUpdatesResponse",
              "responseLongType": "ObserveMarketsDepthUpdatesResponse",
              "responseFullType": "datanode.api.v2.ObserveMarketsDepthUpdatesResponse",
              "responseStreaming": true
            },
            {
              "name": "ObserveMarketsData",
              "description": "Observe markets data\n\nSubscribe to a stream of data about a given market",
              "requestType": "ObserveMarketsDataRequest",
              "requestLongType": "ObserveMarketsDataRequest",
              "requestFullType": "datanode.api.v2.ObserveMarketsDataRequest",
              "requestStreaming": false,
              "responseType": "ObserveMarketsDataResponse",
              "responseLongType": "ObserveMarketsDataResponse",
              "responseFullType": "datanode.api.v2.ObserveMarketsDataResponse",
              "responseStreaming": true
            },
            {
              "name": "GetMarketDataHistoryByID",
              "description": "Get market data history\n\nGet market data history for a market ID from between a given date range",
              "requestType": "GetMarketDataHistoryByIDRequest",
              "requestLongType": "GetMarketDataHistoryByIDRequest",
              "requestFullType": "datanode.api.v2.GetMarketDataHistoryByIDRequest",
              "requestStreaming": false,
              "responseType": "GetMarketDataHistoryByIDResponse",
              "responseLongType": "GetMarketDataHistoryByIDResponse",
              "responseFullType": "datanode.api.v2.GetMarketDataHistoryByIDResponse",
              "responseStreaming": false
            },
            {
              "name": "ListTransfers",
              "description": "List transfers\n\nGet a list of transfers between public keys. A valid value for public key can be one of:\n- a party ID\n- \"network\"\n- \"0000000000000000000000000000000000000000000000000000000000000000\", the public key for the global rewards account",
              "requestType": "ListTransfersRequest",
              "requestLongType": "ListTransfersRequest",
              "requestFullType": "datanode.api.v2.ListTransfersRequest",
              "requestStreaming": false,
              "responseType": "ListTransfersResponse",
              "responseLongType": "ListTransfersResponse",
              "responseFullType": "datanode.api.v2.ListTransfersResponse",
              "responseStreaming": false
            },
            {
              "name": "GetTransfer",
              "description": "Get transfer by ID\n\nGet a specific transfer by ID",
              "requestType": "GetTransferRequest",
              "requestLongType": "GetTransferRequest",
              "requestFullType": "datanode.api.v2.GetTransferRequest",
              "requestStreaming": false,
              "responseType": "GetTransferResponse",
              "responseLongType": "GetTransferResponse",
              "responseFullType": "datanode.api.v2.GetTransferResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNetworkLimits",
              "description": "Get network limits\n\nGet the network limits relating to asset and market creation",
              "requestType": "GetNetworkLimitsRequest",
              "requestLongType": "GetNetworkLimitsRequest",
              "requestFullType": "datanode.api.v2.GetNetworkLimitsRequest",
              "requestStreaming": false,
              "responseType": "GetNetworkLimitsResponse",
              "responseLongType": "GetNetworkLimitsResponse",
              "responseFullType": "datanode.api.v2.GetNetworkLimitsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListCandleData",
              "description": "List candle data\n\nGet a list of candle data for a given candle ID. Candle IDs can be obtained by calling list-candle-intervals",
              "requestType": "ListCandleDataRequest",
              "requestLongType": "ListCandleDataRequest",
              "requestFullType": "datanode.api.v2.ListCandleDataRequest",
              "requestStreaming": false,
              "responseType": "ListCandleDataResponse",
              "responseLongType": "ListCandleDataResponse",
              "responseFullType": "datanode.api.v2.ListCandleDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveCandleData",
              "description": "Observe candle data\n\nSubscribe to a stream of candle updates",
              "requestType": "ObserveCandleDataRequest",
              "requestLongType": "ObserveCandleDataRequest",
              "requestFullType": "datanode.api.v2.ObserveCandleDataRequest",
              "requestStreaming": false,
              "responseType": "ObserveCandleDataResponse",
              "responseLongType": "ObserveCandleDataResponse",
              "responseFullType": "datanode.api.v2.ObserveCandleDataResponse",
              "responseStreaming": true
            },
            {
              "name": "ListCandleIntervals",
              "description": "List candle intervals\n\nGet a list of all available intervals for a given market along with the corresponding candle ID",
              "requestType": "ListCandleIntervalsRequest",
              "requestLongType": "ListCandleIntervalsRequest",
              "requestFullType": "datanode.api.v2.ListCandleIntervalsRequest",
              "requestStreaming": false,
              "responseType": "ListCandleIntervalsResponse",
              "responseLongType": "ListCandleIntervalsResponse",
              "responseFullType": "datanode.api.v2.ListCandleIntervalsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListVotes",
              "description": "List votes\n\nGet a list of votes. A party ID or a proposal ID must be provided.",
              "requestType": "ListVotesRequest",
              "requestLongType": "ListVotesRequest",
              "requestFullType": "datanode.api.v2.ListVotesRequest",
              "requestStreaming": false,
              "responseType": "ListVotesResponse",
              "responseLongType": "ListVotesResponse",
              "responseFullType": "datanode.api.v2.ListVotesResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveVotes",
              "description": "Observe votes\n\nSubscribe to a stream of votes cast on a given proposal, or by all votes made by a given party",
              "requestType": "ObserveVotesRequest",
              "requestLongType": "ObserveVotesRequest",
              "requestFullType": "datanode.api.v2.ObserveVotesRequest",
              "requestStreaming": false,
              "responseType": "ObserveVotesResponse",
              "responseLongType": "ObserveVotesResponse",
              "responseFullType": "datanode.api.v2.ObserveVotesResponse",
              "responseStreaming": true
            },
            {
              "name": "ListERC20MultiSigSignerAddedBundles",
              "description": "List ERC20 multi-sig signer added bundles\n\nGet a list of the signature bundles to add a particular validator to the signer list of the multisig contract",
              "requestType": "ListERC20MultiSigSignerAddedBundlesRequest",
              "requestLongType": "ListERC20MultiSigSignerAddedBundlesRequest",
              "requestFullType": "datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest",
              "requestStreaming": false,
              "responseType": "ListERC20MultiSigSignerAddedBundlesResponse",
              "responseLongType": "ListERC20MultiSigSignerAddedBundlesResponse",
              "responseFullType": "datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListERC20MultiSigSignerRemovedBundles",
              "description": "List ERC20 multi-sig signer removed bundles\n\nGet a list of the signature bundles to remove a particular validator from signer list of the multisig contract",
              "requestType": "ListERC20MultiSigSignerRemovedBundlesRequest",
              "requestLongType": "ListERC20MultiSigSignerRemovedBundlesRequest",
              "requestFullType": "datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest",
              "requestStreaming": false,
              "responseType": "ListERC20MultiSigSignerRemovedBundlesResponse",
              "responseLongType": "ListERC20MultiSigSignerRemovedBundlesResponse",
              "responseFullType": "datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetERC20ListAssetBundle",
              "description": "Get ERC20 list asset bundle\n\nGet the signatures bundle to allowlist an ERC20 token in the collateral bridge",
              "requestType": "GetERC20ListAssetBundleRequest",
              "requestLongType": "GetERC20ListAssetBundleRequest",
              "requestFullType": "datanode.api.v2.GetERC20ListAssetBundleRequest",
              "requestStreaming": false,
              "responseType": "GetERC20ListAssetBundleResponse",
              "responseLongType": "GetERC20ListAssetBundleResponse",
              "responseFullType": "datanode.api.v2.GetERC20ListAssetBundleResponse",
              "responseStreaming": false
            },
            {
              "name": "GetERC20SetAssetLimitsBundle",
              "description": "Get ERC20 set asset limits bundle\n\nGet the signature bundle to update the token limits. These are `maxLifetimeDeposit` and `withdrawThreshold` for a given ERC20 token that is\nalready allowlisted in the collateral bridge.",
              "requestType": "GetERC20SetAssetLimitsBundleRequest",
              "requestLongType": "GetERC20SetAssetLimitsBundleRequest",
              "requestFullType": "datanode.api.v2.GetERC20SetAssetLimitsBundleRequest",
              "requestStreaming": false,
              "responseType": "GetERC20SetAssetLimitsBundleResponse",
              "responseLongType": "GetERC20SetAssetLimitsBundleResponse",
              "responseFullType": "datanode.api.v2.GetERC20SetAssetLimitsBundleResponse",
              "responseStreaming": false
            },
            {
              "name": "GetERC20WithdrawalApproval",
              "description": "Get ERC20 withdrawal approval\n\nGet the signature bundle to finalise a withdrawal on Ethereum",
              "requestType": "GetERC20WithdrawalApprovalRequest",
              "requestLongType": "GetERC20WithdrawalApprovalRequest",
              "requestFullType": "datanode.api.v2.GetERC20WithdrawalApprovalRequest",
              "requestStreaming": false,
              "responseType": "GetERC20WithdrawalApprovalResponse",
              "responseLongType": "GetERC20WithdrawalApprovalResponse",
              "responseFullType": "datanode.api.v2.GetERC20WithdrawalApprovalResponse",
              "responseStreaming": false
            },
            {
              "name": "GetLastTrade",
              "description": "Get last trade\n\nGet the last trade made for a given market.",
              "requestType": "GetLastTradeRequest",
              "requestLongType": "GetLastTradeRequest",
              "requestFullType": "datanode.api.v2.GetLastTradeRequest",
              "requestStreaming": false,
              "responseType": "GetLastTradeResponse",
              "responseLongType": "GetLastTradeResponse",
              "responseFullType": "datanode.api.v2.GetLastTradeResponse",
              "responseStreaming": false
            },
            {
              "name": "ListTrades",
              "description": "List trades\n\nGet a list of all trades, optionally filtered by party/market/order",
              "requestType": "ListTradesRequest",
              "requestLongType": "ListTradesRequest",
              "requestFullType": "datanode.api.v2.ListTradesRequest",
              "requestStreaming": false,
              "responseType": "ListTradesResponse",
              "responseLongType": "ListTradesResponse",
              "responseFullType": "datanode.api.v2.ListTradesResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveTrades",
              "description": "Observe trades\n\nSubscribe to a stream of trades, optionally filtered by party/market",
              "requestType": "ObserveTradesRequest",
              "requestLongType": "ObserveTradesRequest",
              "requestFullType": "datanode.api.v2.ObserveTradesRequest",
              "requestStreaming": false,
              "responseType": "ObserveTradesResponse",
              "responseLongType": "ObserveTradesResponse",
              "responseFullType": "datanode.api.v2.ObserveTradesResponse",
              "responseStreaming": true
            },
            {
              "name": "GetOracleSpec",
              "description": "Get oracle spec\n\nGet an oracle spec by ID. Oracle spec IDs can be found by querying markets that use them as a data source",
              "requestType": "GetOracleSpecRequest",
              "requestLongType": "GetOracleSpecRequest",
              "requestFullType": "datanode.api.v2.GetOracleSpecRequest",
              "requestStreaming": false,
              "responseType": "GetOracleSpecResponse",
              "responseLongType": "GetOracleSpecResponse",
              "responseFullType": "datanode.api.v2.GetOracleSpecResponse",
              "responseStreaming": false
            },
            {
              "name": "ListOracleSpecs",
              "description": "List oracle specs\n\nGet a list of all oracles specs that are defined against all markets",
              "requestType": "ListOracleSpecsRequest",
              "requestLongType": "ListOracleSpecsRequest",
              "requestFullType": "datanode.api.v2.ListOracleSpecsRequest",
              "requestStreaming": false,
              "responseType": "ListOracleSpecsResponse",
              "responseLongType": "ListOracleSpecsResponse",
              "responseFullType": "datanode.api.v2.ListOracleSpecsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListOracleData",
              "description": "List oracle data\n\nGet a list of all oracle data that have been broadcast to any market",
              "requestType": "ListOracleDataRequest",
              "requestLongType": "ListOracleDataRequest",
              "requestFullType": "datanode.api.v2.ListOracleDataRequest",
              "requestStreaming": false,
              "responseType": "ListOracleDataResponse",
              "responseLongType": "ListOracleDataResponse",
              "responseFullType": "datanode.api.v2.ListOracleDataResponse",
              "responseStreaming": false
            },
            {
              "name": "GetMarket",
              "description": "Get market\n\nGet information about a specific market using its ID. A market's ID will be the same as the ID of the proposal that\ngenerated it",
              "requestType": "GetMarketRequest",
              "requestLongType": "GetMarketRequest",
              "requestFullType": "datanode.api.v2.GetMarketRequest",
              "requestStreaming": false,
              "responseType": "GetMarketResponse",
              "responseLongType": "GetMarketResponse",
              "responseFullType": "datanode.api.v2.GetMarketResponse",
              "responseStreaming": false
            },
            {
              "name": "ListMarkets",
              "description": "List markets\n\nGet a list of markets",
              "requestType": "ListMarketsRequest",
              "requestLongType": "ListMarketsRequest",
              "requestFullType": "datanode.api.v2.ListMarketsRequest",
              "requestStreaming": false,
              "responseType": "ListMarketsResponse",
              "responseLongType": "ListMarketsResponse",
              "responseFullType": "datanode.api.v2.ListMarketsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListSuccessorMarkets",
              "description": "List successor markets\n\nGiven a market ID, return the full lineage of markets since inception, or all successor markets since and including\nthe given market ID. The markets will be returned in succession order, i.e. the market at position i will be the parent\nof the market at position i+1.",
              "requestType": "ListSuccessorMarketsRequest",
              "requestLongType": "ListSuccessorMarketsRequest",
              "requestFullType": "datanode.api.v2.ListSuccessorMarketsRequest",
              "requestStreaming": false,
              "responseType": "ListSuccessorMarketsResponse",
              "responseLongType": "ListSuccessorMarketsResponse",
              "responseFullType": "datanode.api.v2.ListSuccessorMarketsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetParty",
              "description": "Get party\n\nGet a single party",
              "requestType": "GetPartyRequest",
              "requestLongType": "GetPartyRequest",
              "requestFullType": "datanode.api.v2.GetPartyRequest",
              "requestStreaming": false,
              "responseType": "GetPartyResponse",
              "responseLongType": "GetPartyResponse",
              "responseFullType": "datanode.api.v2.GetPartyResponse",
              "responseStreaming": false
            },
            {
              "name": "ListParties",
              "description": "List parties\n\nGet a list of parties",
              "requestType": "ListPartiesRequest",
              "requestLongType": "ListPartiesRequest",
              "requestFullType": "datanode.api.v2.ListPartiesRequest",
              "requestStreaming": false,
              "responseType": "ListPartiesResponse",
              "responseLongType": "ListPartiesResponse",
              "responseFullType": "datanode.api.v2.ListPartiesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListMarginLevels",
              "description": "List margin levels\n\nGet a list margin levels that match the provided criteria. If no filter is provided, all margin levels will be returned.",
              "requestType": "ListMarginLevelsRequest",
              "requestLongType": "ListMarginLevelsRequest",
              "requestFullType": "datanode.api.v2.ListMarginLevelsRequest",
              "requestStreaming": false,
              "responseType": "ListMarginLevelsResponse",
              "responseLongType": "ListMarginLevelsResponse",
              "responseFullType": "datanode.api.v2.ListMarginLevelsResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveMarginLevels",
              "description": "Observe margin levels\n\nSubscribe to a stream of margin levels updates",
              "requestType": "ObserveMarginLevelsRequest",
              "requestLongType": "ObserveMarginLevelsRequest",
              "requestFullType": "datanode.api.v2.ObserveMarginLevelsRequest",
              "requestStreaming": false,
              "responseType": "ObserveMarginLevelsResponse",
              "responseLongType": "ObserveMarginLevelsResponse",
              "responseFullType": "datanode.api.v2.ObserveMarginLevelsResponse",
              "responseStreaming": true
            },
            {
              "name": "ListRewards",
              "description": "List rewards\n\nGet a list of rewards that match the provided criteria. If no filter is provided, all rewards will be returned.",
              "requestType": "ListRewardsRequest",
              "requestLongType": "ListRewardsRequest",
              "requestFullType": "datanode.api.v2.ListRewardsRequest",
              "requestStreaming": false,
              "responseType": "ListRewardsResponse",
              "responseLongType": "ListRewardsResponse",
              "responseFullType": "datanode.api.v2.ListRewardsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListRewardSummaries",
              "description": "List reward summaries\n\nGet a list of reward summaries where the reward amount is the total rewards received over all epochs\nper party ID and asset ID.\nRequest parameters are optional party ID and asset ID.\nIf no data is provided, all reward summaries will be returned grouped by party and asset ID.",
              "requestType": "ListRewardSummariesRequest",
              "requestLongType": "ListRewardSummariesRequest",
              "requestFullType": "datanode.api.v2.ListRewardSummariesRequest",
              "requestStreaming": false,
              "responseType": "ListRewardSummariesResponse",
              "responseLongType": "ListRewardSummariesResponse",
              "responseFullType": "datanode.api.v2.ListRewardSummariesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListEpochRewardSummaries",
              "description": "List epoch reward summaries\n\nGet a list of reward summaries by epoch for a given range of epochs.\nThe result is filtered by list of asset IDs, market IDs and starting and ending epochs, for which to return rewards.\nIf no data is provided, all reward summaries will be returned, grouped by epochs, market IDs, asset IDs and reward type.",
              "requestType": "ListEpochRewardSummariesRequest",
              "requestLongType": "ListEpochRewardSummariesRequest",
              "requestFullType": "datanode.api.v2.ListEpochRewardSummariesRequest",
              "requestStreaming": false,
              "responseType": "ListEpochRewardSummariesResponse",
              "responseLongType": "ListEpochRewardSummariesResponse",
              "responseFullType": "datanode.api.v2.ListEpochRewardSummariesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetDeposit",
              "description": "Get deposit\n\nGet a deposit by its ID",
              "requestType": "GetDepositRequest",
              "requestLongType": "GetDepositRequest",
              "requestFullType": "datanode.api.v2.GetDepositRequest",
              "requestStreaming": false,
              "responseType": "GetDepositResponse",
              "responseLongType": "GetDepositResponse",
              "responseFullType": "datanode.api.v2.GetDepositResponse",
              "responseStreaming": false
            },
            {
              "name": "ListDeposits",
              "description": "List deposits\n\nGet a list of deposits for a given party.\nIf a date range is provided, filtering will be based on the last time the deposit\nhas been updated in Vega time.",
              "requestType": "ListDepositsRequest",
              "requestLongType": "ListDepositsRequest",
              "requestFullType": "datanode.api.v2.ListDepositsRequest",
              "requestStreaming": false,
              "responseType": "ListDepositsResponse",
              "responseLongType": "ListDepositsResponse",
              "responseFullType": "datanode.api.v2.ListDepositsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetWithdrawal",
              "description": "Get withdrawal\n\nGet a withdrawal by its ID. A withdrawal's ID will be the SHA3-256 hash of the signature that the withdrawal was submitted with",
              "requestType": "GetWithdrawalRequest",
              "requestLongType": "GetWithdrawalRequest",
              "requestFullType": "datanode.api.v2.GetWithdrawalRequest",
              "requestStreaming": false,
              "responseType": "GetWithdrawalResponse",
              "responseLongType": "GetWithdrawalResponse",
              "responseFullType": "datanode.api.v2.GetWithdrawalResponse",
              "responseStreaming": false
            },
            {
              "name": "ListWithdrawals",
              "description": "List withdrawals\n\nGet a list of withdrawals for a given party",
              "requestType": "ListWithdrawalsRequest",
              "requestLongType": "ListWithdrawalsRequest",
              "requestFullType": "datanode.api.v2.ListWithdrawalsRequest",
              "requestStreaming": false,
              "responseType": "ListWithdrawalsResponse",
              "responseLongType": "ListWithdrawalsResponse",
              "responseFullType": "datanode.api.v2.ListWithdrawalsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetAsset",
              "description": "Get asset\n\nGet a single asset using its ID. Use the assets list query to get an asset's ID",
              "requestType": "GetAssetRequest",
              "requestLongType": "GetAssetRequest",
              "requestFullType": "datanode.api.v2.GetAssetRequest",
              "requestStreaming": false,
              "responseType": "GetAssetResponse",
              "responseLongType": "GetAssetResponse",
              "responseFullType": "datanode.api.v2.GetAssetResponse",
              "responseStreaming": false
            },
            {
              "name": "ListAssets",
              "description": "List assets\n\nGet a list of assets available on the Vega network",
              "requestType": "ListAssetsRequest",
              "requestLongType": "ListAssetsRequest",
              "requestFullType": "datanode.api.v2.ListAssetsRequest",
              "requestStreaming": false,
              "responseType": "ListAssetsResponse",
              "responseLongType": "ListAssetsResponse",
              "responseFullType": "datanode.api.v2.ListAssetsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListLiquidityProvisions",
              "description": "List liquidity provisions\n\nDEPRECATED: When a liquidity provider amends a provision, and it's accepted by the network, the pending\nprovision is returned by the API instead of the provision that is currently active.\nUse ListAllLiquidityProvisions instead.",
              "requestType": "ListLiquidityProvisionsRequest",
              "requestLongType": "ListLiquidityProvisionsRequest",
              "requestFullType": "datanode.api.v2.ListLiquidityProvisionsRequest",
              "requestStreaming": false,
              "responseType": "ListLiquidityProvisionsResponse",
              "responseLongType": "ListLiquidityProvisionsResponse",
              "responseFullType": "datanode.api.v2.ListLiquidityProvisionsResponse",
              "responseStreaming": false,
              "options": {
                "deprecated": true
              }
            },
            {
              "name": "ListAllLiquidityProvisions",
              "description": "List liquidity provisions\n\nGet a list of liquidity provisions for a given market. This API returns a current and pending liquidity provision\nin the event that a provision has been updated by the provider but the updated provision will not be active until the next epoch.",
              "requestType": "ListAllLiquidityProvisionsRequest",
              "requestLongType": "ListAllLiquidityProvisionsRequest",
              "requestFullType": "datanode.api.v2.ListAllLiquidityProvisionsRequest",
              "requestStreaming": false,
              "responseType": "ListAllLiquidityProvisionsResponse",
              "responseLongType": "ListAllLiquidityProvisionsResponse",
              "responseFullType": "datanode.api.v2.ListAllLiquidityProvisionsResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveLiquidityProvisions",
              "description": "Observe liquidity provisions\n\nSubscribe to a stream of liquidity provision events for a given market and party",
              "requestType": "ObserveLiquidityProvisionsRequest",
              "requestLongType": "ObserveLiquidityProvisionsRequest",
              "requestFullType": "datanode.api.v2.ObserveLiquidityProvisionsRequest",
              "requestStreaming": false,
              "responseType": "ObserveLiquidityProvisionsResponse",
              "responseLongType": "ObserveLiquidityProvisionsResponse",
              "responseFullType": "datanode.api.v2.ObserveLiquidityProvisionsResponse",
              "responseStreaming": true
            },
            {
              "name": "ListLiquidityProviders",
              "description": "List liquidity providers data\n\nList information about active liquidity provider(s) for a given market, or liquidity provider's party ID.",
              "requestType": "ListLiquidityProvidersRequest",
              "requestLongType": "ListLiquidityProvidersRequest",
              "requestFullType": "datanode.api.v2.ListLiquidityProvidersRequest",
              "requestStreaming": false,
              "responseType": "ListLiquidityProvidersResponse",
              "responseLongType": "ListLiquidityProvidersResponse",
              "responseFullType": "datanode.api.v2.ListLiquidityProvidersResponse",
              "responseStreaming": false
            },
            {
              "name": "ListPaidLiquidityFees",
              "description": "List paid liquidity fees data\n\nList information about paid liquidity fees for a given market, or asset ID.",
              "requestType": "ListPaidLiquidityFeesRequest",
              "requestLongType": "ListPaidLiquidityFeesRequest",
              "requestFullType": "datanode.api.v2.ListPaidLiquidityFeesRequest",
              "requestStreaming": false,
              "responseType": "ListPaidLiquidityFeesResponse",
              "responseLongType": "ListPaidLiquidityFeesResponse",
              "responseFullType": "datanode.api.v2.ListPaidLiquidityFeesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetGovernanceData",
              "description": "Get governance data\n\nGet a single proposal's details either by proposal ID or by reference",
              "requestType": "GetGovernanceDataRequest",
              "requestLongType": "GetGovernanceDataRequest",
              "requestFullType": "datanode.api.v2.GetGovernanceDataRequest",
              "requestStreaming": false,
              "responseType": "GetGovernanceDataResponse",
              "responseLongType": "GetGovernanceDataResponse",
              "responseFullType": "datanode.api.v2.GetGovernanceDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ListGovernanceData",
              "description": "List governance data\n\nGet a list of proposals",
              "requestType": "ListGovernanceDataRequest",
              "requestLongType": "ListGovernanceDataRequest",
              "requestFullType": "datanode.api.v2.ListGovernanceDataRequest",
              "requestStreaming": false,
              "responseType": "ListGovernanceDataResponse",
              "responseLongType": "ListGovernanceDataResponse",
              "responseFullType": "datanode.api.v2.ListGovernanceDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveGovernance",
              "description": "Observe governance\n\nSubscribe to a stream of updates to governance proposals",
              "requestType": "ObserveGovernanceRequest",
              "requestLongType": "ObserveGovernanceRequest",
              "requestFullType": "datanode.api.v2.ObserveGovernanceRequest",
              "requestStreaming": false,
              "responseType": "ObserveGovernanceResponse",
              "responseLongType": "ObserveGovernanceResponse",
              "responseFullType": "datanode.api.v2.ObserveGovernanceResponse",
              "responseStreaming": true
            },
            {
              "name": "ListDelegations",
              "description": "List delegations\n\nGet a list of the token delegations on the network",
              "requestType": "ListDelegationsRequest",
              "requestLongType": "ListDelegationsRequest",
              "requestFullType": "datanode.api.v2.ListDelegationsRequest",
              "requestStreaming": false,
              "responseType": "ListDelegationsResponse",
              "responseLongType": "ListDelegationsResponse",
              "responseFullType": "datanode.api.v2.ListDelegationsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNetworkData",
              "description": "Get network data\n\nGet data regarding the nodes of the network",
              "requestType": "GetNetworkDataRequest",
              "requestLongType": "GetNetworkDataRequest",
              "requestFullType": "datanode.api.v2.GetNetworkDataRequest",
              "requestStreaming": false,
              "responseType": "GetNetworkDataResponse",
              "responseLongType": "GetNetworkDataResponse",
              "responseFullType": "datanode.api.v2.GetNetworkDataResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNode",
              "description": "Get node\n\nGet information about a given node",
              "requestType": "GetNodeRequest",
              "requestLongType": "GetNodeRequest",
              "requestFullType": "datanode.api.v2.GetNodeRequest",
              "requestStreaming": false,
              "responseType": "GetNodeResponse",
              "responseLongType": "GetNodeResponse",
              "responseFullType": "datanode.api.v2.GetNodeResponse",
              "responseStreaming": false
            },
            {
              "name": "ListNodes",
              "description": "List nodes\n\nGet a list of the nodes on the network along with the related information.",
              "requestType": "ListNodesRequest",
              "requestLongType": "ListNodesRequest",
              "requestFullType": "datanode.api.v2.ListNodesRequest",
              "requestStreaming": false,
              "responseType": "ListNodesResponse",
              "responseLongType": "ListNodesResponse",
              "responseFullType": "datanode.api.v2.ListNodesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListNodeSignatures",
              "description": "List node signatures\n\nGet a list of aggregate signatures from all the nodes of the network",
              "requestType": "ListNodeSignaturesRequest",
              "requestLongType": "ListNodeSignaturesRequest",
              "requestFullType": "datanode.api.v2.ListNodeSignaturesRequest",
              "requestStreaming": false,
              "responseType": "ListNodeSignaturesResponse",
              "responseLongType": "ListNodeSignaturesResponse",
              "responseFullType": "datanode.api.v2.ListNodeSignaturesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetEpoch",
              "description": "Get epoch\n\nGet data for a specific epoch, if ID is omitted, it retrieves the current epoch",
              "requestType": "GetEpochRequest",
              "requestLongType": "GetEpochRequest",
              "requestFullType": "datanode.api.v2.GetEpochRequest",
              "requestStreaming": false,
              "responseType": "GetEpochResponse",
              "responseLongType": "GetEpochResponse",
              "responseFullType": "datanode.api.v2.GetEpochResponse",
              "responseStreaming": false
            },
            {
              "name": "EstimateFee",
              "description": "Estimate fee\n\nEstimate the fee that would be incurred for submitting an order\nwith the specified price and size on the market.",
              "requestType": "EstimateFeeRequest",
              "requestLongType": "EstimateFeeRequest",
              "requestFullType": "datanode.api.v2.EstimateFeeRequest",
              "requestStreaming": false,
              "responseType": "EstimateFeeResponse",
              "responseLongType": "EstimateFeeResponse",
              "responseFullType": "datanode.api.v2.EstimateFeeResponse",
              "responseStreaming": false
            },
            {
              "name": "EstimateMargin",
              "description": "Estimate margin\n\nEstimate the margin that would be required for submitting this order",
              "requestType": "EstimateMarginRequest",
              "requestLongType": "EstimateMarginRequest",
              "requestFullType": "datanode.api.v2.EstimateMarginRequest",
              "requestStreaming": false,
              "responseType": "EstimateMarginResponse",
              "responseLongType": "EstimateMarginResponse",
              "responseFullType": "datanode.api.v2.EstimateMarginResponse",
              "responseStreaming": false
            },
            {
              "name": "EstimatePosition",
              "description": "Estimate position\n\nEstimate the margin that would be required for maintaining the specified position. Margin estimates are scaled to asset decimal places.\nIf the optional collateral available argument is supplied, the response also contains the estimate of the liquidation price.\nLiquidation price estimates are scaled to asset decimal places by default, unless an argument to scale to market decimal places is specified in the request.",
              "requestType": "EstimatePositionRequest",
              "requestLongType": "EstimatePositionRequest",
              "requestFullType": "datanode.api.v2.EstimatePositionRequest",
              "requestStreaming": false,
              "responseType": "EstimatePositionResponse",
              "responseLongType": "EstimatePositionResponse",
              "responseFullType": "datanode.api.v2.EstimatePositionResponse",
              "responseStreaming": false
            },
            {
              "name": "ListNetworkParameters",
              "description": "List network parameters\n\nGet a list of the network parameter keys and their values",
              "requestType": "ListNetworkParametersRequest",
              "requestLongType": "ListNetworkParametersRequest",
              "requestFullType": "datanode.api.v2.ListNetworkParametersRequest",
              "requestStreaming": false,
              "responseType": "ListNetworkParametersResponse",
              "responseLongType": "ListNetworkParametersResponse",
              "responseFullType": "datanode.api.v2.ListNetworkParametersResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNetworkParameter",
              "description": "Get network parameter\n\nGet a network parameter's value by its key",
              "requestType": "GetNetworkParameterRequest",
              "requestLongType": "GetNetworkParameterRequest",
              "requestFullType": "datanode.api.v2.GetNetworkParameterRequest",
              "requestStreaming": false,
              "responseType": "GetNetworkParameterResponse",
              "responseLongType": "GetNetworkParameterResponse",
              "responseFullType": "datanode.api.v2.GetNetworkParameterResponse",
              "responseStreaming": false
            },
            {
              "name": "ListCheckpoints",
              "description": "List checkpoints\n\nGet a list of information about checkpoints generated by the network",
              "requestType": "ListCheckpointsRequest",
              "requestLongType": "ListCheckpointsRequest",
              "requestFullType": "datanode.api.v2.ListCheckpointsRequest",
              "requestStreaming": false,
              "responseType": "ListCheckpointsResponse",
              "responseLongType": "ListCheckpointsResponse",
              "responseFullType": "datanode.api.v2.ListCheckpointsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetStake",
              "description": "Get stake\n\nGet staking information for a given party",
              "requestType": "GetStakeRequest",
              "requestLongType": "GetStakeRequest",
              "requestFullType": "datanode.api.v2.GetStakeRequest",
              "requestStreaming": false,
              "responseType": "GetStakeResponse",
              "responseLongType": "GetStakeResponse",
              "responseFullType": "datanode.api.v2.GetStakeResponse",
              "responseStreaming": false
            },
            {
              "name": "GetRiskFactors",
              "description": "Get risk factors\n\nGet risk factor data for a given market",
              "requestType": "GetRiskFactorsRequest",
              "requestLongType": "GetRiskFactorsRequest",
              "requestFullType": "datanode.api.v2.GetRiskFactorsRequest",
              "requestStreaming": false,
              "responseType": "GetRiskFactorsResponse",
              "responseLongType": "GetRiskFactorsResponse",
              "responseFullType": "datanode.api.v2.GetRiskFactorsResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveEventBus",
              "description": "Observe event bus\n\nSubscribe to a stream of events from the core",
              "requestType": "ObserveEventBusRequest",
              "requestLongType": "ObserveEventBusRequest",
              "requestFullType": "datanode.api.v2.ObserveEventBusRequest",
              "requestStreaming": true,
              "responseType": "ObserveEventBusResponse",
              "responseLongType": "ObserveEventBusResponse",
              "responseFullType": "datanode.api.v2.ObserveEventBusResponse",
              "responseStreaming": true
            },
            {
              "name": "ObserveLedgerMovements",
              "description": "Observe ledger movements\n\nSubscribe to a stream of transfer responses",
              "requestType": "ObserveLedgerMovementsRequest",
              "requestLongType": "ObserveLedgerMovementsRequest",
              "requestFullType": "datanode.api.v2.ObserveLedgerMovementsRequest",
              "requestStreaming": false,
              "responseType": "ObserveLedgerMovementsResponse",
              "responseLongType": "ObserveLedgerMovementsResponse",
              "responseFullType": "datanode.api.v2.ObserveLedgerMovementsResponse",
              "responseStreaming": true
            },
            {
              "name": "ListKeyRotations",
              "description": "List key rotations\n\nGet a list of information about Vega key rotations that have been performed by validator nodes",
              "requestType": "ListKeyRotationsRequest",
              "requestLongType": "ListKeyRotationsRequest",
              "requestFullType": "datanode.api.v2.ListKeyRotationsRequest",
              "requestStreaming": false,
              "responseType": "ListKeyRotationsResponse",
              "responseLongType": "ListKeyRotationsResponse",
              "responseFullType": "datanode.api.v2.ListKeyRotationsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListEthereumKeyRotations",
              "description": "List Ethereum key rotations\n\nGet a list of information about Ethereum key rotations that have been performed by validator nodes",
              "requestType": "ListEthereumKeyRotationsRequest",
              "requestLongType": "ListEthereumKeyRotationsRequest",
              "requestFullType": "datanode.api.v2.ListEthereumKeyRotationsRequest",
              "requestStreaming": false,
              "responseType": "ListEthereumKeyRotationsResponse",
              "responseLongType": "ListEthereumKeyRotationsResponse",
              "responseFullType": "datanode.api.v2.ListEthereumKeyRotationsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetVegaTime",
              "description": "Get Vega time\n\nGet the current time of the network in Unix nanoseconds",
              "requestType": "GetVegaTimeRequest",
              "requestLongType": "GetVegaTimeRequest",
              "requestFullType": "datanode.api.v2.GetVegaTimeRequest",
              "requestStreaming": false,
              "responseType": "GetVegaTimeResponse",
              "responseLongType": "GetVegaTimeResponse",
              "responseFullType": "datanode.api.v2.GetVegaTimeResponse",
              "responseStreaming": false
            },
            {
              "name": "GetProtocolUpgradeStatus",
              "description": "Get protocol upgrade status\n\nGet status of a protocol upgrade",
              "requestType": "GetProtocolUpgradeStatusRequest",
              "requestLongType": "GetProtocolUpgradeStatusRequest",
              "requestFullType": "datanode.api.v2.GetProtocolUpgradeStatusRequest",
              "requestStreaming": false,
              "responseType": "GetProtocolUpgradeStatusResponse",
              "responseLongType": "GetProtocolUpgradeStatusResponse",
              "responseFullType": "datanode.api.v2.GetProtocolUpgradeStatusResponse",
              "responseStreaming": false
            },
            {
              "name": "ListProtocolUpgradeProposals",
              "description": "List protocol upgrade proposals\n\nGet a list of protocol upgrade proposals, optionally filtering on status or approver.",
              "requestType": "ListProtocolUpgradeProposalsRequest",
              "requestLongType": "ListProtocolUpgradeProposalsRequest",
              "requestFullType": "datanode.api.v2.ListProtocolUpgradeProposalsRequest",
              "requestStreaming": false,
              "responseType": "ListProtocolUpgradeProposalsResponse",
              "responseLongType": "ListProtocolUpgradeProposalsResponse",
              "responseFullType": "datanode.api.v2.ListProtocolUpgradeProposalsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListCoreSnapshots",
              "description": "List snapshots\n\nGet a list of core snapshots taken",
              "requestType": "ListCoreSnapshotsRequest",
              "requestLongType": "ListCoreSnapshotsRequest",
              "requestFullType": "datanode.api.v2.ListCoreSnapshotsRequest",
              "requestStreaming": false,
              "responseType": "ListCoreSnapshotsResponse",
              "responseLongType": "ListCoreSnapshotsResponse",
              "responseFullType": "datanode.api.v2.ListCoreSnapshotsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetMostRecentNetworkHistorySegment",
              "description": "Get most recent network history segment\n\nGet the network's most recently history segment",
              "requestType": "GetMostRecentNetworkHistorySegmentRequest",
              "requestLongType": "GetMostRecentNetworkHistorySegmentRequest",
              "requestFullType": "datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest",
              "requestStreaming": false,
              "responseType": "GetMostRecentNetworkHistorySegmentResponse",
              "responseLongType": "GetMostRecentNetworkHistorySegmentResponse",
              "responseFullType": "datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse",
              "responseStreaming": false
            },
            {
              "name": "ListAllNetworkHistorySegments",
              "description": "List all network history segments\n\nGet a list of all history segments stored by the data node currently connected to",
              "requestType": "ListAllNetworkHistorySegmentsRequest",
              "requestLongType": "ListAllNetworkHistorySegmentsRequest",
              "requestFullType": "datanode.api.v2.ListAllNetworkHistorySegmentsRequest",
              "requestStreaming": false,
              "responseType": "ListAllNetworkHistorySegmentsResponse",
              "responseLongType": "ListAllNetworkHistorySegmentsResponse",
              "responseFullType": "datanode.api.v2.ListAllNetworkHistorySegmentsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetActiveNetworkHistoryPeerAddresses",
              "description": "Get active network history peer addresses\n\nGet a list of the addresses of all active network history peers",
              "requestType": "GetActiveNetworkHistoryPeerAddressesRequest",
              "requestLongType": "GetActiveNetworkHistoryPeerAddressesRequest",
              "requestFullType": "datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest",
              "requestStreaming": false,
              "responseType": "GetActiveNetworkHistoryPeerAddressesResponse",
              "responseLongType": "GetActiveNetworkHistoryPeerAddressesResponse",
              "responseFullType": "datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNetworkHistoryStatus",
              "description": "Network history status\n\nGet information about the current state of network history's IPFS swarm",
              "requestType": "GetNetworkHistoryStatusRequest",
              "requestLongType": "GetNetworkHistoryStatusRequest",
              "requestFullType": "datanode.api.v2.GetNetworkHistoryStatusRequest",
              "requestStreaming": false,
              "responseType": "GetNetworkHistoryStatusResponse",
              "responseLongType": "GetNetworkHistoryStatusResponse",
              "responseFullType": "datanode.api.v2.GetNetworkHistoryStatusResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNetworkHistoryBootstrapPeers",
              "description": "Network history bootstrap peers\n\nGet a list of IPFS peers that can be used to initialise a new data node with network history",
              "requestType": "GetNetworkHistoryBootstrapPeersRequest",
              "requestLongType": "GetNetworkHistoryBootstrapPeersRequest",
              "requestFullType": "datanode.api.v2.GetNetworkHistoryBootstrapPeersRequest",
              "requestStreaming": false,
              "responseType": "GetNetworkHistoryBootstrapPeersResponse",
              "responseLongType": "GetNetworkHistoryBootstrapPeersResponse",
              "responseFullType": "datanode.api.v2.GetNetworkHistoryBootstrapPeersResponse",
              "responseStreaming": false
            },
            {
              "name": "ListEntities",
              "description": "List entities\n\nGet a list of all entities created by transaction hash",
              "requestType": "ListEntitiesRequest",
              "requestLongType": "ListEntitiesRequest",
              "requestFullType": "datanode.api.v2.ListEntitiesRequest",
              "requestStreaming": false,
              "responseType": "ListEntitiesResponse",
              "responseLongType": "ListEntitiesResponse",
              "responseFullType": "datanode.api.v2.ListEntitiesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListFundingPeriods",
              "description": "List funding periods\n\nGet a list of funding periods for a perpetual market.",
              "requestType": "ListFundingPeriodsRequest",
              "requestLongType": "ListFundingPeriodsRequest",
              "requestFullType": "datanode.api.v2.ListFundingPeriodsRequest",
              "requestStreaming": false,
              "responseType": "ListFundingPeriodsResponse",
              "responseLongType": "ListFundingPeriodsResponse",
              "responseFullType": "datanode.api.v2.ListFundingPeriodsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListFundingPeriodDataPoints",
              "description": "List funding period data points\n\nGet a list of data points for a perpetual market's funding periods.",
              "requestType": "ListFundingPeriodDataPointsRequest",
              "requestLongType": "ListFundingPeriodDataPointsRequest",
              "requestFullType": "datanode.api.v2.ListFundingPeriodDataPointsRequest",
              "requestStreaming": false,
              "responseType": "ListFundingPeriodDataPointsResponse",
              "responseLongType": "ListFundingPeriodDataPointsResponse",
              "responseFullType": "datanode.api.v2.ListFundingPeriodDataPointsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListFundingPayments",
              "description": "List funding payments\n\nGet a list of funding payment gains and losses for a party as a result of their position on a perpetual market when a funding\nperiod ends.",
              "requestType": "ListFundingPaymentsRequest",
              "requestLongType": "ListFundingPaymentsRequest",
              "requestFullType": "datanode.api.v2.ListFundingPaymentsRequest",
              "requestStreaming": false,
              "responseType": "ListFundingPaymentsResponse",
              "responseLongType": "ListFundingPaymentsResponse",
              "responseFullType": "datanode.api.v2.ListFundingPaymentsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetPartyActivityStreak",
              "description": "List party activity streak\n\nGet a party's activity across epochs.",
              "requestType": "GetPartyActivityStreakRequest",
              "requestLongType": "GetPartyActivityStreakRequest",
              "requestFullType": "datanode.api.v2.GetPartyActivityStreakRequest",
              "requestStreaming": false,
              "responseType": "GetPartyActivityStreakResponse",
              "responseLongType": "GetPartyActivityStreakResponse",
              "responseFullType": "datanode.api.v2.GetPartyActivityStreakResponse",
              "responseStreaming": false
            },
            {
              "name": "GetCurrentReferralProgram",
              "description": "Get current referral program\n\nGet the current referral program for the network. This program may not be active if it has ended\nand has not been replaced by another.",
              "requestType": "GetCurrentReferralProgramRequest",
              "requestLongType": "GetCurrentReferralProgramRequest",
              "requestFullType": "datanode.api.v2.GetCurrentReferralProgramRequest",
              "requestStreaming": false,
              "responseType": "GetCurrentReferralProgramResponse",
              "responseLongType": "GetCurrentReferralProgramResponse",
              "responseFullType": "datanode.api.v2.GetCurrentReferralProgramResponse",
              "responseStreaming": false
            },
            {
              "name": "ListReferralSets",
              "description": "List referral sets\n\nList all referral sets, or a specific referral set if you know its ID.",
              "requestType": "ListReferralSetsRequest",
              "requestLongType": "ListReferralSetsRequest",
              "requestFullType": "datanode.api.v2.ListReferralSetsRequest",
              "requestStreaming": false,
              "responseType": "ListReferralSetsResponse",
              "responseLongType": "ListReferralSetsResponse",
              "responseFullType": "datanode.api.v2.ListReferralSetsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListReferralSetReferees",
              "description": "List referral set referees\n\nList all referees that belong to a referral set.",
              "requestType": "ListReferralSetRefereesRequest",
              "requestLongType": "ListReferralSetRefereesRequest",
              "requestFullType": "datanode.api.v2.ListReferralSetRefereesRequest",
              "requestStreaming": false,
              "responseType": "ListReferralSetRefereesResponse",
              "responseLongType": "ListReferralSetRefereesResponse",
              "responseFullType": "datanode.api.v2.ListReferralSetRefereesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetReferralSetStats",
              "description": "Get referral set statistics\n\nGet the total taker volume, and each referee's taker volume and, reward and discount factors for a referral set\nat the latest or a specific epoch. You can also optionally filter for a specific referee's statistics.",
              "requestType": "GetReferralSetStatsRequest",
              "requestLongType": "GetReferralSetStatsRequest",
              "requestFullType": "datanode.api.v2.GetReferralSetStatsRequest",
              "requestStreaming": false,
              "responseType": "GetReferralSetStatsResponse",
              "responseLongType": "GetReferralSetStatsResponse",
              "responseFullType": "datanode.api.v2.GetReferralSetStatsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListTeams",
              "description": "List teams\n\nGet a list of all teams, or for a specific team by using team ID, or party ID of a referrer or referee",
              "requestType": "ListTeamsRequest",
              "requestLongType": "ListTeamsRequest",
              "requestFullType": "datanode.api.v2.ListTeamsRequest",
              "requestStreaming": false,
              "responseType": "ListTeamsResponse",
              "responseLongType": "ListTeamsResponse",
              "responseFullType": "datanode.api.v2.ListTeamsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListTeamReferees",
              "description": "List team referees\n\nGet a list of all referees for a given team ID",
              "requestType": "ListTeamRefereesRequest",
              "requestLongType": "ListTeamRefereesRequest",
              "requestFullType": "datanode.api.v2.ListTeamRefereesRequest",
              "requestStreaming": false,
              "responseType": "ListTeamRefereesResponse",
              "responseLongType": "ListTeamRefereesResponse",
              "responseFullType": "datanode.api.v2.ListTeamRefereesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListTeamRefereeHistory",
              "description": "List referee team history\n\nGet a list of a referee's team history, i.e. the teams that a referee has been a member of and transferred from/to.",
              "requestType": "ListTeamRefereeHistoryRequest",
              "requestLongType": "ListTeamRefereeHistoryRequest",
              "requestFullType": "datanode.api.v2.ListTeamRefereeHistoryRequest",
              "requestStreaming": false,
              "responseType": "ListTeamRefereeHistoryResponse",
              "responseLongType": "ListTeamRefereeHistoryResponse",
              "responseFullType": "datanode.api.v2.ListTeamRefereeHistoryResponse",
              "responseStreaming": false
            },
            {
              "name": "GetFeesStats",
              "description": "Get fees statistics\n\nGet accumulated fees, rewards, and applied discount information. Either a market or an asset must be supplied as filter.",
              "requestType": "GetFeesStatsRequest",
              "requestLongType": "GetFeesStatsRequest",
              "requestFullType": "datanode.api.v2.GetFeesStatsRequest",
              "requestStreaming": false,
              "responseType": "GetFeesStatsResponse",
              "responseLongType": "GetFeesStatsResponse",
              "responseFullType": "datanode.api.v2.GetFeesStatsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetFeesStatsForParty",
              "description": "Get fees statistics for a party\n\nGet accumulated fees, rewards, and applied discount information. A party ID must be supplied as filter.",
              "requestType": "GetFeesStatsForPartyRequest",
              "requestLongType": "GetFeesStatsForPartyRequest",
              "requestFullType": "datanode.api.v2.GetFeesStatsForPartyRequest",
              "requestStreaming": false,
              "responseType": "GetFeesStatsForPartyResponse",
              "responseLongType": "GetFeesStatsForPartyResponse",
              "responseFullType": "datanode.api.v2.GetFeesStatsForPartyResponse",
              "responseStreaming": false
            },
            {
              "name": "GetCurrentVolumeDiscountProgram",
              "description": "Get current volume discount program\n\nGet the current volume discount program for the network. This program may not be active if it has ended\nand has not been replaced by another.",
              "requestType": "GetCurrentVolumeDiscountProgramRequest",
              "requestLongType": "GetCurrentVolumeDiscountProgramRequest",
              "requestFullType": "datanode.api.v2.GetCurrentVolumeDiscountProgramRequest",
              "requestStreaming": false,
              "responseType": "GetCurrentVolumeDiscountProgramResponse",
              "responseLongType": "GetCurrentVolumeDiscountProgramResponse",
              "responseFullType": "datanode.api.v2.GetCurrentVolumeDiscountProgramResponse",
              "responseStreaming": false
            },
            {
              "name": "GetVolumeDiscountStats",
              "description": "Get volume discount statistics\n\nGet the information about a party's running traded volume, and the discount factor it earns them.",
              "requestType": "GetVolumeDiscountStatsRequest",
              "requestLongType": "GetVolumeDiscountStatsRequest",
              "requestFullType": "datanode.api.v2.GetVolumeDiscountStatsRequest",
              "requestStreaming": false,
              "responseType": "GetVolumeDiscountStatsResponse",
              "responseLongType": "GetVolumeDiscountStatsResponse",
              "responseFullType": "datanode.api.v2.GetVolumeDiscountStatsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetVestingBalancesSummary",
              "description": "Get vesting balances summary\n\nGet information about a party's vesting and locked balances",
              "requestType": "GetVestingBalancesSummaryRequest",
              "requestLongType": "GetVestingBalancesSummaryRequest",
              "requestFullType": "datanode.api.v2.GetVestingBalancesSummaryRequest",
              "requestStreaming": false,
              "responseType": "GetVestingBalancesSummaryResponse",
              "responseLongType": "GetVestingBalancesSummaryResponse",
              "responseFullType": "datanode.api.v2.GetVestingBalancesSummaryResponse",
              "responseStreaming": false
            },
            {
              "name": "GetPartyVestingStats",
              "description": "Get vesting balance statistics\n\nGet information about a party's vesting rewards",
              "requestType": "GetPartyVestingStatsRequest",
              "requestLongType": "GetPartyVestingStatsRequest",
              "requestFullType": "datanode.api.v2.GetPartyVestingStatsRequest",
              "requestStreaming": false,
              "responseType": "GetPartyVestingStatsResponse",
              "responseLongType": "GetPartyVestingStatsResponse",
              "responseFullType": "datanode.api.v2.GetPartyVestingStatsResponse",
              "responseStreaming": false
            },
            {
              "name": "ExportNetworkHistory",
              "description": "Export network history as CSV\n\nExport CSV table data from network history between two block heights.\n\nThe requested block heights must fall on network history segment boundaries, which can\nbe discovered by calling the API to list all network history segments. By default\nsegments contain 1000 blocks. In that case ranges such as (1, 1000), (1001, 2000), (1, 3000)\nwould all fall on segment boundaries and be valid.\n\nThe generated CSV file is compressed into a ZIP file and returned, with the file name\nin the following format: `[chain id]-[table name]-[start block]-[end block].zip`\n\nIn gRPC, results are returned in a chunked stream of base64 encoded data.\n\nThrough the REST gateway, the base64 data chunks are decoded and streamed as a\n`content-type: application/zip` HTTP response.\n\nThe CSV exported data uses a comma as a DELIMITER between fields, and \" for QUOTE-ing fields.\n\nIf a value contains any of: DELIMITER, QUOTE, carriage return, or line feed then the whole\nvalue is prefixed and suffixed by the QUOTE character and any occurrence within\nthe value of a QUOTE character preceded by another QUOTE.\n\nA NULL is output as the NULL parameter string and is not quoted, while a non-NULL value\nmatching the NULL parameter string is quoted.\n\nFor example, with the default settings, a NULL is written as an unquoted empty string,\nwhile an empty string data value is written with double quotes.\n\nNote that CSV files produced may contain quoted values containing embedded carriage returns and line feeds.\nThus the files are not strictly one line per table row like text-format files.\n\nThe first row of the CSV file is a header that describes the contents of each column\nin subsequent rows.\n\nUsually the ZIP file will contain only a single CSV file. However it is possible that\nthe (from_block, to_block) request spans over a range of blocks in which the underlying\nschema of the database changes. For example, a column may have been added, removed, or renamed.\n\nIf this happens, the CSV file will be split at the point of the schema change and the zip\nfile will contain multiple CSV files, with a potentially different set of headers. The\n'version' number of the database schema is part of the in the CSV filename:\n\n `[chain id]-[table name]-[schema version]-[start block]-[end block].zip`\n\nFor example, a zip file might be called mainnet-sometable-000001-003000.zip\n\nAnd contain two CSV files: `mainnet-sometable-1-000001-002000.csv`:\n\ntimestamp, value\n1, foo\n2, bar\n\nAnd `mainnet-sometable-2-002001-003000.csv`:\n\ntimestamp, value, extra_value\n3, baz, apple\n\nIt is worth noting that the schema will not change within a single network history segment.\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME\nbuf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE",
              "requestType": "ExportNetworkHistoryRequest",
              "requestLongType": "ExportNetworkHistoryRequest",
              "requestFullType": "datanode.api.v2.ExportNetworkHistoryRequest",
              "requestStreaming": false,
              "responseType": "HttpBody",
              "responseLongType": ".google.api.HttpBody",
              "responseFullType": "google.api.HttpBody",
              "responseStreaming": true
            },
            {
              "name": "Ping",
              "description": "Ping\n\nPing the data node",
              "requestType": "PingRequest",
              "requestLongType": "PingRequest",
              "requestFullType": "datanode.api.v2.PingRequest",
              "requestStreaming": false,
              "responseType": "PingResponse",
              "responseLongType": "PingResponse",
              "responseFullType": "datanode.api.v2.PingResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "vega/api/v1/core.proto",
      "description": "",
      "package": "vega.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "Type",
          "longName": "SubmitRawTransactionRequest.Type",
          "fullName": "vega.api.v1.SubmitRawTransactionRequest.Type",
          "description": "Blockchain transaction type",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_ASYNC",
              "number": "1",
              "description": "Transaction will be submitted without waiting for response"
            },
            {
              "name": "TYPE_SYNC",
              "number": "2",
              "description": "Transaction will be submitted, and blocking until the\ntendermint mempool returns a response"
            },
            {
              "name": "TYPE_COMMIT",
              "number": "3",
              "description": "Transaction will be submitted, and blocking until the tendermint\nnetwork has committed it into a block. Used only for debugging,\nnot for submitting transactions"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "SubmitTransactionRequest.Type",
          "fullName": "vega.api.v1.SubmitTransactionRequest.Type",
          "description": "Blockchain transaction type.",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_ASYNC",
              "number": "1",
              "description": "Transaction will be submitted without waiting for a response."
            },
            {
              "name": "TYPE_SYNC",
              "number": "2",
              "description": "Transaction will be submitted, and blocking until the mempool returns a response."
            },
            {
              "name": "TYPE_COMMIT",
              "number": "3",
              "description": "Transaction will be submitted, and blocking until the network has committed it into a block.\nUsed only for debugging local network, not for submitting transactions."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "CheckRawTransactionRequest",
          "longName": "CheckRawTransactionRequest",
          "fullName": "vega.api.v1.CheckRawTransactionRequest",
          "description": "Request for checking a version agnostic transaction on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx",
              "description": "Bundle of signed payload and signature marshalled into a byte array, to form a transaction that would be submitted to the Vega blockchain",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckRawTransactionResponse",
          "longName": "CheckRawTransactionResponse",
          "fullName": "vega.api.v1.CheckRawTransactionResponse",
          "description": "Response for checking a version agnostic transaction on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Whether or not the transaction passed the submission checks.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Error code to indicate the category of failure if the transaction was not successfully submitted.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "gas_wanted",
              "description": "Amount of space in a block that the transaction will fill. This does not relate to any monetary cost for submitting the transaction.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "gas_used",
              "description": "Unused.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "Further details for why the transaction was not successfully checked.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log",
              "description": "Further details for the underlying consensus layer of the result of the transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info",
              "description": "Unused",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckTransactionRequest",
          "longName": "CheckTransactionRequest",
          "fullName": "vega.api.v1.CheckTransactionRequest",
          "description": "Request for checking a transaction v2 on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx",
              "description": "Transaction containing a command to be checked on the network, and not added to the chain's mempool.",
              "label": "",
              "type": "Transaction",
              "longType": "vega.commands.v1.Transaction",
              "fullType": "vega.commands.v1.Transaction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckTransactionResponse",
          "longName": "CheckTransactionResponse",
          "fullName": "vega.api.v1.CheckTransactionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Whether or not the transaction passed the submission checks.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Error code to indicate the category of failure if the transaction was not successfully checked.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "gas_wanted",
              "description": "Amount of space in a block that the transaction will fill. This does not relate to any monetary cost for submitting the transaction.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "gas_used",
              "description": "Unused.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "Further details for why the transaction was not successfully submitted.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log",
              "description": "Further details for the underlying consensus layer of the result of the transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info",
              "description": "Unused.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetSpamStatisticsRequest",
          "longName": "GetSpamStatisticsRequest",
          "fullName": "vega.api.v1.GetSpamStatisticsRequest",
          "description": "Request to retrieve the spam statistics of a party for the given epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID whose statistics are requested",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetSpamStatisticsResponse",
          "longName": "GetSpamStatisticsResponse",
          "fullName": "vega.api.v1.GetSpamStatisticsResponse",
          "description": "Response containing all the spam statistics of a party for the current epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "chain_id",
              "description": "Chain ID for which the statistics are captured.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "statistics",
              "description": "Spam statistics for the party",
              "label": "",
              "type": "SpamStatistics",
              "longType": "SpamStatistics",
              "fullType": "vega.api.v1.SpamStatistics",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVegaTimeRequest",
          "longName": "GetVegaTimeRequest",
          "fullName": "vega.api.v1.GetVegaTimeRequest",
          "description": "Request for the current time of the Vega network",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetVegaTimeResponse",
          "longName": "GetVegaTimeResponse",
          "fullName": "vega.api.v1.GetVegaTimeResponse",
          "description": "Response for the current consensus coordinated time on the Vega network, referred to as \"VegaTime\"",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp representation of current VegaTime as represented in\nUnix nanoseconds, for example `1580473859111222333` corresponds to `2020-01-31T12:30:59.111222333Z`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LastBlockHeightRequest",
          "longName": "LastBlockHeightRequest",
          "fullName": "vega.api.v1.LastBlockHeightRequest",
          "description": "Request to get the height of the very last block processed\nby tendermint",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "LastBlockHeightResponse",
          "longName": "LastBlockHeightResponse",
          "fullName": "vega.api.v1.LastBlockHeightResponse",
          "description": "Response with the height of the last block processed by\ntendermint",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "Last block height",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "Last block hash",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_hash_function",
              "description": "Supported proof of work hash function",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_difficulty",
              "description": "Difficulty of the proof of work, i.e. the target number of zeros",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_number_of_past_blocks",
              "description": "Supported proof of work number of blocks behind current height allowed",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_number_of_tx_per_block",
              "description": "Allowed number of transactions per block",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_increasing_difficulty",
              "description": "Boolean indicating whether increasing difficulty is allowed for using the\nsame height for more than `spam_pow_number_of_past_blocks` transactions",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "Network chain id from which the block comes from",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveEventBusRequest",
          "longName": "ObserveEventBusRequest",
          "fullName": "vega.api.v1.ObserveEventBusRequest",
          "description": "Request to subscribe to a stream of one or more event types from the Vega event bus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "One or more types of event, required field",
              "label": "repeated",
              "type": "BusEventType",
              "longType": "vega.events.v1.BusEventType",
              "fullType": "vega.events.v1.BusEventType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID to filter events for, optional field. If omitted, no markets will be filtered out.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party ID to filter events for, optional field. If omitted, no parties will be filtered out.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_size",
              "description": "Batch size, optional field -\nIf not specified, any events received will be sent immediately. If the client is not ready\nfor the next data-set, data may be dropped a number of times, and eventually the stream is closed.\nif specified, the first batch will be sent when ready. To receive the next set of events, the client\nmust write an `ObserveEventBatch` message on the stream to flush the buffer.\nIf no message is received in 5 seconds, the stream is closed.\nDefault: 0, send any and all events when they are available.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveEventBusResponse",
          "longName": "ObserveEventBusResponse",
          "fullName": "vega.api.v1.ObserveEventBusResponse",
          "description": "Response to a subscribed stream of events from the Vega event bus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "events",
              "description": "One or more events that match the subscription request criteria.",
              "label": "repeated",
              "type": "BusEvent",
              "longType": "vega.events.v1.BusEvent",
              "fullType": "vega.events.v1.BusEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PoWBlockState",
          "longName": "PoWBlockState",
          "fullName": "vega.api.v1.PoWBlockState",
          "description": "Proof of Work state for a given block",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "Block height for the current Proof of Work state statistics",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "Hash of the current block",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transactions_seen",
              "description": "Total number of transactions seen in the block",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expected_difficulty",
              "description": "This is the minimum required difficulty for the next transaction submitted on this block\nif it is possible to submit more transactions on this block, otherwise nil.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_expected_difficulty",
              "defaultValue": ""
            },
            {
              "name": "hash_function",
              "description": "Hashing function used to calculate the block hash",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "difficulty",
              "description": "Base difficulty for this block for when transactions seen \u003c tx_per_block",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_per_block",
              "description": "Number of transactions that can have their proof-of-work calculated with this block hash before\neither the difficulty increases, or no more transactions can use this block hash",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "increasing_difficulty",
              "description": "Whether or not this block allows for increasing proof-of-work difficulty if the\ntx-per-block-hash limit has been reached",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PoWStatistic",
          "longName": "PoWStatistic",
          "fullName": "vega.api.v1.PoWStatistic",
          "description": "Proof of work statistics for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "block_states",
              "description": "Block state for each block in scope for PoW calculation",
              "label": "repeated",
              "type": "PoWBlockState",
              "longType": "PoWBlockState",
              "fullType": "vega.api.v1.PoWBlockState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banned_until",
              "description": "PoW banned until timestamp as RFC3339Nano",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_banned_until",
              "defaultValue": ""
            },
            {
              "name": "number_of_past_blocks",
              "description": "Number of block behind the current block whose hash can be used for proof-of-work calculations",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PropagateChainEventRequest",
          "longName": "PropagateChainEventRequest",
          "fullName": "vega.api.v1.PropagateChainEventRequest",
          "description": "Request for a new event sent by the blockchain queue to be propagated on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "event",
              "description": "Chain event to propagate.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pub_key",
              "description": "Public key of the key pair used to sign messages.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Signature generated by the private key associated with the public key.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PropagateChainEventResponse",
          "longName": "PropagateChainEventResponse",
          "fullName": "vega.api.v1.PropagateChainEventResponse",
          "description": "Response for a new event sent by the blockchain queue to be propagated on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Success will be true if the event was accepted by the node,\n**Important** - success does not mean that the event is confirmed by consensus",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SpamStatistic",
          "longName": "SpamStatistic",
          "fullName": "vega.api.v1.SpamStatistic",
          "description": "Statistics for a given spam policy",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "count_for_epoch",
              "description": "Current transaction count received from the party during this epoch for this policy",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_for_epoch",
              "description": "Maximum number of transactions allowed for this policy in an epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banned_until",
              "description": "If blocked the timestamp when the party will be unblocked as RFC3339Nano",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_banned_until",
              "defaultValue": ""
            },
            {
              "name": "min_tokens_required",
              "description": "Effective minimum number of tokens required to submit a transaction of this type",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SpamStatistics",
          "longName": "SpamStatistics",
          "fullName": "vega.api.v1.SpamStatistics",
          "description": "Complete spam statistics captured for a given party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "Statistics for proposal transactions made by the party.",
              "label": "",
              "type": "SpamStatistic",
              "longType": "SpamStatistic",
              "fullType": "vega.api.v1.SpamStatistic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delegations",
              "description": "Statistics for delegation transactions made by the party.",
              "label": "",
              "type": "SpamStatistic",
              "longType": "SpamStatistic",
              "fullType": "vega.api.v1.SpamStatistic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transfers",
              "description": "Statistics for transfer transactions made by the party.",
              "label": "",
              "type": "SpamStatistic",
              "longType": "SpamStatistic",
              "fullType": "vega.api.v1.SpamStatistic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_announcements",
              "description": "Statistics for node announcement transactions made by the party.",
              "label": "",
              "type": "SpamStatistic",
              "longType": "SpamStatistic",
              "fullType": "vega.api.v1.SpamStatistic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "votes",
              "description": "Statistics for proposal votes made by the party.",
              "label": "",
              "type": "VoteSpamStatistics",
              "longType": "VoteSpamStatistics",
              "fullType": "vega.api.v1.VoteSpamStatistics",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pow",
              "description": "Statistics for proof of work difficulty observed per block for the party.",
              "label": "",
              "type": "PoWStatistic",
              "longType": "PoWStatistic",
              "fullType": "vega.api.v1.PoWStatistic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "issue_signatures",
              "description": "Statistics for multisig signatures issued for the party.",
              "label": "",
              "type": "SpamStatistic",
              "longType": "SpamStatistic",
              "fullType": "vega.api.v1.SpamStatistic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch in which these statistics apply to.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "create_referral_set",
              "description": "Statistics for transactions made by the party to create referral sets.",
              "label": "",
              "type": "SpamStatistic",
              "longType": "SpamStatistic",
              "fullType": "vega.api.v1.SpamStatistic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "update_referral_set",
              "description": "Statistics for transactions made by the party to update referral sets.",
              "label": "",
              "type": "SpamStatistic",
              "longType": "SpamStatistic",
              "fullType": "vega.api.v1.SpamStatistic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "apply_referral_code",
              "description": "Statistics for transactions made by the party to apply referral codes.",
              "label": "",
              "type": "SpamStatistic",
              "longType": "SpamStatistic",
              "fullType": "vega.api.v1.SpamStatistic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Statistics",
          "longName": "Statistics",
          "fullName": "vega.api.v1.Statistics",
          "description": "Vega domain specific statistics as reported by the node the caller is connected to",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "Current block height as reported by the Vega blockchain",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "backlog_length",
              "description": "Current backlog length i.e., number of transactions, that are waiting to be included in a block",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_peers",
              "description": "Total number of connected peers to this node",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "genesis_time",
              "description": "Genesis block date and time formatted in ISO-8601 datetime format with nanosecond precision",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_time",
              "description": "Current system date and time formatted in ISO-8601 datetime format with nanosecond precision",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_time",
              "description": "Current Vega date and time formatted in ISO-8601 datetime format with nanosecond precision",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the connection to the Vega blockchain",
              "label": "",
              "type": "ChainStatus",
              "longType": "vega.ChainStatus",
              "fullType": "vega.ChainStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_per_block",
              "description": "Transactions per block",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_tx_bytes",
              "description": "Average transaction size in bytes",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_orders_per_block",
              "description": "Average orders per block",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trades_per_second",
              "description": "Trades emitted per second",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "orders_per_second",
              "description": "Orders processed per second",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_markets",
              "description": "Total markets on this Vega network",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_amend_order",
              "description": "Total number of order amendments since genesis across all markets",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_cancel_order",
              "description": "Total number of order cancellations since genesis across all markets",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_create_order",
              "description": "Total number of order submissions since genesis across all markets",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_orders",
              "description": "Total number of orders processed since genesis across all markets",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_trades",
              "description": "Total number of trades emitted since genesis across all markets",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_subscriptions",
              "description": "Current number of stream subscribers to order data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trade_subscriptions",
              "description": "Current number of stream subscribers to trade data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "candle_subscriptions",
              "description": "Current number of stream subscribers to candlestick data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_depth_subscriptions",
              "description": "Current number of stream subscribers to market depth data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "positions_subscriptions",
              "description": "Current number of stream subscribers to positions data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_subscriptions",
              "description": "Current number of stream subscribers to account data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_data_subscriptions",
              "description": "Current number of stream subscribers to market data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "app_version_hash",
              "description": "Version hash of the Vega node software",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "app_version",
              "description": "Version of the Vega node software",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_version",
              "description": "Version of the underlying Vega blockchain",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_duration",
              "description": "Current block duration, in nanoseconds",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "uptime",
              "description": "Total uptime for this node formatted in ISO-8601 datetime format with nanosecond precision",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "Unique ID for the underlying Vega blockchain",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_depth_updates_subscriptions",
              "description": "Current number of stream subscribers to market depth update data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "Current block hash",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Current epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_start_time",
              "description": "Epoch start time",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_expiry_time",
              "description": "Epoch expected end time",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_count",
              "description": "Number of events in the last block",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "events_per_second",
              "description": "Rate of events per second in the last block",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StatisticsRequest",
          "longName": "StatisticsRequest",
          "fullName": "vega.api.v1.StatisticsRequest",
          "description": "Request for statistics about the Vega network",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "StatisticsResponse",
          "longName": "StatisticsResponse",
          "fullName": "vega.api.v1.StatisticsResponse",
          "description": "Response containing statistics about the Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "statistics",
              "description": "",
              "label": "",
              "type": "Statistics",
              "longType": "Statistics",
              "fullType": "vega.api.v1.Statistics",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubmitRawTransactionRequest",
          "longName": "SubmitRawTransactionRequest",
          "fullName": "vega.api.v1.SubmitRawTransactionRequest",
          "description": "Request for submitting a version agnostic transaction on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx",
              "description": "Bundle of signed payload and signature marshalled into a byte array, to form a transaction that will be submitted to the Vega blockchain",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of transaction request, for example ASYNC, meaning the transaction will be submitted and not block on a response",
              "label": "",
              "type": "Type",
              "longType": "SubmitRawTransactionRequest.Type",
              "fullType": "vega.api.v1.SubmitRawTransactionRequest.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubmitRawTransactionResponse",
          "longName": "SubmitRawTransactionResponse",
          "fullName": "vega.api.v1.SubmitRawTransactionResponse",
          "description": "Response for submitting a version agnostic transaction on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Whether or not the transaction was validated and submitted to the chain's mempool.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "Hash of the transaction, which can be used to identify the transaction in a node's event stream.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Error code to indicate the category of failure if the transaction was not successfully submitted.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "Further details for why the transaction was not successfully submitted.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log",
              "description": "Further details for the underlying consensus layer of the result of the transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "height",
              "description": "Unused.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubmitTransactionRequest",
          "longName": "SubmitTransactionRequest",
          "fullName": "vega.api.v1.SubmitTransactionRequest",
          "description": "Request for submitting a transaction v2 on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx",
              "description": "Transaction containing a command to execute on the network, and a signature to provide authentication.",
              "label": "",
              "type": "Transaction",
              "longType": "vega.commands.v1.Transaction",
              "fullType": "vega.commands.v1.Transaction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Method of submission.",
              "label": "",
              "type": "Type",
              "longType": "SubmitTransactionRequest.Type",
              "fullType": "vega.api.v1.SubmitTransactionRequest.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubmitTransactionResponse",
          "longName": "SubmitTransactionResponse",
          "fullName": "vega.api.v1.SubmitTransactionResponse",
          "description": "Response for submitting a transaction on the network.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Whether or not the transaction was validated and submitted to the chain's mempool.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "Hash of the transaction, which can be used to identify the transaction in a node's event stream.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Error code to indicate the category of failure if the transaction was not successfully submitted.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "Further details for why the transaction was not successfully submitted.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log",
              "description": "Further details for the underlying consensus layer of the result of the transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "height",
              "description": "Unused.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VoteSpamStatistic",
          "longName": "VoteSpamStatistic",
          "fullName": "vega.api.v1.VoteSpamStatistic",
          "description": "Vote statistics for the voting spam policies\nwhich are calculated as a ratio of the total votes\nthat have been rejected.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "Unique ID of the proposal being voted on by the party.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "count_for_epoch",
              "description": "Current vote count received from the party for the given proposal during this epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_tokens_required",
              "description": "Effective minimum number of tokens required to vote on the proposal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VoteSpamStatistics",
          "longName": "VoteSpamStatistics",
          "fullName": "vega.api.v1.VoteSpamStatistics",
          "description": "Voting statistics by proposal for a given party for the current epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "statistics",
              "description": "List of statistics for proposals voted on by the party",
              "label": "repeated",
              "type": "VoteSpamStatistic",
              "longType": "VoteSpamStatistic",
              "fullType": "vega.api.v1.VoteSpamStatistic",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_for_epoch",
              "description": "Maximum number of votes per proposal allowed in an epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banned_until",
              "description": "If blocked the timestamp when the party will be unblocked as RFC3339Nano",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_banned_until",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "CoreService",
          "longName": "CoreService",
          "fullName": "vega.api.v1.CoreService",
          "description": "",
          "methods": [
            {
              "name": "SubmitTransaction",
              "description": "Submit transaction\n\nSubmit a signed transaction to the network containing a command to be executed such that if the submission is successful then it will be included in the chain's mempool.\nThe network will then attempt to execute the transaction in the next available block, where the results of its execution can be seen on the EventBus.",
              "requestType": "SubmitTransactionRequest",
              "requestLongType": "SubmitTransactionRequest",
              "requestFullType": "vega.api.v1.SubmitTransactionRequest",
              "requestStreaming": false,
              "responseType": "SubmitTransactionResponse",
              "responseLongType": "SubmitTransactionResponse",
              "responseFullType": "vega.api.v1.SubmitTransactionResponse",
              "responseStreaming": false
            },
            {
              "name": "PropagateChainEvent",
              "description": "Chain event\n\nPropagate a chain event",
              "requestType": "PropagateChainEventRequest",
              "requestLongType": "PropagateChainEventRequest",
              "requestFullType": "vega.api.v1.PropagateChainEventRequest",
              "requestStreaming": false,
              "responseType": "PropagateChainEventResponse",
              "responseLongType": "PropagateChainEventResponse",
              "responseFullType": "vega.api.v1.PropagateChainEventResponse",
              "responseStreaming": false
            },
            {
              "name": "Statistics",
              "description": "Statistics\n\nGet statistics on Vega",
              "requestType": "StatisticsRequest",
              "requestLongType": "StatisticsRequest",
              "requestFullType": "vega.api.v1.StatisticsRequest",
              "requestStreaming": false,
              "responseType": "StatisticsResponse",
              "responseLongType": "StatisticsResponse",
              "responseFullType": "vega.api.v1.StatisticsResponse",
              "responseStreaming": false
            },
            {
              "name": "LastBlockHeight",
              "description": "Blockchain height\n\nGet the height of the last tendermint block",
              "requestType": "LastBlockHeightRequest",
              "requestLongType": "LastBlockHeightRequest",
              "requestFullType": "vega.api.v1.LastBlockHeightRequest",
              "requestStreaming": false,
              "responseType": "LastBlockHeightResponse",
              "responseLongType": "LastBlockHeightResponse",
              "responseFullType": "vega.api.v1.LastBlockHeightResponse",
              "responseStreaming": false
            },
            {
              "name": "GetVegaTime",
              "description": "Vega time\n\nGet current Vega time",
              "requestType": "GetVegaTimeRequest",
              "requestLongType": "GetVegaTimeRequest",
              "requestFullType": "vega.api.v1.GetVegaTimeRequest",
              "requestStreaming": false,
              "responseType": "GetVegaTimeResponse",
              "responseLongType": "GetVegaTimeResponse",
              "responseFullType": "vega.api.v1.GetVegaTimeResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveEventBus",
              "description": "Events subscription\n\nSubscribe to a stream of events from the core",
              "requestType": "ObserveEventBusRequest",
              "requestLongType": "ObserveEventBusRequest",
              "requestFullType": "vega.api.v1.ObserveEventBusRequest",
              "requestStreaming": true,
              "responseType": "ObserveEventBusResponse",
              "responseLongType": "ObserveEventBusResponse",
              "responseFullType": "vega.api.v1.ObserveEventBusResponse",
              "responseStreaming": true
            },
            {
              "name": "SubmitRawTransaction",
              "description": "Submit raw transaction\n\nSubmit a pre-serialised signed transaction containing a command to the network to be executed, such that if the submission is successful then it will be included in the chain's mempool.\nThe network will then attempt to execute the transaction in the next available block, where the results of its execution can be seen on the EventBus.",
              "requestType": "SubmitRawTransactionRequest",
              "requestLongType": "SubmitRawTransactionRequest",
              "requestFullType": "vega.api.v1.SubmitRawTransactionRequest",
              "requestStreaming": false,
              "responseType": "SubmitRawTransactionResponse",
              "responseLongType": "SubmitRawTransactionResponse",
              "responseFullType": "vega.api.v1.SubmitRawTransactionResponse",
              "responseStreaming": false
            },
            {
              "name": "CheckTransaction",
              "description": "Check transaction\n\nSend a signed transaction containing a command to the network to be checked, but not added to the chain's mempool.\nThis is useful for checking the validity of a potential transaction before submitting it.",
              "requestType": "CheckTransactionRequest",
              "requestLongType": "CheckTransactionRequest",
              "requestFullType": "vega.api.v1.CheckTransactionRequest",
              "requestStreaming": false,
              "responseType": "CheckTransactionResponse",
              "responseLongType": "CheckTransactionResponse",
              "responseFullType": "vega.api.v1.CheckTransactionResponse",
              "responseStreaming": false
            },
            {
              "name": "CheckRawTransaction",
              "description": "Check raw transaction\n\nSend a pre-serialised transaction containing a command to the network to be checked, but then not added to the chain's mempool.\nThis is useful for checking the validity of a potential transaction before submitting it.",
              "requestType": "CheckRawTransactionRequest",
              "requestLongType": "CheckRawTransactionRequest",
              "requestFullType": "vega.api.v1.CheckRawTransactionRequest",
              "requestStreaming": false,
              "responseType": "CheckRawTransactionResponse",
              "responseLongType": "CheckRawTransactionResponse",
              "responseFullType": "vega.api.v1.CheckRawTransactionResponse",
              "responseStreaming": false
            },
            {
              "name": "GetSpamStatistics",
              "description": "Get Spam statistics\n\nGet the spam statistics for a given party.",
              "requestType": "GetSpamStatisticsRequest",
              "requestLongType": "GetSpamStatisticsRequest",
              "requestFullType": "vega.api.v1.GetSpamStatisticsRequest",
              "requestStreaming": false,
              "responseType": "GetSpamStatisticsResponse",
              "responseLongType": "GetSpamStatisticsResponse",
              "responseFullType": "vega.api.v1.GetSpamStatisticsResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "vega/api/v1/corestate.proto",
      "description": "",
      "package": "vega.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Account",
          "longName": "Account",
          "fullName": "vega.api.v1.Account",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAccountsRequest",
          "longName": "ListAccountsRequest",
          "fullName": "vega.api.v1.ListAccountsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAccountsResponse",
          "longName": "ListAccountsResponse",
          "fullName": "vega.api.v1.ListAccountsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "",
              "label": "repeated",
              "type": "Account",
              "longType": "Account",
              "fullType": "vega.api.v1.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAssetsRequest",
          "longName": "ListAssetsRequest",
          "fullName": "vega.api.v1.ListAssetsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "optional ID",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAssetsResponse",
          "longName": "ListAssetsResponse",
          "fullName": "vega.api.v1.ListAssetsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDelegationsRequest",
          "longName": "ListDelegationsRequest",
          "fullName": "vega.api.v1.ListDelegationsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDelegationsResponse",
          "longName": "ListDelegationsResponse",
          "fullName": "vega.api.v1.ListDelegationsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegations",
              "description": "",
              "label": "repeated",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsDataRequest",
          "longName": "ListMarketsDataRequest",
          "fullName": "vega.api.v1.ListMarketsDataRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsDataResponse",
          "longName": "ListMarketsDataResponse",
          "fullName": "vega.api.v1.ListMarketsDataResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets_data",
              "description": "",
              "label": "repeated",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsRequest",
          "longName": "ListMarketsRequest",
          "fullName": "vega.api.v1.ListMarketsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsResponse",
          "longName": "ListMarketsResponse",
          "fullName": "vega.api.v1.ListMarketsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets",
              "description": "",
              "label": "repeated",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNetworkLimitsRequest",
          "longName": "ListNetworkLimitsRequest",
          "fullName": "vega.api.v1.ListNetworkLimitsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListNetworkLimitsResponse",
          "longName": "ListNetworkLimitsResponse",
          "fullName": "vega.api.v1.ListNetworkLimitsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_limits",
              "description": "",
              "label": "",
              "type": "NetworkLimits",
              "longType": "vega.NetworkLimits",
              "fullType": "vega.NetworkLimits",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNetworkParametersRequest",
          "longName": "ListNetworkParametersRequest",
          "fullName": "vega.api.v1.ListNetworkParametersRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_parameter_key",
              "description": "optional parameter key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNetworkParametersResponse",
          "longName": "ListNetworkParametersResponse",
          "fullName": "vega.api.v1.ListNetworkParametersResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_parameters",
              "description": "",
              "label": "repeated",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPartiesRequest",
          "longName": "ListPartiesRequest",
          "fullName": "vega.api.v1.ListPartiesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListPartiesResponse",
          "longName": "ListPartiesResponse",
          "fullName": "vega.api.v1.ListPartiesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties",
              "description": "",
              "label": "repeated",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPartiesStakeRequest",
          "longName": "ListPartiesStakeRequest",
          "fullName": "vega.api.v1.ListPartiesStakeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPartiesStakeResponse",
          "longName": "ListPartiesStakeResponse",
          "fullName": "vega.api.v1.ListPartiesStakeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties_stake",
              "description": "",
              "label": "repeated",
              "type": "PartyStake",
              "longType": "PartyStake",
              "fullType": "vega.api.v1.PartyStake",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListProposalsRequest",
          "longName": "ListProposalsRequest",
          "fullName": "vega.api.v1.ListProposalsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "optional ID",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposer",
              "description": "optional party",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListProposalsResponse",
          "longName": "ListProposalsResponse",
          "fullName": "vega.api.v1.ListProposalsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListValidatorsRequest",
          "longName": "ListValidatorsRequest",
          "fullName": "vega.api.v1.ListValidatorsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListValidatorsResponse",
          "longName": "ListValidatorsResponse",
          "fullName": "vega.api.v1.ListValidatorsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validators",
              "description": "",
              "label": "repeated",
              "type": "ValidatorUpdate",
              "longType": "vega.events.v1.ValidatorUpdate",
              "fullType": "vega.events.v1.ValidatorUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListVotesRequest",
          "longName": "ListVotesRequest",
          "fullName": "vega.api.v1.ListVotesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListVotesResponse",
          "longName": "ListVotesResponse",
          "fullName": "vega.api.v1.ListVotesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "votes",
              "description": "",
              "label": "repeated",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyStake",
          "longName": "PartyStake",
          "fullName": "vega.api.v1.PartyStake",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_stake_available",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_linkings",
              "description": "",
              "label": "repeated",
              "type": "StakeLinking",
              "longType": "vega.events.v1.StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "CoreStateService",
          "longName": "CoreStateService",
          "fullName": "vega.api.v1.CoreStateService",
          "description": "",
          "methods": [
            {
              "name": "ListAccounts",
              "description": "Accounts list\n\nGet a list of accounts",
              "requestType": "ListAccountsRequest",
              "requestLongType": "ListAccountsRequest",
              "requestFullType": "vega.api.v1.ListAccountsRequest",
              "requestStreaming": false,
              "responseType": "ListAccountsResponse",
              "responseLongType": "ListAccountsResponse",
              "responseFullType": "vega.api.v1.ListAccountsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListAssets",
              "description": "Assets list\n\nGet a list of assets",
              "requestType": "ListAssetsRequest",
              "requestLongType": "ListAssetsRequest",
              "requestFullType": "vega.api.v1.ListAssetsRequest",
              "requestStreaming": false,
              "responseType": "ListAssetsResponse",
              "responseLongType": "ListAssetsResponse",
              "responseFullType": "vega.api.v1.ListAssetsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListNetworkParameters",
              "description": "Network parameters list\n\nGet a list of network parameters",
              "requestType": "ListNetworkParametersRequest",
              "requestLongType": "ListNetworkParametersRequest",
              "requestFullType": "vega.api.v1.ListNetworkParametersRequest",
              "requestStreaming": false,
              "responseType": "ListNetworkParametersResponse",
              "responseLongType": "ListNetworkParametersResponse",
              "responseFullType": "vega.api.v1.ListNetworkParametersResponse",
              "responseStreaming": false
            },
            {
              "name": "ListNetworkLimits",
              "description": "Network limits list\n\nGet a list of network limits",
              "requestType": "ListNetworkLimitsRequest",
              "requestLongType": "ListNetworkLimitsRequest",
              "requestFullType": "vega.api.v1.ListNetworkLimitsRequest",
              "requestStreaming": false,
              "responseType": "ListNetworkLimitsResponse",
              "responseLongType": "ListNetworkLimitsResponse",
              "responseFullType": "vega.api.v1.ListNetworkLimitsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListParties",
              "description": "Parties list\n\nGet a list of parties",
              "requestType": "ListPartiesRequest",
              "requestLongType": "ListPartiesRequest",
              "requestFullType": "vega.api.v1.ListPartiesRequest",
              "requestStreaming": false,
              "responseType": "ListPartiesResponse",
              "responseLongType": "ListPartiesResponse",
              "responseFullType": "vega.api.v1.ListPartiesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListValidators",
              "description": "Validators list\n\nGet a list of validators",
              "requestType": "ListValidatorsRequest",
              "requestLongType": "ListValidatorsRequest",
              "requestFullType": "vega.api.v1.ListValidatorsRequest",
              "requestStreaming": false,
              "responseType": "ListValidatorsResponse",
              "responseLongType": "ListValidatorsResponse",
              "responseFullType": "vega.api.v1.ListValidatorsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListMarkets",
              "description": "Markets list\n\nGet a list of markets",
              "requestType": "ListMarketsRequest",
              "requestLongType": "ListMarketsRequest",
              "requestFullType": "vega.api.v1.ListMarketsRequest",
              "requestStreaming": false,
              "responseType": "ListMarketsResponse",
              "responseLongType": "ListMarketsResponse",
              "responseFullType": "vega.api.v1.ListMarketsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListProposals",
              "description": "Proposals list\n\nGet a list of proposals",
              "requestType": "ListProposalsRequest",
              "requestLongType": "ListProposalsRequest",
              "requestFullType": "vega.api.v1.ListProposalsRequest",
              "requestStreaming": false,
              "responseType": "ListProposalsResponse",
              "responseLongType": "ListProposalsResponse",
              "responseFullType": "vega.api.v1.ListProposalsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListMarketsData",
              "description": "Markets data list\n\nGet a list of markets data",
              "requestType": "ListMarketsDataRequest",
              "requestLongType": "ListMarketsDataRequest",
              "requestFullType": "vega.api.v1.ListMarketsDataRequest",
              "requestStreaming": false,
              "responseType": "ListMarketsDataResponse",
              "responseLongType": "ListMarketsDataResponse",
              "responseFullType": "vega.api.v1.ListMarketsDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ListVotes",
              "description": "Votes list\n\nGet a list of votes",
              "requestType": "ListVotesRequest",
              "requestLongType": "ListVotesRequest",
              "requestFullType": "vega.api.v1.ListVotesRequest",
              "requestStreaming": false,
              "responseType": "ListVotesResponse",
              "responseLongType": "ListVotesResponse",
              "responseFullType": "vega.api.v1.ListVotesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListPartiesStake",
              "description": "Parties stake list\n\nGet a list of parties stake",
              "requestType": "ListPartiesStakeRequest",
              "requestLongType": "ListPartiesStakeRequest",
              "requestFullType": "vega.api.v1.ListPartiesStakeRequest",
              "requestStreaming": false,
              "responseType": "ListPartiesStakeResponse",
              "responseLongType": "ListPartiesStakeResponse",
              "responseFullType": "vega.api.v1.ListPartiesStakeResponse",
              "responseStreaming": false
            },
            {
              "name": "ListDelegations",
              "description": "Delegations list\n\nGet a list of delegations",
              "requestType": "ListDelegationsRequest",
              "requestLongType": "ListDelegationsRequest",
              "requestFullType": "vega.api.v1.ListDelegationsRequest",
              "requestStreaming": false,
              "responseType": "ListDelegationsResponse",
              "responseLongType": "ListDelegationsResponse",
              "responseFullType": "vega.api.v1.ListDelegationsResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "vega/checkpoint/v1/checkpoint.proto",
      "description": "",
      "package": "vega.checkpoint.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AssetAction",
          "longName": "AssetAction",
          "fullName": "vega.checkpoint.v1.AssetAction",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_number",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "builtin_deposit",
              "description": "",
              "label": "",
              "type": "BuiltinAssetDeposit",
              "longType": "vega.BuiltinAssetDeposit",
              "fullType": "vega.BuiltinAssetDeposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "erc20_deposit",
              "description": "",
              "label": "",
              "type": "ERC20Deposit",
              "longType": "vega.ERC20Deposit",
              "fullType": "vega.ERC20Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_list",
              "description": "",
              "label": "",
              "type": "ERC20AssetList",
              "longType": "vega.ERC20AssetList",
              "fullType": "vega.ERC20AssetList",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "erc20_asset_limits_updated",
              "description": "",
              "label": "",
              "type": "ERC20AssetLimitsUpdated",
              "longType": "vega.ERC20AssetLimitsUpdated",
              "fullType": "vega.ERC20AssetLimitsUpdated",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "erc20_bridge_stopped",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "erc20_bridge_resumed",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetBalance",
          "longName": "AssetBalance",
          "fullName": "vega.checkpoint.v1.AssetBalance",
          "description": "AssetBalance represents the total balance of a given asset for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetEntry",
          "longName": "AssetEntry",
          "fullName": "vega.checkpoint.v1.AssetEntry",
          "description": "AssetEntry is a single (enabled) asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_details",
              "description": "",
              "label": "",
              "type": "AssetDetails",
              "longType": "vega.AssetDetails",
              "fullType": "vega.AssetDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Assets",
          "longName": "Assets",
          "fullName": "vega.checkpoint.v1.Assets",
          "description": "Assets contains all the enabled assets as AssetEntries",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "AssetEntry",
              "longType": "AssetEntry",
              "fullType": "vega.checkpoint.v1.AssetEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_listing_assets",
              "description": "",
              "label": "repeated",
              "type": "AssetEntry",
              "longType": "AssetEntry",
              "fullType": "vega.checkpoint.v1.AssetEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Banking",
          "longName": "Banking",
          "fullName": "vega.checkpoint.v1.Banking",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfers_at_time",
              "description": "",
              "label": "repeated",
              "type": "ScheduledTransferAtTime",
              "longType": "ScheduledTransferAtTime",
              "fullType": "vega.checkpoint.v1.ScheduledTransferAtTime",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recurring_transfers",
              "description": "",
              "label": "",
              "type": "RecurringTransfers",
              "longType": "RecurringTransfers",
              "fullType": "vega.checkpoint.v1.RecurringTransfers",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bridge_state",
              "description": "",
              "label": "",
              "type": "BridgeState",
              "longType": "BridgeState",
              "fullType": "vega.checkpoint.v1.BridgeState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_actions",
              "description": "",
              "label": "repeated",
              "type": "AssetAction",
              "longType": "AssetAction",
              "fullType": "vega.checkpoint.v1.AssetAction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_seen_eth_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seen_refs",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "governance_transfers_at_time",
              "description": "",
              "label": "repeated",
              "type": "ScheduledGovernanceTransferAtTime",
              "longType": "ScheduledGovernanceTransferAtTime",
              "fullType": "vega.checkpoint.v1.ScheduledGovernanceTransferAtTime",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recurring_governance_transfers",
              "description": "",
              "label": "repeated",
              "type": "GovernanceTransfer",
              "longType": "GovernanceTransfer",
              "fullType": "vega.checkpoint.v1.GovernanceTransfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Block",
          "longName": "Block",
          "fullName": "vega.checkpoint.v1.Block",
          "description": "Block message contains data related to block at which the checkpoint\nwas created i.e. the block height",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BridgeState",
          "longName": "BridgeState",
          "fullName": "vega.checkpoint.v1.BridgeState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "active",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Checkpoint",
          "longName": "Checkpoint",
          "fullName": "vega.checkpoint.v1.Checkpoint",
          "description": "Checkpoint aggregates the various engine snapshots",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "governance",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "assets",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "network_parameters",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delegation",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "will just be an epoch event",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banking",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validators",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "multisig_control",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_tracker",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "execution",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointState",
          "longName": "CheckpointState",
          "fullName": "vega.checkpoint.v1.CheckpointState",
          "description": "CheckpointState is the entire checkpoint serialised. Basically it is the serialisation of the Checkpoint message + hash.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Collateral",
          "longName": "Collateral",
          "fullName": "vega.checkpoint.v1.Collateral",
          "description": "Collateral contains the balances per party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "balances",
              "description": "",
              "label": "repeated",
              "type": "AssetBalance",
              "longType": "AssetBalance",
              "fullType": "vega.checkpoint.v1.AssetBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Delegate",
          "longName": "Delegate",
          "fullName": "vega.checkpoint.v1.Delegate",
          "description": "Delegate contains all entries for a checkpoint",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "active",
              "description": "",
              "label": "repeated",
              "type": "DelegateEntry",
              "longType": "DelegateEntry",
              "fullType": "vega.checkpoint.v1.DelegateEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending",
              "description": "",
              "label": "repeated",
              "type": "DelegateEntry",
              "longType": "DelegateEntry",
              "fullType": "vega.checkpoint.v1.DelegateEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auto_delegation",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegateEntry",
          "longName": "DelegateEntry",
          "fullName": "vega.checkpoint.v1.DelegateEntry",
          "description": "Delegated amounts for party/node\n`undelegate` and `epoch_seq` are only relevant for pending entries",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "undelegate",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ELSShare",
          "longName": "ELSShare",
          "fullName": "vega.checkpoint.v1.ELSShare",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party ID of the liquidity provider.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "share",
              "description": "The equity-like share of the liquidity provider, representing their share in the total provided liquidity expressed as a value between 0 and 1.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "supplied_stake",
              "description": "Amount committed. This is the total commitment made. It does not necessarily match the LP balance.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "virtual_stake",
              "description": "LP stake, weighted according to the time the stake was committed and market growth.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avg",
              "description": "Average entry valuation. As time increases the weight of stake, this is the overall valuation of the current stake.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochPartyFees",
          "longName": "EpochPartyFees",
          "fullName": "vega.checkpoint.v1.EpochPartyFees",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_fees",
              "description": "",
              "label": "repeated",
              "type": "PartyFeesHistory",
              "longType": "PartyFeesHistory",
              "fullType": "vega.checkpoint.v1.PartyFeesHistory",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochReturnsData",
          "longName": "EpochReturnsData",
          "fullName": "vega.checkpoint.v1.EpochReturnsData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "returns",
              "description": "",
              "label": "repeated",
              "type": "ReturnsData",
              "longType": "ReturnsData",
              "fullType": "vega.checkpoint.v1.ReturnsData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochTimeWeightPositionData",
          "longName": "EpochTimeWeightPositionData",
          "fullName": "vega.checkpoint.v1.EpochTimeWeightPositionData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_time_weighted_positions",
              "description": "",
              "label": "repeated",
              "type": "PartyTimeWeightedPosition",
              "longType": "PartyTimeWeightedPosition",
              "fullType": "vega.checkpoint.v1.PartyTimeWeightedPosition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochTimeWeightedNotionalData",
          "longName": "EpochTimeWeightedNotionalData",
          "fullName": "vega.checkpoint.v1.EpochTimeWeightedNotionalData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_time_weighted_notionals",
              "description": "",
              "label": "repeated",
              "type": "PartyTimeWeightedNotional",
              "longType": "PartyTimeWeightedNotional",
              "fullType": "vega.checkpoint.v1.PartyTimeWeightedNotional",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecutionState",
          "longName": "ExecutionState",
          "fullName": "vega.checkpoint.v1.ExecutionState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Market data that should be preserved, like equity-like shares, and settled markets that have pending successor markets.",
              "label": "repeated",
              "type": "MarketState",
              "longType": "MarketState",
              "fullType": "vega.checkpoint.v1.MarketState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceTransfer",
          "longName": "GovernanceTransfer",
          "fullName": "vega.checkpoint.v1.GovernanceTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "Status",
              "longType": "vega.events.v1.Transfer.Status",
              "fullType": "vega.events.v1.Transfer.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "config",
              "description": "",
              "label": "",
              "type": "NewTransferConfiguration",
              "longType": "vega.NewTransferConfiguration",
              "fullType": "vega.NewTransferConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketActivityTracker",
          "longName": "MarketActivityTracker",
          "fullName": "vega.checkpoint.v1.MarketActivityTracker",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "maker_fees_received",
              "description": "",
              "label": "repeated",
              "type": "PartyFees",
              "longType": "PartyFees",
              "fullType": "vega.checkpoint.v1.PartyFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "maker_fees_paid",
              "description": "",
              "label": "repeated",
              "type": "PartyFees",
              "longType": "PartyFees",
              "fullType": "vega.checkpoint.v1.PartyFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lp_fees",
              "description": "",
              "label": "repeated",
              "type": "PartyFees",
              "longType": "PartyFees",
              "fullType": "vega.checkpoint.v1.PartyFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bonus_paid",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value_traded",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ready_to_delete",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_weighted_position",
              "description": "",
              "label": "repeated",
              "type": "TWPositionData",
              "longType": "TWPositionData",
              "fullType": "vega.checkpoint.v1.TWPositionData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_weighted_notional",
              "description": "",
              "label": "repeated",
              "type": "TWNotionalData",
              "longType": "TWNotionalData",
              "fullType": "vega.checkpoint.v1.TWNotionalData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "returns_data",
              "description": "",
              "label": "repeated",
              "type": "ReturnsData",
              "longType": "ReturnsData",
              "fullType": "vega.checkpoint.v1.ReturnsData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "maker_fees_received_history",
              "description": "",
              "label": "repeated",
              "type": "EpochPartyFees",
              "longType": "EpochPartyFees",
              "fullType": "vega.checkpoint.v1.EpochPartyFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "maker_fees_paid_history",
              "description": "",
              "label": "repeated",
              "type": "EpochPartyFees",
              "longType": "EpochPartyFees",
              "fullType": "vega.checkpoint.v1.EpochPartyFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lp_fees_history",
              "description": "",
              "label": "repeated",
              "type": "EpochPartyFees",
              "longType": "EpochPartyFees",
              "fullType": "vega.checkpoint.v1.EpochPartyFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_weighted_position_data_history",
              "description": "",
              "label": "repeated",
              "type": "EpochTimeWeightPositionData",
              "longType": "EpochTimeWeightPositionData",
              "fullType": "vega.checkpoint.v1.EpochTimeWeightPositionData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_weighted_notional_data_history",
              "description": "",
              "label": "repeated",
              "type": "EpochTimeWeightedNotionalData",
              "longType": "EpochTimeWeightedNotionalData",
              "fullType": "vega.checkpoint.v1.EpochTimeWeightedNotionalData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "returns_data_history",
              "description": "",
              "label": "repeated",
              "type": "EpochReturnsData",
              "longType": "EpochReturnsData",
              "fullType": "vega.checkpoint.v1.EpochReturnsData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketState",
          "longName": "MarketState",
          "fullName": "vega.checkpoint.v1.MarketState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique ID for the market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "shares",
              "description": "The current equity-like share data for a market.",
              "label": "repeated",
              "type": "ELSShare",
              "longType": "ELSShare",
              "fullType": "vega.checkpoint.v1.ELSShare",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "insurance_balance",
              "description": "Current balance of the insurance pool.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_trade_value",
              "description": "Total trade value which last determined the growth rate of the market.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_trade_volume",
              "description": "Total trade volume which last determined the growth rate of the market.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "succession_window",
              "description": "Succession window in nanoseconds: the timestamp when this market cannot be succeeded anymore.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "The underlying market should be present in case the successor market is enacted during the succession window.\nThis field can be omitted if the market is not yet settled.",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketTracker",
          "longName": "MarketTracker",
          "fullName": "vega.checkpoint.v1.MarketTracker",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_activity",
              "description": "",
              "label": "repeated",
              "type": "MarketActivityTracker",
              "longType": "MarketActivityTracker",
              "fullType": "vega.checkpoint.v1.MarketActivityTracker",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "taker_notional_volume",
              "description": "",
              "label": "repeated",
              "type": "TakerNotionalVolume",
              "longType": "TakerNotionalVolume",
              "fullType": "vega.checkpoint.v1.TakerNotionalVolume",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigControl",
          "longName": "MultisigControl",
          "fullName": "vega.checkpoint.v1.MultisigControl",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signers",
              "description": "",
              "label": "repeated",
              "type": "ERC20MultiSigSignerEvent",
              "longType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "threshold_set",
              "description": "",
              "label": "",
              "type": "ERC20MultiSigThresholdSetEvent",
              "longType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "fullType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_block_seen",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetParams",
          "longName": "NetParams",
          "fullName": "vega.checkpoint.v1.NetParams",
          "description": "NetParams contains all network parameters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "",
              "label": "repeated",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyAmount",
          "longName": "PartyAmount",
          "fullName": "vega.checkpoint.v1.PartyAmount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyFees",
          "longName": "PartyFees",
          "fullName": "vega.checkpoint.v1.PartyFees",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyFeesHistory",
          "longName": "PartyFeesHistory",
          "fullName": "vega.checkpoint.v1.PartyFeesHistory",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyTimeWeightedNotional",
          "longName": "PartyTimeWeightedNotional",
          "fullName": "vega.checkpoint.v1.PartyTimeWeightedNotional",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tw_notional",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyTimeWeightedPosition",
          "longName": "PartyTimeWeightedPosition",
          "fullName": "vega.checkpoint.v1.PartyTimeWeightedPosition",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tw_position",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingEthereumKeyRotation",
          "longName": "PendingEthereumKeyRotation",
          "fullName": "vega.checkpoint.v1.PendingEthereumKeyRotation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "relative_target_block_height",
              "description": "Relative target block height is: target block height - current block height.\nUseful for cross blockchain compatibility.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingKeyRotation",
          "longName": "PendingKeyRotation",
          "fullName": "vega.checkpoint.v1.PendingKeyRotation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "relative_target_block_height",
              "description": "Relative target block height is: target block height - current block height.\nUseful for cross blockchain compatibility.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key_index",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingRewardPayout",
          "longName": "PendingRewardPayout",
          "fullName": "vega.checkpoint.v1.PendingRewardPayout",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_account",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_amount",
              "description": "",
              "label": "repeated",
              "type": "PartyAmount",
              "longType": "PartyAmount",
              "fullType": "vega.checkpoint.v1.PartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_reward",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Proposals",
          "longName": "Proposals",
          "fullName": "vega.checkpoint.v1.Proposals",
          "description": "Proposals will contain all accepted proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RecurringTransfers",
          "longName": "RecurringTransfers",
          "fullName": "vega.checkpoint.v1.RecurringTransfers",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "recurring_transfers",
              "description": "",
              "label": "repeated",
              "type": "Transfer",
              "longType": "vega.events.v1.Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReturnsData",
          "longName": "ReturnsData",
          "fullName": "vega.checkpoint.v1.ReturnsData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "return",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardPayout",
          "longName": "RewardPayout",
          "fullName": "vega.checkpoint.v1.RewardPayout",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "payout_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards_payout",
              "description": "",
              "label": "repeated",
              "type": "PendingRewardPayout",
              "longType": "PendingRewardPayout",
              "fullType": "vega.checkpoint.v1.PendingRewardPayout",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Rewards",
          "longName": "Rewards",
          "fullName": "vega.checkpoint.v1.Rewards",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "rewards",
              "description": "",
              "label": "repeated",
              "type": "RewardPayout",
              "longType": "RewardPayout",
              "fullType": "vega.checkpoint.v1.RewardPayout",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScheduledGovernanceTransferAtTime",
          "longName": "ScheduledGovernanceTransferAtTime",
          "fullName": "vega.checkpoint.v1.ScheduledGovernanceTransferAtTime",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deliver_on",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transfers",
              "description": "",
              "label": "repeated",
              "type": "GovernanceTransfer",
              "longType": "GovernanceTransfer",
              "fullType": "vega.checkpoint.v1.GovernanceTransfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScheduledTransfer",
          "longName": "ScheduledTransfer",
          "fullName": "vega.checkpoint.v1.ScheduledTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.Transfer",
              "fullType": "vega.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_type",
              "description": "",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oneoff_transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.events.v1.Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScheduledTransferAtTime",
          "longName": "ScheduledTransferAtTime",
          "fullName": "vega.checkpoint.v1.ScheduledTransferAtTime",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deliver_on",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transfers",
              "description": "",
              "label": "repeated",
              "type": "ScheduledTransfer",
              "longType": "ScheduledTransfer",
              "fullType": "vega.checkpoint.v1.ScheduledTransfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Staking",
          "longName": "Staking",
          "fullName": "vega.checkpoint.v1.Staking",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accepted",
              "description": "",
              "label": "repeated",
              "type": "StakeLinking",
              "longType": "vega.events.v1.StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_block_seen",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TWNotionalData",
          "longName": "TWNotionalData",
          "fullName": "vega.checkpoint.v1.TWNotionalData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "notional",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tw_notional",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TWPositionData",
          "longName": "TWPositionData",
          "fullName": "vega.checkpoint.v1.TWPositionData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "position",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tw_position",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TakerNotionalVolume",
          "longName": "TakerNotionalVolume",
          "fullName": "vega.checkpoint.v1.TakerNotionalVolume",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorState",
          "longName": "ValidatorState",
          "fullName": "vega.checkpoint.v1.ValidatorState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_update",
              "description": "",
              "label": "",
              "type": "ValidatorUpdate",
              "longType": "vega.events.v1.ValidatorUpdate",
              "fullType": "vega.events.v1.ValidatorUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "eth_events_forwarded",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_power",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "",
              "label": "",
              "type": "RankingScore",
              "longType": "vega.RankingScore",
              "fullType": "vega.RankingScore",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "heartbeat_block_index",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "heartbeat_block_sigs",
              "description": "",
              "label": "repeated",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Validators",
          "longName": "Validators",
          "fullName": "vega.checkpoint.v1.Validators",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_state",
              "description": "",
              "label": "repeated",
              "type": "ValidatorState",
              "longType": "ValidatorState",
              "fullType": "vega.checkpoint.v1.ValidatorState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_key_rotations",
              "description": "",
              "label": "repeated",
              "type": "PendingKeyRotation",
              "longType": "PendingKeyRotation",
              "fullType": "vega.checkpoint.v1.PendingKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_ethereum_key_rotations",
              "description": "",
              "label": "repeated",
              "type": "PendingEthereumKeyRotation",
              "longType": "PendingEthereumKeyRotation",
              "fullType": "vega.checkpoint.v1.PendingEthereumKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/snapshot/v1/snapshot.proto",
      "description": "",
      "package": "vega.snapshot.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Format",
          "longName": "Format",
          "fullName": "vega.snapshot.v1.Format",
          "description": "",
          "values": [
            {
              "name": "FORMAT_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "FORMAT_PROTO",
              "number": "1",
              "description": "Standard proto encoding"
            },
            {
              "name": "FORMAT_PROTO_COMPRESSED",
              "number": "2",
              "description": "Compressed proto, might come in handy"
            },
            {
              "name": "FORMAT_JSON",
              "number": "3",
              "description": "Simple JSON serialisation, probably not going to be used"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AcceptedProtocolUpgradeProposal",
          "longName": "AcceptedProtocolUpgradeProposal",
          "fullName": "vega.snapshot.v1.AcceptedProtocolUpgradeProposal",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "upgrade_block_height",
              "description": "Block height at which to perform the upgrade",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_release_tag",
              "description": "Release tag for the vega binary",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ActiveAssets",
          "longName": "ActiveAssets",
          "fullName": "vega.snapshot.v1.ActiveAssets",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ActivityStreak",
          "longName": "ActivityStreak",
          "fullName": "vega.snapshot.v1.ActivityStreak",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties_activity_streak",
              "description": "",
              "label": "repeated",
              "type": "PartyActivityStreak",
              "longType": "PartyActivityStreak",
              "fullType": "vega.snapshot.v1.PartyActivityStreak",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AppState",
          "longName": "AppState",
          "fullName": "vega.snapshot.v1.AppState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "protocol_version",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetLocked",
          "longName": "AssetLocked",
          "fullName": "vega.snapshot.v1.AssetLocked",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_balances",
              "description": "",
              "label": "repeated",
              "type": "EpochBalance",
              "longType": "EpochBalance",
              "fullType": "vega.snapshot.v1.EpochBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuctionState",
          "longName": "AuctionState",
          "fullName": "vega.snapshot.v1.AuctionState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mode",
              "description": "",
              "label": "",
              "type": "TradingMode",
              "longType": "vega.Market.TradingMode",
              "fullType": "vega.Market.TradingMode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "default_mode",
              "description": "",
              "label": "",
              "type": "TradingMode",
              "longType": "vega.Market.TradingMode",
              "fullType": "vega.Market.TradingMode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "vega.AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "begin",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end",
              "description": "",
              "label": "",
              "type": "AuctionDuration",
              "longType": "vega.AuctionDuration",
              "fullType": "vega.AuctionDuration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stop",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extension",
              "description": "",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "vega.AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extension_event_sent",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingAssetActions",
          "longName": "BankingAssetActions",
          "fullName": "vega.snapshot.v1.BankingAssetActions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_action",
              "description": "",
              "label": "repeated",
              "type": "AssetAction",
              "longType": "vega.checkpoint.v1.AssetAction",
              "fullType": "vega.checkpoint.v1.AssetAction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingBridgeState",
          "longName": "BankingBridgeState",
          "fullName": "vega.snapshot.v1.BankingBridgeState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bridge_state",
              "description": "",
              "label": "",
              "type": "BridgeState",
              "longType": "vega.checkpoint.v1.BridgeState",
              "fullType": "vega.checkpoint.v1.BridgeState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingDeposits",
          "longName": "BankingDeposits",
          "fullName": "vega.snapshot.v1.BankingDeposits",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deposit",
              "description": "",
              "label": "repeated",
              "type": "Deposit",
              "longType": "Deposit",
              "fullType": "vega.snapshot.v1.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingRecurringGovernanceTransfers",
          "longName": "BankingRecurringGovernanceTransfers",
          "fullName": "vega.snapshot.v1.BankingRecurringGovernanceTransfers",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "recurring_transfers",
              "description": "",
              "label": "repeated",
              "type": "GovernanceTransfer",
              "longType": "vega.checkpoint.v1.GovernanceTransfer",
              "fullType": "vega.checkpoint.v1.GovernanceTransfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingRecurringTransfers",
          "longName": "BankingRecurringTransfers",
          "fullName": "vega.snapshot.v1.BankingRecurringTransfers",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "recurring_transfers",
              "description": "",
              "label": "",
              "type": "RecurringTransfers",
              "longType": "vega.checkpoint.v1.RecurringTransfers",
              "fullType": "vega.checkpoint.v1.RecurringTransfers",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingScheduledGovernanceTransfers",
          "longName": "BankingScheduledGovernanceTransfers",
          "fullName": "vega.snapshot.v1.BankingScheduledGovernanceTransfers",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfers_at_time",
              "description": "",
              "label": "repeated",
              "type": "ScheduledGovernanceTransferAtTime",
              "longType": "vega.checkpoint.v1.ScheduledGovernanceTransferAtTime",
              "fullType": "vega.checkpoint.v1.ScheduledGovernanceTransferAtTime",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingScheduledTransfers",
          "longName": "BankingScheduledTransfers",
          "fullName": "vega.snapshot.v1.BankingScheduledTransfers",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfers_at_time",
              "description": "",
              "label": "repeated",
              "type": "ScheduledTransferAtTime",
              "longType": "vega.checkpoint.v1.ScheduledTransferAtTime",
              "fullType": "vega.checkpoint.v1.ScheduledTransferAtTime",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingSeen",
          "longName": "BankingSeen",
          "fullName": "vega.snapshot.v1.BankingSeen",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "refs",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_seen_eth_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingWithdrawals",
          "longName": "BankingWithdrawals",
          "fullName": "vega.snapshot.v1.BankingWithdrawals",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawals",
              "description": "",
              "label": "repeated",
              "type": "Withdrawal",
              "longType": "Withdrawal",
              "fullType": "vega.snapshot.v1.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BannedParty",
          "longName": "BannedParty",
          "fullName": "vega.snapshot.v1.BannedParty",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "until",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BlockRejectStats",
          "longName": "BlockRejectStats",
          "fullName": "vega.snapshot.v1.BlockRejectStats",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "rejected",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Checkpoint",
          "longName": "Checkpoint",
          "fullName": "vega.snapshot.v1.Checkpoint",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "next_cp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Chunk",
          "longName": "Chunk",
          "fullName": "vega.snapshot.v1.Chunk",
          "description": "Chunk is simply an as-is chunk belonging to a snapshot\nnot sure how usable this type would be",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "",
              "label": "repeated",
              "type": "Payload",
              "longType": "Payload",
              "fullType": "vega.snapshot.v1.Payload",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nr",
              "description": "in case of multi-part data, this is chunk nr...",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "of",
              "description": "...of a total of N chunks",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollateralAccounts",
          "longName": "CollateralAccounts",
          "fullName": "vega.snapshot.v1.CollateralAccounts",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "",
              "label": "repeated",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_balance_snapshot",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollateralAssets",
          "longName": "CollateralAssets",
          "fullName": "vega.snapshot.v1.CollateralAssets",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CurrentPrice",
          "longName": "CurrentPrice",
          "fullName": "vega.snapshot.v1.CurrentPrice",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DataPoint",
          "longName": "DataPoint",
          "fullName": "vega.snapshot.v1.DataPoint",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DecimalMap",
          "longName": "DecimalMap",
          "fullName": "vega.snapshot.v1.DecimalMap",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "val",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationActive",
          "longName": "DelegationActive",
          "fullName": "vega.snapshot.v1.DelegationActive",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegations",
              "description": "",
              "label": "repeated",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationAuto",
          "longName": "DelegationAuto",
          "fullName": "vega.snapshot.v1.DelegationAuto",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationLastReconciliationTime",
          "longName": "DelegationLastReconciliationTime",
          "fullName": "vega.snapshot.v1.DelegationLastReconciliationTime",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "last_reconciliation_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationPending",
          "longName": "DelegationPending",
          "fullName": "vega.snapshot.v1.DelegationPending",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegations",
              "description": "",
              "label": "repeated",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "undelegation",
              "description": "",
              "label": "repeated",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Deposit",
          "longName": "Deposit",
          "fullName": "vega.snapshot.v1.Deposit",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deposit",
              "description": "",
              "label": "",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigTopologyPending",
          "longName": "ERC20MultiSigTopologyPending",
          "fullName": "vega.snapshot.v1.ERC20MultiSigTopologyPending",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pending_signers",
              "description": "",
              "label": "repeated",
              "type": "ERC20MultiSigSignerEvent",
              "longType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_threshold_set",
              "description": "",
              "label": "repeated",
              "type": "ERC20MultiSigThresholdSetEvent",
              "longType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "fullType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "witnessed_signers",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "witnessed_threshold_sets",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigTopologyVerified",
          "longName": "ERC20MultiSigTopologyVerified",
          "fullName": "vega.snapshot.v1.ERC20MultiSigTopologyVerified",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signers",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "events_per_address",
              "description": "",
              "label": "repeated",
              "type": "SignerEventsPerAddress",
              "longType": "SignerEventsPerAddress",
              "fullType": "vega.snapshot.v1.SignerEventsPerAddress",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "threshold",
              "description": "",
              "label": "",
              "type": "ERC20MultiSigThresholdSetEvent",
              "longType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "fullType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seen_events",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochBalance",
          "longName": "EpochBalance",
          "fullName": "vega.snapshot.v1.EpochBalance",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochPartyVolumes",
          "longName": "EpochPartyVolumes",
          "fullName": "vega.snapshot.v1.EpochPartyVolumes",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_volume",
              "description": "",
              "label": "repeated",
              "type": "PartyVolume",
              "longType": "PartyVolume",
              "fullType": "vega.snapshot.v1.PartyVolume",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochState",
          "longName": "EpochState",
          "fullName": "vega.snapshot.v1.EpochState",
          "description": "EpochState details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seq",
              "description": "Sequence number that increases by one each epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "Time at which this epoch started",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expire_time",
              "description": "Time at which this epoch should end",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ready_to_start_new_epoch",
              "description": "Ready to start a new epoch",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ready_to_end_epoch",
              "description": "Ready to end epoch",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EquityShare",
          "longName": "EquityShare",
          "fullName": "vega.snapshot.v1.EquityShare",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mvp",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "opening_auction_ended",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lps",
              "description": "",
              "label": "repeated",
              "type": "EquityShareLP",
              "longType": "EquityShareLP",
              "fullType": "vega.snapshot.v1.EquityShareLP",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "r",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "p_mvp",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EquityShareLP",
          "longName": "EquityShareLP",
          "fullName": "vega.snapshot.v1.EquityShareLP",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "share",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avg",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vshare",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthContractCallResult",
          "longName": "EthContractCallResult",
          "fullName": "vega.snapshot.v1.EthContractCallResult",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spec_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "result",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_error",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthContractCallResults",
          "longName": "EthContractCallResults",
          "fullName": "vega.snapshot.v1.EthContractCallResults",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pending_contract_call_result",
              "description": "",
              "label": "repeated",
              "type": "EthContractCallResult",
              "longType": "EthContractCallResult",
              "fullType": "vega.snapshot.v1.EthContractCallResult",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthOracleVerifierLastBlock",
          "longName": "EthOracleVerifierLastBlock",
          "fullName": "vega.snapshot.v1.EthOracleVerifierLastBlock",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EventForwarder",
          "longName": "EventForwarder",
          "fullName": "vega.snapshot.v1.EventForwarder",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "acked_events",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecutionMarkets",
          "longName": "ExecutionMarkets",
          "fullName": "vega.snapshot.v1.ExecutionMarkets",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets",
              "description": "",
              "label": "repeated",
              "type": "Market",
              "longType": "Market",
              "fullType": "vega.snapshot.v1.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spot_markets",
              "description": "",
              "label": "repeated",
              "type": "SpotMarket",
              "longType": "SpotMarket",
              "fullType": "vega.snapshot.v1.SpotMarket",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "settled_markets",
              "description": "",
              "label": "repeated",
              "type": "MarketState",
              "longType": "vega.checkpoint.v1.MarketState",
              "fullType": "vega.checkpoint.v1.MarketState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "successors",
              "description": "",
              "label": "repeated",
              "type": "Successors",
              "longType": "Successors",
              "fullType": "vega.snapshot.v1.Successors",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_ids",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sla_network_params",
              "description": "",
              "label": "",
              "type": "SLANetworkParams",
              "longType": "SLANetworkParams",
              "fullType": "vega.snapshot.v1.SLANetworkParams",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FactorByReferee",
          "longName": "FactorByReferee",
          "fullName": "vega.snapshot.v1.FactorByReferee",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "discount_factor",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "taker_volume",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeeSplitter",
          "longName": "FeeSplitter",
          "fullName": "vega.snapshot.v1.FeeSplitter",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "time_window_start",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trade_value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avg",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FloatingPointConsensus",
          "longName": "FloatingPointConsensus",
          "fullName": "vega.snapshot.v1.FloatingPointConsensus",
          "description": "Snapshot payload for floating point consensus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "next_time_trigger",
              "description": "",
              "label": "repeated",
              "type": "NextTimeTrigger",
              "longType": "NextTimeTrigger",
              "fullType": "vega.snapshot.v1.NextTimeTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state_variables",
              "description": "",
              "label": "repeated",
              "type": "StateVarInternalState",
              "longType": "StateVarInternalState",
              "fullType": "vega.snapshot.v1.StateVarInternalState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FloatingPointValidatorResult",
          "longName": "FloatingPointValidatorResult",
          "fullName": "vega.snapshot.v1.FloatingPointValidatorResult",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bundle",
              "description": "",
              "label": "repeated",
              "type": "KeyValueBundle",
              "longType": "vega.KeyValueBundle",
              "fullType": "vega.KeyValueBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceActive",
          "longName": "GovernanceActive",
          "fullName": "vega.snapshot.v1.GovernanceActive",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "ProposalData",
              "longType": "ProposalData",
              "fullType": "vega.snapshot.v1.ProposalData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceEnacted",
          "longName": "GovernanceEnacted",
          "fullName": "vega.snapshot.v1.GovernanceEnacted",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "ProposalData",
              "longType": "ProposalData",
              "fullType": "vega.snapshot.v1.ProposalData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceNode",
          "longName": "GovernanceNode",
          "fullName": "vega.snapshot.v1.GovernanceNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "HeartbeatTracker",
          "longName": "HeartbeatTracker",
          "fullName": "vega.snapshot.v1.HeartbeatTracker",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "expected_next_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expected_next_hash_since",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_index",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_sigs",
              "description": "",
              "label": "repeated",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "HoldingAccountTracker",
          "longName": "HoldingAccountTracker",
          "fullName": "vega.snapshot.v1.HoldingAccountTracker",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_holding",
              "description": "",
              "label": "repeated",
              "type": "OrderHoldingQuantities",
              "longType": "OrderHoldingQuantities",
              "fullType": "vega.snapshot.v1.OrderHoldingQuantities",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InVesting",
          "longName": "InVesting",
          "fullName": "vega.snapshot.v1.InVesting",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IssuedERC20MultisigControlSignature",
          "longName": "IssuedERC20MultisigControlSignature",
          "fullName": "vega.snapshot.v1.IssuedERC20MultisigControlSignature",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resource_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LastSettledPosition",
          "longName": "LastSettledPosition",
          "fullName": "vega.snapshot.v1.LastSettledPosition",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "settled_position",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LimitState",
          "longName": "LimitState",
          "fullName": "vega.snapshot.v1.LimitState",
          "description": "LimitState details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_count",
              "description": "Number of blocks into the bootstrapping phase",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "can_propose_market",
              "description": "Whether or not the limit on market proposals has been lifted",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "can_propose_asset",
              "description": "Whether or not the limit on asset proposals has been lifted",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "genesis_loaded",
              "description": "Whether or not the genesis state is loaded",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_market_enabled",
              "description": "Fields derived from the genesis state",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_asset_enabled",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_market_enabled_from",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_asset_enabled_from",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_spot_market_enabled",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_perps_market_enabled",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityOffsetProbabilityPair",
          "longName": "LiquidityOffsetProbabilityPair",
          "fullName": "vega.snapshot.v1.LiquidityOffsetProbabilityPair",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "offset",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "probability",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityParameters",
          "longName": "LiquidityParameters",
          "fullName": "vega.snapshot.v1.LiquidityParameters",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "max_fee",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_shape_size",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_to_obligation_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID these liquidity parameters apply to. Required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityPartiesLiquidityOrders",
          "longName": "LiquidityPartiesLiquidityOrders",
          "fullName": "vega.snapshot.v1.LiquidityPartiesLiquidityOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_orders",
              "description": "",
              "label": "repeated",
              "type": "PartyOrders",
              "longType": "PartyOrders",
              "fullType": "vega.snapshot.v1.PartyOrders",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID these liquidity orders apply to. Required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityPartiesOrders",
          "longName": "LiquidityPartiesOrders",
          "fullName": "vega.snapshot.v1.LiquidityPartiesOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_orders",
              "description": "",
              "label": "repeated",
              "type": "PartyOrders",
              "longType": "PartyOrders",
              "fullType": "vega.snapshot.v1.PartyOrders",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID these orders apply to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityPendingProvisions",
          "longName": "LiquidityPendingProvisions",
          "fullName": "vega.snapshot.v1.LiquidityPendingProvisions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pending_provisions",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID these liquidity provisions apply to. Required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisions",
          "longName": "LiquidityProvisions",
          "fullName": "vega.snapshot.v1.LiquidityProvisions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "liquidity_provisions",
              "description": "",
              "label": "repeated",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market ID these provisions apply to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityScore",
          "longName": "LiquidityScore",
          "fullName": "vega.snapshot.v1.LiquidityScore",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityScores",
          "longName": "LiquidityScores",
          "fullName": "vega.snapshot.v1.LiquidityScores",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "running_average_counter",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scores",
              "description": "",
              "label": "repeated",
              "type": "LiquidityScore",
              "longType": "LiquidityScore",
              "fullType": "vega.snapshot.v1.LiquidityScore",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquiditySupplied",
          "longName": "LiquiditySupplied",
          "fullName": "vega.snapshot.v1.LiquiditySupplied",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "consensus_reached",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bid_cache",
              "description": "",
              "label": "repeated",
              "type": "LiquidityOffsetProbabilityPair",
              "longType": "LiquidityOffsetProbabilityPair",
              "fullType": "vega.snapshot.v1.LiquidityOffsetProbabilityPair",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ask_cache",
              "description": "",
              "label": "repeated",
              "type": "LiquidityOffsetProbabilityPair",
              "longType": "LiquidityOffsetProbabilityPair",
              "fullType": "vega.snapshot.v1.LiquidityOffsetProbabilityPair",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityTarget",
          "longName": "LiquidityTarget",
          "fullName": "vega.snapshot.v1.LiquidityTarget",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scheduled_truncate",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_open_interests",
              "description": "",
              "label": "repeated",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_open_interests",
              "description": "",
              "label": "repeated",
              "type": "TimestampedOpenInterest",
              "longType": "TimestampedOpenInterest",
              "fullType": "vega.snapshot.v1.TimestampedOpenInterest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_open_interests",
              "description": "",
              "label": "",
              "type": "TimestampedOpenInterest",
              "longType": "TimestampedOpenInterest",
              "fullType": "vega.snapshot.v1.TimestampedOpenInterest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityV2PaidFeesStats",
          "longName": "LiquidityV2PaidFeesStats",
          "fullName": "vega.snapshot.v1.LiquidityV2PaidFeesStats",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID these liquidity parameters apply to. Required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stats",
              "description": "",
              "label": "",
              "type": "PaidLiquidityFeesStats",
              "longType": "vega.events.v1.PaidLiquidityFeesStats",
              "fullType": "vega.events.v1.PaidLiquidityFeesStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityV2Parameters",
          "longName": "LiquidityV2Parameters",
          "fullName": "vega.snapshot.v1.LiquidityV2Parameters",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID these liquidity parameters apply to. Required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_sla_parameters",
              "description": "market specific SLA parameters, will be different than the ones in the market\nsnapshot since they apply at the end of an epoch",
              "label": "",
              "type": "LiquiditySLAParameters",
              "longType": "vega.LiquiditySLAParameters",
              "fullType": "vega.LiquiditySLAParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_to_volume",
              "description": "network wide SLA parameters, will be different than network paramters in the\nsnapshot since they apply at the end of an epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_penalty_slope",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_penalty_max",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_penalties_disabled_remaining_epochs",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityV2PendingProvisions",
          "longName": "LiquidityV2PendingProvisions",
          "fullName": "vega.snapshot.v1.LiquidityV2PendingProvisions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID these liquidity parameters apply to. Required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_liquidity_provisions",
              "description": "",
              "label": "repeated",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityV2PerformancePerParty",
          "longName": "LiquidityV2PerformancePerParty",
          "fullName": "vega.snapshot.v1.LiquidityV2PerformancePerParty",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "elapsed_time_meeting_sla_during_epoch",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commitment_start_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "registered_penalties_per_epoch",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "position_in_penalties_per_epoch",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_epoch_fraction_of_time_on_book",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_epoch_fee_penalty",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_epoch_bond_penalty",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "required_liquidity",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "notional_volume_buys",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "notional_volume_sells",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityV2Performances",
          "longName": "LiquidityV2Performances",
          "fullName": "vega.snapshot.v1.LiquidityV2Performances",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID these liquidity parameters apply to. Required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_start_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "performance_per_party",
              "description": "",
              "label": "repeated",
              "type": "LiquidityV2PerformancePerParty",
              "longType": "LiquidityV2PerformancePerParty",
              "fullType": "vega.snapshot.v1.LiquidityV2PerformancePerParty",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityV2Provisions",
          "longName": "LiquidityV2Provisions",
          "fullName": "vega.snapshot.v1.LiquidityV2Provisions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID these liquidity parameters apply to. Required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provisions",
              "description": "",
              "label": "repeated",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityV2Scores",
          "longName": "LiquidityV2Scores",
          "fullName": "vega.snapshot.v1.LiquidityV2Scores",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID these liquidity parameters apply to. Required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "running_average_counter",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scores",
              "description": "",
              "label": "repeated",
              "type": "LiquidityScore",
              "longType": "LiquidityScore",
              "fullType": "vega.snapshot.v1.LiquidityScore",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_fee_distribution_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee_calculation_time_step",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityV2Supplied",
          "longName": "LiquidityV2Supplied",
          "fullName": "vega.snapshot.v1.LiquidityV2Supplied",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market ID these liquidity parameters apply to. Required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "consensus_reached",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bid_cache",
              "description": "",
              "label": "repeated",
              "type": "LiquidityOffsetProbabilityPair",
              "longType": "LiquidityOffsetProbabilityPair",
              "fullType": "vega.snapshot.v1.LiquidityOffsetProbabilityPair",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ask_cache",
              "description": "",
              "label": "repeated",
              "type": "LiquidityOffsetProbabilityPair",
              "longType": "LiquidityOffsetProbabilityPair",
              "fullType": "vega.snapshot.v1.LiquidityOffsetProbabilityPair",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Market",
          "longName": "Market",
          "fullName": "vega.snapshot.v1.Market",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitor",
              "description": "",
              "label": "",
              "type": "PriceMonitor",
              "longType": "PriceMonitor",
              "fullType": "vega.snapshot.v1.PriceMonitor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_state",
              "description": "",
              "label": "",
              "type": "AuctionState",
              "longType": "AuctionState",
              "fullType": "vega.snapshot.v1.AuctionState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_orders",
              "description": "",
              "label": "",
              "type": "PeggedOrders",
              "longType": "PeggedOrders",
              "fullType": "vega.snapshot.v1.PeggedOrders",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiring_orders",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_best_bid",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_best_ask",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_mid_bid",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_mid_ask",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_market_value_proxy",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_equity_share_distributed",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "equity_share",
              "description": "",
              "label": "",
              "type": "EquityShare",
              "longType": "EquityShare",
              "fullType": "vega.snapshot.v1.EquityShare",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_mark_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "risk_factor_short",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "risk_factor_long",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "risk_factor_consensus_reached",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee_splitter",
              "description": "",
              "label": "",
              "type": "FeeSplitter",
              "longType": "FeeSplitter",
              "fullType": "vega.snapshot.v1.FeeSplitter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "settlement_data",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_mark_to_market",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_traded_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parties",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "succeeded",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stop_orders",
              "description": "",
              "label": "",
              "type": "StopOrders",
              "longType": "StopOrders",
              "fullType": "vega.snapshot.v1.StopOrders",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiring_stop_orders",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "product",
              "description": "",
              "label": "",
              "type": "Product",
              "longType": "Product",
              "fullType": "vega.snapshot.v1.Product",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fees_stats",
              "description": "",
              "label": "",
              "type": "FeesStats",
              "longType": "vega.events.v1.FeesStats",
              "fullType": "vega.events.v1.FeesStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketPositions",
          "longName": "MarketPositions",
          "fullName": "vega.snapshot.v1.MarketPositions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "positions",
              "description": "",
              "label": "repeated",
              "type": "Position",
              "longType": "Position",
              "fullType": "vega.snapshot.v1.Position",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parties_records",
              "description": "",
              "label": "repeated",
              "type": "PartyPositionStats",
              "longType": "PartyPositionStats",
              "fullType": "vega.snapshot.v1.PartyPositionStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketTracker",
          "longName": "MarketTracker",
          "fullName": "vega.snapshot.v1.MarketTracker",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_activity",
              "description": "",
              "label": "repeated",
              "type": "MarketActivityTracker",
              "longType": "vega.checkpoint.v1.MarketActivityTracker",
              "fullType": "vega.checkpoint.v1.MarketActivityTracker",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "taker_notional_volume",
              "description": "",
              "label": "repeated",
              "type": "TakerNotionalVolume",
              "longType": "vega.checkpoint.v1.TakerNotionalVolume",
              "fullType": "vega.checkpoint.v1.TakerNotionalVolume",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MatchingBook",
          "longName": "MatchingBook",
          "fullName": "vega.snapshot.v1.MatchingBook",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_traded_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_id",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_order_ids",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Membership",
          "longName": "Membership",
          "fullName": "vega.snapshot.v1.Membership",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "joined_at",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "started_at_epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Metadata",
          "longName": "Metadata",
          "fullName": "vega.snapshot.v1.Metadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chunk_hashes",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_hashes",
              "description": "",
              "label": "repeated",
              "type": "NodeHash",
              "longType": "NodeHash",
              "fullType": "vega.snapshot.v1.NodeHash",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "protocol_version",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetParams",
          "longName": "NetParams",
          "fullName": "vega.snapshot.v1.NetParams",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "",
              "label": "repeated",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NextTimeTrigger",
          "longName": "NextTimeTrigger",
          "fullName": "vega.snapshot.v1.NextTimeTrigger",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_trigger",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeHash",
          "longName": "NodeHash",
          "fullName": "vega.snapshot.v1.NodeHash",
          "description": "NodeHash represents an exported node from the AVL tree and contains all the\ndata necessary to reconstruct an identical copy of the AVL tree after it's\nbeen serialised",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "Node's full key, for example epoch.all",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "Hash of the node's value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "height",
              "description": "Height of the node in the tree",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of that node i.e., how many times its value has changed during tree\nupdates",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_leaf",
              "description": "Whether or not the node contains a snapshot payload, only leaf nodes in the\nAVL contain payloads",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NonceRef",
          "longName": "NonceRef",
          "fullName": "vega.snapshot.v1.NonceRef",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NonceRefsAtHeight",
          "longName": "NonceRefsAtHeight",
          "fullName": "vega.snapshot.v1.NonceRefsAtHeight",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "refs",
              "description": "",
              "label": "repeated",
              "type": "NonceRef",
              "longType": "NonceRef",
              "fullType": "vega.snapshot.v1.NonceRef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Notary",
          "longName": "Notary",
          "fullName": "vega.snapshot.v1.Notary",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "notary_sigs",
              "description": "",
              "label": "repeated",
              "type": "NotarySigs",
              "longType": "NotarySigs",
              "fullType": "vega.snapshot.v1.NotarySigs",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NotarySigs",
          "longName": "NotarySigs",
          "fullName": "vega.snapshot.v1.NotarySigs",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "kind",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sig",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OffsetsAtPrice",
          "longName": "OffsetsAtPrice",
          "fullName": "vega.snapshot.v1.OffsetsAtPrice",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offsets",
              "description": "",
              "label": "repeated",
              "type": "OrdersAtOffset",
              "longType": "OrdersAtOffset",
              "fullType": "vega.snapshot.v1.OrdersAtOffset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleData",
          "longName": "OracleData",
          "fullName": "vega.snapshot.v1.OracleData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signers",
              "description": "",
              "label": "repeated",
              "type": "Signer",
              "longType": "vega.data.v1.Signer",
              "fullType": "vega.data.v1.Signer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "",
              "label": "repeated",
              "type": "OracleDataPair",
              "longType": "OracleDataPair",
              "fullType": "vega.snapshot.v1.OracleDataPair",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "meta_data",
              "description": "",
              "label": "repeated",
              "type": "Property",
              "longType": "vega.data.v1.Property",
              "fullType": "vega.data.v1.Property",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleDataBatch",
          "longName": "OracleDataBatch",
          "fullName": "vega.snapshot.v1.OracleDataBatch",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_data",
              "description": "",
              "label": "repeated",
              "type": "OracleData",
              "longType": "OracleData",
              "fullType": "vega.snapshot.v1.OracleData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleDataPair",
          "longName": "OracleDataPair",
          "fullName": "vega.snapshot.v1.OracleDataPair",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderHoldingQuantities",
          "longName": "OrderHoldingQuantities",
          "fullName": "vega.snapshot.v1.OrderHoldingQuantities",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantity",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrdersAtOffset",
          "longName": "OrdersAtOffset",
          "fullName": "vega.snapshot.v1.OrdersAtOffset",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "offset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "orders",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrdersAtPrice",
          "longName": "OrdersAtPrice",
          "fullName": "vega.snapshot.v1.OrdersAtPrice",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "orders",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyActivityStreak",
          "longName": "PartyActivityStreak",
          "fullName": "vega.snapshot.v1.PartyActivityStreak",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "active",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inactive",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_distribution_multiplier",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_vesting_multiplier",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyOrders",
          "longName": "PartyOrders",
          "fullName": "vega.snapshot.v1.PartyOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "orders",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyPositionStats",
          "longName": "PartyPositionStats",
          "fullName": "vega.snapshot.v1.PartyPositionStats",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "latest_open_interest",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_latest_open_interest",
              "defaultValue": ""
            },
            {
              "name": "lowest_open_interest",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_lowest_open_interest",
              "defaultValue": ""
            },
            {
              "name": "traded_volume",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_traded_volume",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyProposalVoteCount",
          "longName": "PartyProposalVoteCount",
          "fullName": "vega.snapshot.v1.PartyProposalVoteCount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposal",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "count",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyReward",
          "longName": "PartyReward",
          "fullName": "vega.snapshot.v1.PartyReward",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_locked",
              "description": "",
              "label": "repeated",
              "type": "AssetLocked",
              "longType": "AssetLocked",
              "fullType": "vega.snapshot.v1.AssetLocked",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "in_vesting",
              "description": "",
              "label": "repeated",
              "type": "InVesting",
              "longType": "InVesting",
              "fullType": "vega.snapshot.v1.InVesting",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyTokenBalance",
          "longName": "PartyTokenBalance",
          "fullName": "vega.snapshot.v1.PartyTokenBalance",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyVolume",
          "longName": "PartyVolume",
          "fullName": "vega.snapshot.v1.PartyVolume",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PastPrice",
          "longName": "PastPrice",
          "fullName": "vega.snapshot.v1.PastPrice",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume_weighted_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Payload",
          "longName": "Payload",
          "fullName": "vega.snapshot.v1.Payload",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "active_assets",
              "description": "",
              "label": "",
              "type": "ActiveAssets",
              "longType": "ActiveAssets",
              "fullType": "vega.snapshot.v1.ActiveAssets",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "pending_assets",
              "description": "",
              "label": "",
              "type": "PendingAssets",
              "longType": "PendingAssets",
              "fullType": "vega.snapshot.v1.PendingAssets",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_withdrawals",
              "description": "",
              "label": "",
              "type": "BankingWithdrawals",
              "longType": "BankingWithdrawals",
              "fullType": "vega.snapshot.v1.BankingWithdrawals",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_deposits",
              "description": "",
              "label": "",
              "type": "BankingDeposits",
              "longType": "BankingDeposits",
              "fullType": "vega.snapshot.v1.BankingDeposits",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_seen",
              "description": "",
              "label": "",
              "type": "BankingSeen",
              "longType": "BankingSeen",
              "fullType": "vega.snapshot.v1.BankingSeen",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_asset_actions",
              "description": "",
              "label": "",
              "type": "BankingAssetActions",
              "longType": "BankingAssetActions",
              "fullType": "vega.snapshot.v1.BankingAssetActions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "checkpoint",
              "description": "",
              "label": "",
              "type": "Checkpoint",
              "longType": "Checkpoint",
              "fullType": "vega.snapshot.v1.Checkpoint",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "collateral_accounts",
              "description": "",
              "label": "",
              "type": "CollateralAccounts",
              "longType": "CollateralAccounts",
              "fullType": "vega.snapshot.v1.CollateralAccounts",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "collateral_assets",
              "description": "",
              "label": "",
              "type": "CollateralAssets",
              "longType": "CollateralAssets",
              "fullType": "vega.snapshot.v1.CollateralAssets",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "delegation_active",
              "description": "",
              "label": "",
              "type": "DelegationActive",
              "longType": "DelegationActive",
              "fullType": "vega.snapshot.v1.DelegationActive",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "delegation_pending",
              "description": "",
              "label": "",
              "type": "DelegationPending",
              "longType": "DelegationPending",
              "fullType": "vega.snapshot.v1.DelegationPending",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "delegation_auto",
              "description": "",
              "label": "",
              "type": "DelegationAuto",
              "longType": "DelegationAuto",
              "fullType": "vega.snapshot.v1.DelegationAuto",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "governance_active",
              "description": "",
              "label": "",
              "type": "GovernanceActive",
              "longType": "GovernanceActive",
              "fullType": "vega.snapshot.v1.GovernanceActive",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "governance_enacted",
              "description": "",
              "label": "",
              "type": "GovernanceEnacted",
              "longType": "GovernanceEnacted",
              "fullType": "vega.snapshot.v1.GovernanceEnacted",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "staking_accounts",
              "description": "",
              "label": "",
              "type": "StakingAccounts",
              "longType": "StakingAccounts",
              "fullType": "vega.snapshot.v1.StakingAccounts",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "matching_book",
              "description": "",
              "label": "",
              "type": "MatchingBook",
              "longType": "MatchingBook",
              "fullType": "vega.snapshot.v1.MatchingBook",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "network_parameters",
              "description": "",
              "label": "",
              "type": "NetParams",
              "longType": "NetParams",
              "fullType": "vega.snapshot.v1.NetParams",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "execution_markets",
              "description": "",
              "label": "",
              "type": "ExecutionMarkets",
              "longType": "ExecutionMarkets",
              "fullType": "vega.snapshot.v1.ExecutionMarkets",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "market_positions",
              "description": "",
              "label": "",
              "type": "MarketPositions",
              "longType": "MarketPositions",
              "fullType": "vega.snapshot.v1.MarketPositions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "app_state",
              "description": "",
              "label": "",
              "type": "AppState",
              "longType": "AppState",
              "fullType": "vega.snapshot.v1.AppState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "EpochState",
              "longType": "EpochState",
              "fullType": "vega.snapshot.v1.EpochState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "rewards_pending_payouts",
              "description": "",
              "label": "",
              "type": "RewardsPendingPayouts",
              "longType": "RewardsPendingPayouts",
              "fullType": "vega.snapshot.v1.RewardsPendingPayouts",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "governance_node",
              "description": "",
              "label": "",
              "type": "GovernanceNode",
              "longType": "GovernanceNode",
              "fullType": "vega.snapshot.v1.GovernanceNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "limit_state",
              "description": "",
              "label": "",
              "type": "LimitState",
              "longType": "LimitState",
              "fullType": "vega.snapshot.v1.LimitState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "vote_spam_policy",
              "description": "",
              "label": "",
              "type": "VoteSpamPolicy",
              "longType": "VoteSpamPolicy",
              "fullType": "vega.snapshot.v1.VoteSpamPolicy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "simple_spam_policy",
              "description": "",
              "label": "",
              "type": "SimpleSpamPolicy",
              "longType": "SimpleSpamPolicy",
              "fullType": "vega.snapshot.v1.SimpleSpamPolicy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "notary",
              "description": "",
              "label": "",
              "type": "Notary",
              "longType": "Notary",
              "fullType": "vega.snapshot.v1.Notary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "event_forwarder",
              "description": "",
              "label": "",
              "type": "EventForwarder",
              "longType": "EventForwarder",
              "fullType": "vega.snapshot.v1.EventForwarder",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "stake_verifier_deposited",
              "description": "",
              "label": "",
              "type": "StakeVerifierDeposited",
              "longType": "StakeVerifierDeposited",
              "fullType": "vega.snapshot.v1.StakeVerifierDeposited",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "stake_verifier_removed",
              "description": "",
              "label": "",
              "type": "StakeVerifierRemoved",
              "longType": "StakeVerifierRemoved",
              "fullType": "vega.snapshot.v1.StakeVerifierRemoved",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "witness",
              "description": "",
              "label": "",
              "type": "Witness",
              "longType": "Witness",
              "fullType": "vega.snapshot.v1.Witness",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "delegation_last_reconciliation_time",
              "description": "",
              "label": "",
              "type": "DelegationLastReconciliationTime",
              "longType": "DelegationLastReconciliationTime",
              "fullType": "vega.snapshot.v1.DelegationLastReconciliationTime",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "topology",
              "description": "",
              "label": "",
              "type": "Topology",
              "longType": "Topology",
              "fullType": "vega.snapshot.v1.Topology",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "oracle_data",
              "description": "",
              "label": "",
              "type": "OracleDataBatch",
              "longType": "OracleDataBatch",
              "fullType": "vega.snapshot.v1.OracleDataBatch",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_parameters",
              "description": "",
              "label": "",
              "type": "LiquidityParameters",
              "longType": "LiquidityParameters",
              "fullType": "vega.snapshot.v1.LiquidityParameters",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_pending_provisions",
              "description": "",
              "label": "",
              "type": "LiquidityPendingProvisions",
              "longType": "LiquidityPendingProvisions",
              "fullType": "vega.snapshot.v1.LiquidityPendingProvisions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_parties_liquidity_orders",
              "description": "",
              "label": "",
              "type": "LiquidityPartiesLiquidityOrders",
              "longType": "LiquidityPartiesLiquidityOrders",
              "fullType": "vega.snapshot.v1.LiquidityPartiesLiquidityOrders",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_parties_orders",
              "description": "",
              "label": "",
              "type": "LiquidityPartiesOrders",
              "longType": "LiquidityPartiesOrders",
              "fullType": "vega.snapshot.v1.LiquidityPartiesOrders",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provisions",
              "description": "",
              "label": "",
              "type": "LiquidityProvisions",
              "longType": "LiquidityProvisions",
              "fullType": "vega.snapshot.v1.LiquidityProvisions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_supplied",
              "description": "",
              "label": "",
              "type": "LiquiditySupplied",
              "longType": "LiquiditySupplied",
              "fullType": "vega.snapshot.v1.LiquiditySupplied",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_target",
              "description": "",
              "label": "",
              "type": "LiquidityTarget",
              "longType": "LiquidityTarget",
              "fullType": "vega.snapshot.v1.LiquidityTarget",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "floating_point_consensus",
              "description": "",
              "label": "",
              "type": "FloatingPointConsensus",
              "longType": "FloatingPointConsensus",
              "fullType": "vega.snapshot.v1.FloatingPointConsensus",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "market_tracker",
              "description": "",
              "label": "",
              "type": "MarketTracker",
              "longType": "MarketTracker",
              "fullType": "vega.snapshot.v1.MarketTracker",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_recurring_transfers",
              "description": "",
              "label": "",
              "type": "BankingRecurringTransfers",
              "longType": "BankingRecurringTransfers",
              "fullType": "vega.snapshot.v1.BankingRecurringTransfers",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_scheduled_transfers",
              "description": "",
              "label": "",
              "type": "BankingScheduledTransfers",
              "longType": "BankingScheduledTransfers",
              "fullType": "vega.snapshot.v1.BankingScheduledTransfers",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_topology_verified",
              "description": "",
              "label": "",
              "type": "ERC20MultiSigTopologyVerified",
              "longType": "ERC20MultiSigTopologyVerified",
              "fullType": "vega.snapshot.v1.ERC20MultiSigTopologyVerified",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_topology_pending",
              "description": "",
              "label": "",
              "type": "ERC20MultiSigTopologyPending",
              "longType": "ERC20MultiSigTopologyPending",
              "fullType": "vega.snapshot.v1.ERC20MultiSigTopologyPending",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "proof_of_work",
              "description": "",
              "label": "",
              "type": "ProofOfWork",
              "longType": "ProofOfWork",
              "fullType": "vega.snapshot.v1.ProofOfWork",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "pending_asset_updates",
              "description": "",
              "label": "",
              "type": "PendingAssetUpdates",
              "longType": "PendingAssetUpdates",
              "fullType": "vega.snapshot.v1.PendingAssetUpdates",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposals",
              "description": "",
              "label": "",
              "type": "ProtocolUpgradeProposals",
              "longType": "ProtocolUpgradeProposals",
              "fullType": "vega.snapshot.v1.ProtocolUpgradeProposals",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_bridge_state",
              "description": "",
              "label": "",
              "type": "BankingBridgeState",
              "longType": "BankingBridgeState",
              "fullType": "vega.snapshot.v1.BankingBridgeState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "settlement_state",
              "description": "",
              "label": "",
              "type": "SettlementState",
              "longType": "SettlementState",
              "fullType": "vega.snapshot.v1.SettlementState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_scores",
              "description": "",
              "label": "",
              "type": "LiquidityScores",
              "longType": "LiquidityScores",
              "fullType": "vega.snapshot.v1.LiquidityScores",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "spot_liquidity_target",
              "description": "",
              "label": "",
              "type": "SpotLiquidityTarget",
              "longType": "SpotLiquidityTarget",
              "fullType": "vega.snapshot.v1.SpotLiquidityTarget",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_recurring_governance_transfers",
              "description": "",
              "label": "",
              "type": "BankingRecurringGovernanceTransfers",
              "longType": "BankingRecurringGovernanceTransfers",
              "fullType": "vega.snapshot.v1.BankingRecurringGovernanceTransfers",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_scheduled_governance_transfers",
              "description": "",
              "label": "",
              "type": "BankingScheduledGovernanceTransfers",
              "longType": "BankingScheduledGovernanceTransfers",
              "fullType": "vega.snapshot.v1.BankingScheduledGovernanceTransfers",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "eth_contract_call_results",
              "description": "",
              "label": "",
              "type": "EthContractCallResults",
              "longType": "EthContractCallResults",
              "fullType": "vega.snapshot.v1.EthContractCallResults",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "eth_oracle_verifier_last_block",
              "description": "",
              "label": "",
              "type": "EthOracleVerifierLastBlock",
              "longType": "EthOracleVerifierLastBlock",
              "fullType": "vega.snapshot.v1.EthOracleVerifierLastBlock",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_v2_provisions",
              "description": "",
              "label": "",
              "type": "LiquidityV2Provisions",
              "longType": "LiquidityV2Provisions",
              "fullType": "vega.snapshot.v1.LiquidityV2Provisions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_v2_pending_provisions",
              "description": "",
              "label": "",
              "type": "LiquidityV2PendingProvisions",
              "longType": "LiquidityV2PendingProvisions",
              "fullType": "vega.snapshot.v1.LiquidityV2PendingProvisions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_v2_performances",
              "description": "",
              "label": "",
              "type": "LiquidityV2Performances",
              "longType": "LiquidityV2Performances",
              "fullType": "vega.snapshot.v1.LiquidityV2Performances",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_v2_supplied",
              "description": "",
              "label": "",
              "type": "LiquidityV2Supplied",
              "longType": "LiquidityV2Supplied",
              "fullType": "vega.snapshot.v1.LiquidityV2Supplied",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_v2_scores",
              "description": "",
              "label": "",
              "type": "LiquidityV2Scores",
              "longType": "LiquidityV2Scores",
              "fullType": "vega.snapshot.v1.LiquidityV2Scores",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "holding_account_tracker",
              "description": "",
              "label": "",
              "type": "HoldingAccountTracker",
              "longType": "HoldingAccountTracker",
              "fullType": "vega.snapshot.v1.HoldingAccountTracker",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "teams",
              "description": "",
              "label": "",
              "type": "Teams",
              "longType": "Teams",
              "fullType": "vega.snapshot.v1.Teams",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "team_switches",
              "description": "",
              "label": "",
              "type": "TeamSwitches",
              "longType": "TeamSwitches",
              "fullType": "vega.snapshot.v1.TeamSwitches",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "vesting",
              "description": "",
              "label": "",
              "type": "Vesting",
              "longType": "Vesting",
              "fullType": "vega.snapshot.v1.Vesting",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "referral_program",
              "description": "",
              "label": "",
              "type": "ReferralProgramData",
              "longType": "ReferralProgramData",
              "fullType": "vega.snapshot.v1.ReferralProgramData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "activity_streak",
              "description": "",
              "label": "",
              "type": "ActivityStreak",
              "longType": "ActivityStreak",
              "fullType": "vega.snapshot.v1.ActivityStreak",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "volume_discount_program",
              "description": "",
              "label": "",
              "type": "VolumeDiscountProgram",
              "longType": "VolumeDiscountProgram",
              "fullType": "vega.snapshot.v1.VolumeDiscountProgram",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_v2_parameters",
              "description": "",
              "label": "",
              "type": "LiquidityV2Parameters",
              "longType": "LiquidityV2Parameters",
              "fullType": "vega.snapshot.v1.LiquidityV2Parameters",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_v2_paid_fees_stats",
              "description": "",
              "label": "",
              "type": "LiquidityV2PaidFeesStats",
              "longType": "LiquidityV2PaidFeesStats",
              "fullType": "vega.snapshot.v1.LiquidityV2PaidFeesStats",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PeggedOrders",
          "longName": "PeggedOrders",
          "fullName": "vega.snapshot.v1.PeggedOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parked_orders",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingAssetUpdates",
          "longName": "PendingAssetUpdates",
          "fullName": "vega.snapshot.v1.PendingAssetUpdates",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingAssets",
          "longName": "PendingAssets",
          "fullName": "vega.snapshot.v1.PendingAssets",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingERC20MultisigControlSignature",
          "longName": "PendingERC20MultisigControlSignature",
          "fullName": "vega.snapshot.v1.PendingERC20MultisigControlSignature",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "added",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingEthereumKeyRotation",
          "longName": "PendingEthereumKeyRotation",
          "fullName": "vega.snapshot.v1.PendingEthereumKeyRotation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingKeyRotation",
          "longName": "PendingKeyRotation",
          "fullName": "vega.snapshot.v1.PendingKeyRotation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key_index",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PerformanceStats",
          "longName": "PerformanceStats",
          "fullName": "vega.snapshot.v1.PerformanceStats",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposed",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "elected",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "voted",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_height_voted",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_height_proposed",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_height_elected",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Perps",
          "longName": "Perps",
          "fullName": "vega.snapshot.v1.Perps",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "external_data_point",
              "description": "",
              "label": "repeated",
              "type": "DataPoint",
              "longType": "DataPoint",
              "fullType": "vega.snapshot.v1.DataPoint",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "internal_data_point",
              "description": "",
              "label": "repeated",
              "type": "DataPoint",
              "longType": "DataPoint",
              "fullType": "vega.snapshot.v1.DataPoint",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seq",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "started_at",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Position",
          "longName": "Position",
          "fullName": "vega.snapshot.v1.Position",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy_sum_product",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell_sum_product",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "distressed",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceBound",
          "longName": "PriceBound",
          "fullName": "vega.snapshot.v1.PriceBound",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "active",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "up_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "down_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "",
              "label": "",
              "type": "PriceMonitoringTrigger",
              "longType": "vega.PriceMonitoringTrigger",
              "fullType": "vega.PriceMonitoringTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitor",
          "longName": "PriceMonitor",
          "fullName": "vega.snapshot.v1.PriceMonitor",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "initialised",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fp_horizons",
              "description": "",
              "label": "repeated",
              "type": "DecimalMap",
              "longType": "DecimalMap",
              "fullType": "vega.snapshot.v1.DecimalMap",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "now",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "update",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bounds",
              "description": "",
              "label": "repeated",
              "type": "PriceBound",
              "longType": "PriceBound",
              "fullType": "vega.snapshot.v1.PriceBound",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_range_cache_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_range_cache",
              "description": "",
              "label": "repeated",
              "type": "PriceRangeCache",
              "longType": "PriceRangeCache",
              "fullType": "vega.snapshot.v1.PriceRangeCache",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ref_price_cache_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ref_price_cache",
              "description": "",
              "label": "repeated",
              "type": "DecimalMap",
              "longType": "DecimalMap",
              "fullType": "vega.snapshot.v1.DecimalMap",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "prices_now",
              "description": "",
              "label": "repeated",
              "type": "CurrentPrice",
              "longType": "CurrentPrice",
              "fullType": "vega.snapshot.v1.CurrentPrice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "prices_past",
              "description": "",
              "label": "repeated",
              "type": "PastPrice",
              "longType": "PastPrice",
              "fullType": "vega.snapshot.v1.PastPrice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "consensus_reached",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceRange",
          "longName": "PriceRange",
          "fullName": "vega.snapshot.v1.PriceRange",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "min",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ref",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceRangeCache",
          "longName": "PriceRangeCache",
          "fullName": "vega.snapshot.v1.PriceRangeCache",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bound",
              "description": "",
              "label": "",
              "type": "PriceBound",
              "longType": "PriceBound",
              "fullType": "vega.snapshot.v1.PriceBound",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "range",
              "description": "",
              "label": "",
              "type": "PriceRange",
              "longType": "PriceRange",
              "fullType": "vega.snapshot.v1.PriceRange",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceVolume",
          "longName": "PriceVolume",
          "fullName": "vega.snapshot.v1.PriceVolume",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PricedStopOrders",
          "longName": "PricedStopOrders",
          "fullName": "vega.snapshot.v1.PricedStopOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "falls_bellow",
              "description": "",
              "label": "repeated",
              "type": "OrdersAtPrice",
              "longType": "OrdersAtPrice",
              "fullType": "vega.snapshot.v1.OrdersAtPrice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rises_above",
              "description": "",
              "label": "repeated",
              "type": "OrdersAtPrice",
              "longType": "OrdersAtPrice",
              "fullType": "vega.snapshot.v1.OrdersAtPrice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Product",
          "longName": "Product",
          "fullName": "vega.snapshot.v1.Product",
          "description": "eventually support multiple products",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "perps",
              "description": "",
              "label": "",
              "type": "Perps",
              "longType": "Perps",
              "fullType": "vega.snapshot.v1.Perps",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProofOfWork",
          "longName": "ProofOfWork",
          "fullName": "vega.snapshot.v1.ProofOfWork",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "",
              "label": "repeated",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_at_height",
              "description": "",
              "label": "repeated",
              "type": "TransactionsAtHeight",
              "longType": "TransactionsAtHeight",
              "fullType": "vega.snapshot.v1.TransactionsAtHeight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tid_at_height",
              "description": "",
              "label": "repeated",
              "type": "TransactionsAtHeight",
              "longType": "TransactionsAtHeight",
              "fullType": "vega.snapshot.v1.TransactionsAtHeight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banned",
              "description": "",
              "label": "repeated",
              "type": "BannedParty",
              "longType": "BannedParty",
              "fullType": "vega.snapshot.v1.BannedParty",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pow_params",
              "description": "",
              "label": "repeated",
              "type": "ProofOfWorkParams",
              "longType": "ProofOfWorkParams",
              "fullType": "vega.snapshot.v1.ProofOfWorkParams",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pow_state",
              "description": "",
              "label": "repeated",
              "type": "ProofOfWorkState",
              "longType": "ProofOfWorkState",
              "fullType": "vega.snapshot.v1.ProofOfWorkState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_pruning_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce_refs_at_height",
              "description": "",
              "label": "repeated",
              "type": "NonceRefsAtHeight",
              "longType": "NonceRefsAtHeight",
              "fullType": "vega.snapshot.v1.NonceRefsAtHeight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProofOfWorkBlockState",
          "longName": "ProofOfWorkBlockState",
          "fullName": "vega.snapshot.v1.ProofOfWorkBlockState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_state",
              "description": "",
              "label": "repeated",
              "type": "ProofOfWorkPartyStateForBlock",
              "longType": "ProofOfWorkPartyStateForBlock",
              "fullType": "vega.snapshot.v1.ProofOfWorkPartyStateForBlock",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProofOfWorkParams",
          "longName": "ProofOfWorkParams",
          "fullName": "vega.snapshot.v1.ProofOfWorkParams",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "spam_pow_number_of_past_blocks",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_difficulty",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_hash_function",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_number_of_tx_per_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_increasing_difficulty",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "until_block",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProofOfWorkPartyStateForBlock",
          "longName": "ProofOfWorkPartyStateForBlock",
          "fullName": "vega.snapshot.v1.ProofOfWorkPartyStateForBlock",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seen_count",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "observed_difficulty",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProofOfWorkState",
          "longName": "ProofOfWorkState",
          "fullName": "vega.snapshot.v1.ProofOfWorkState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pow_state",
              "description": "",
              "label": "repeated",
              "type": "ProofOfWorkBlockState",
              "longType": "ProofOfWorkBlockState",
              "fullType": "vega.snapshot.v1.ProofOfWorkBlockState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProposalData",
          "longName": "ProposalData",
          "fullName": "vega.snapshot.v1.ProposalData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "",
              "label": "",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "yes",
              "description": "",
              "label": "repeated",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "no",
              "description": "",
              "label": "repeated",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "invalid",
              "description": "",
              "label": "repeated",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeProposals",
          "longName": "ProtocolUpgradeProposals",
          "fullName": "vega.snapshot.v1.ProtocolUpgradeProposals",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "active_proposals",
              "description": "",
              "label": "repeated",
              "type": "ProtocolUpgradeEvent",
              "longType": "vega.events.v1.ProtocolUpgradeEvent",
              "fullType": "vega.events.v1.ProtocolUpgradeEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "accepted_proposal",
              "description": "",
              "label": "",
              "type": "AcceptedProtocolUpgradeProposal",
              "longType": "AcceptedProtocolUpgradeProposal",
              "fullType": "vega.snapshot.v1.AcceptedProtocolUpgradeProposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralProgramData",
          "longName": "ReferralProgramData",
          "fullName": "vega.snapshot.v1.ReferralProgramData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "factor_by_referee",
              "description": "",
              "label": "repeated",
              "type": "FactorByReferee",
              "longType": "FactorByReferee",
              "fullType": "vega.snapshot.v1.FactorByReferee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_program",
              "description": "",
              "label": "",
              "type": "ReferralProgram",
              "longType": "vega.ReferralProgram",
              "fullType": "vega.ReferralProgram",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_program",
              "description": "",
              "label": "",
              "type": "ReferralProgram",
              "longType": "vega.ReferralProgram",
              "fullType": "vega.ReferralProgram",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_program_version",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "program_has_ended",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sets",
              "description": "",
              "label": "repeated",
              "type": "ReferralSet",
              "longType": "ReferralSet",
              "fullType": "vega.snapshot.v1.ReferralSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReferralSet",
          "longName": "ReferralSet",
          "fullName": "vega.snapshot.v1.ReferralSet",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referrer",
              "description": "",
              "label": "",
              "type": "Membership",
              "longType": "Membership",
              "fullType": "vega.snapshot.v1.Membership",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referees",
              "description": "",
              "label": "repeated",
              "type": "Membership",
              "longType": "Membership",
              "fullType": "vega.snapshot.v1.Membership",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "running_volumes",
              "description": "",
              "label": "repeated",
              "type": "RunningVolume",
              "longType": "RunningVolume",
              "fullType": "vega.snapshot.v1.RunningVolume",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_reward_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_rewards_multiplier",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_rewards_factor_multiplier",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Resource",
          "longName": "Resource",
          "fullName": "vega.snapshot.v1.Resource",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "check_until",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "votes",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardsPartyAmount",
          "longName": "RewardsPartyAmount",
          "fullName": "vega.snapshot.v1.RewardsPartyAmount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardsPayout",
          "longName": "RewardsPayout",
          "fullName": "vega.snapshot.v1.RewardsPayout",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_account",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_party_amount",
              "description": "",
              "label": "repeated",
              "type": "RewardsPartyAmount",
              "longType": "RewardsPartyAmount",
              "fullType": "vega.snapshot.v1.RewardsPartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_reward",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardsPendingPayouts",
          "longName": "RewardsPendingPayouts",
          "fullName": "vega.snapshot.v1.RewardsPendingPayouts",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "scheduled_rewards_payout",
              "description": "",
              "label": "repeated",
              "type": "ScheduledRewardsPayout",
              "longType": "ScheduledRewardsPayout",
              "fullType": "vega.snapshot.v1.ScheduledRewardsPayout",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RunningVolume",
          "longName": "RunningVolume",
          "fullName": "vega.snapshot.v1.RunningVolume",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SLANetworkParams",
          "longName": "SLANetworkParams",
          "fullName": "vega.snapshot.v1.SLANetworkParams",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_penalty_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "early_exit_penalty",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_liquidity_fee",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "non_performance_bond_penalty_max",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "non_performance_bond_penalty_slope",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_to_ccy_volume",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "providers_fee_calculation_time_step",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScheduledRewardsPayout",
          "longName": "ScheduledRewardsPayout",
          "fullName": "vega.snapshot.v1.ScheduledRewardsPayout",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "payout_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards_payout",
              "description": "",
              "label": "repeated",
              "type": "RewardsPayout",
              "longType": "RewardsPayout",
              "fullType": "vega.snapshot.v1.RewardsPayout",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SettlementState",
          "longName": "SettlementState",
          "fullName": "vega.snapshot.v1.SettlementState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_mark_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_settled_positions",
              "description": "",
              "label": "repeated",
              "type": "LastSettledPosition",
              "longType": "LastSettledPosition",
              "fullType": "vega.snapshot.v1.LastSettledPosition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trades",
              "description": "",
              "label": "repeated",
              "type": "SettlementTrade",
              "longType": "SettlementTrade",
              "fullType": "vega.snapshot.v1.SettlementTrade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SettlementTrade",
          "longName": "SettlementTrade",
          "fullName": "vega.snapshot.v1.SettlementTrade",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_size",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SignerEventsPerAddress",
          "longName": "SignerEventsPerAddress",
          "fullName": "vega.snapshot.v1.SignerEventsPerAddress",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "",
              "label": "repeated",
              "type": "ERC20MultiSigSignerEvent",
              "longType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimpleSpamPolicy",
          "longName": "SimpleSpamPolicy",
          "fullName": "vega.snapshot.v1.SimpleSpamPolicy",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "policy_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_to_count",
              "description": "",
              "label": "repeated",
              "type": "SpamPartyTransactionCount",
              "longType": "SpamPartyTransactionCount",
              "fullType": "vega.snapshot.v1.SpamPartyTransactionCount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banned_parties",
              "description": "",
              "label": "repeated",
              "type": "BannedParty",
              "longType": "BannedParty",
              "fullType": "vega.snapshot.v1.BannedParty",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_balance",
              "description": "",
              "label": "repeated",
              "type": "PartyTokenBalance",
              "longType": "PartyTokenBalance",
              "fullType": "vega.snapshot.v1.PartyTokenBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_epoch_seq",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Snapshot",
          "longName": "Snapshot",
          "fullName": "vega.snapshot.v1.Snapshot",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "format",
              "description": "",
              "label": "",
              "type": "Format",
              "longType": "Format",
              "fullType": "vega.snapshot.v1.Format",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chunks",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SpamPartyTransactionCount",
          "longName": "SpamPartyTransactionCount",
          "fullName": "vega.snapshot.v1.SpamPartyTransactionCount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "count",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SpotLiquidityTarget",
          "longName": "SpotLiquidityTarget",
          "fullName": "vega.snapshot.v1.SpotLiquidityTarget",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scheduled_truncate",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_total_stake",
              "description": "",
              "label": "repeated",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_total_stake",
              "description": "",
              "label": "repeated",
              "type": "TimestampedTotalStake",
              "longType": "TimestampedTotalStake",
              "fullType": "vega.snapshot.v1.TimestampedTotalStake",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_total_stake",
              "description": "",
              "label": "",
              "type": "TimestampedTotalStake",
              "longType": "TimestampedTotalStake",
              "fullType": "vega.snapshot.v1.TimestampedTotalStake",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SpotMarket",
          "longName": "SpotMarket",
          "fullName": "vega.snapshot.v1.SpotMarket",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitor",
              "description": "",
              "label": "",
              "type": "PriceMonitor",
              "longType": "PriceMonitor",
              "fullType": "vega.snapshot.v1.PriceMonitor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_state",
              "description": "",
              "label": "",
              "type": "AuctionState",
              "longType": "AuctionState",
              "fullType": "vega.snapshot.v1.AuctionState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_orders",
              "description": "",
              "label": "",
              "type": "PeggedOrders",
              "longType": "PeggedOrders",
              "fullType": "vega.snapshot.v1.PeggedOrders",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiring_orders",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_best_bid",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_best_ask",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_mid_bid",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_mid_ask",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_market_value_proxy",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_equity_share_distributed",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "equity_share",
              "description": "",
              "label": "",
              "type": "EquityShare",
              "longType": "EquityShare",
              "fullType": "vega.snapshot.v1.EquityShare",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_mark_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee_splitter",
              "description": "",
              "label": "",
              "type": "FeeSplitter",
              "longType": "FeeSplitter",
              "fullType": "vega.snapshot.v1.FeeSplitter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_mark_to_market",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_traded_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parties",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stop_orders",
              "description": "",
              "label": "",
              "type": "StopOrders",
              "longType": "StopOrders",
              "fullType": "vega.snapshot.v1.StopOrders",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiring_stop_orders",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fees_stats",
              "description": "",
              "label": "",
              "type": "FeesStats",
              "longType": "vega.events.v1.FeesStats",
              "fullType": "vega.events.v1.FeesStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeVerifierDeposited",
          "longName": "StakeVerifierDeposited",
          "fullName": "vega.snapshot.v1.StakeVerifierDeposited",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pending_deposited",
              "description": "",
              "label": "repeated",
              "type": "StakeVerifierPending",
              "longType": "StakeVerifierPending",
              "fullType": "vega.snapshot.v1.StakeVerifierPending",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeVerifierPending",
          "longName": "StakeVerifierPending",
          "fullName": "vega.snapshot.v1.StakeVerifierPending",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ethereum_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_public_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_number",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeVerifierRemoved",
          "longName": "StakeVerifierRemoved",
          "fullName": "vega.snapshot.v1.StakeVerifierRemoved",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pending_removed",
              "description": "",
              "label": "repeated",
              "type": "StakeVerifierPending",
              "longType": "StakeVerifierPending",
              "fullType": "vega.snapshot.v1.StakeVerifierPending",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakingAccount",
          "longName": "StakingAccount",
          "fullName": "vega.snapshot.v1.StakingAccount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "",
              "label": "repeated",
              "type": "StakeLinking",
              "longType": "vega.events.v1.StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakingAccounts",
          "longName": "StakingAccounts",
          "fullName": "vega.snapshot.v1.StakingAccounts",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "",
              "label": "repeated",
              "type": "StakingAccount",
              "longType": "StakingAccount",
              "fullType": "vega.snapshot.v1.StakingAccount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking_asset_total_supply",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_stake_total_supply",
              "description": "",
              "label": "",
              "type": "StakeTotalSupply",
              "longType": "vega.StakeTotalSupply",
              "fullType": "vega.StakeTotalSupply",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateVarInternalState",
          "longName": "StateVarInternalState",
          "fullName": "vega.snapshot.v1.StateVarInternalState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validators_results",
              "description": "",
              "label": "repeated",
              "type": "FloatingPointValidatorResult",
              "longType": "FloatingPointValidatorResult",
              "fullType": "vega.snapshot.v1.FloatingPointValidatorResult",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rounds_since_meaningful_update",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopOrders",
          "longName": "StopOrders",
          "fullName": "vega.snapshot.v1.StopOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "stop_orders",
              "description": "",
              "label": "repeated",
              "type": "StopOrderEvent",
              "longType": "vega.events.v1.StopOrderEvent",
              "fullType": "vega.events.v1.StopOrderEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "priced_stop_orders",
              "description": "",
              "label": "",
              "type": "PricedStopOrders",
              "longType": "PricedStopOrders",
              "fullType": "vega.snapshot.v1.PricedStopOrders",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trailing_stop_orders",
              "description": "",
              "label": "",
              "type": "TrailingStopOrders",
              "longType": "TrailingStopOrders",
              "fullType": "vega.snapshot.v1.TrailingStopOrders",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Successors",
          "longName": "Successors",
          "fullName": "vega.snapshot.v1.Successors",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parent_market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "successor_markets",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Team",
          "longName": "Team",
          "fullName": "vega.snapshot.v1.Team",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referrer",
              "description": "",
              "label": "",
              "type": "Membership",
              "longType": "Membership",
              "fullType": "vega.snapshot.v1.Membership",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "referees",
              "description": "",
              "label": "repeated",
              "type": "Membership",
              "longType": "Membership",
              "fullType": "vega.snapshot.v1.Membership",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "team_url",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamSwitch",
          "longName": "TeamSwitch",
          "fullName": "vega.snapshot.v1.TeamSwitch",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_team_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_team_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TeamSwitches",
          "longName": "TeamSwitches",
          "fullName": "vega.snapshot.v1.TeamSwitches",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "team_switches",
              "description": "",
              "label": "repeated",
              "type": "TeamSwitch",
              "longType": "TeamSwitch",
              "fullType": "vega.snapshot.v1.TeamSwitch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Teams",
          "longName": "Teams",
          "fullName": "vega.snapshot.v1.Teams",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "teams",
              "description": "",
              "label": "repeated",
              "type": "Team",
              "longType": "Team",
              "fullType": "vega.snapshot.v1.Team",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TimePrice",
          "longName": "TimePrice",
          "fullName": "vega.snapshot.v1.TimePrice",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TimestampedOpenInterest",
          "longName": "TimestampedOpenInterest",
          "fullName": "vega.snapshot.v1.TimestampedOpenInterest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "open_interest",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TimestampedTotalStake",
          "longName": "TimestampedTotalStake",
          "fullName": "vega.snapshot.v1.TimestampedTotalStake",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "total_stake",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ToplogySignatures",
          "longName": "ToplogySignatures",
          "fullName": "vega.snapshot.v1.ToplogySignatures",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pending_signatures",
              "description": "",
              "label": "repeated",
              "type": "PendingERC20MultisigControlSignature",
              "longType": "PendingERC20MultisigControlSignature",
              "fullType": "vega.snapshot.v1.PendingERC20MultisigControlSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "issued_signatures",
              "description": "",
              "label": "repeated",
              "type": "IssuedERC20MultisigControlSignature",
              "longType": "IssuedERC20MultisigControlSignature",
              "fullType": "vega.snapshot.v1.IssuedERC20MultisigControlSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Topology",
          "longName": "Topology",
          "fullName": "vega.snapshot.v1.Topology",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_data",
              "description": "",
              "label": "repeated",
              "type": "ValidatorState",
              "longType": "ValidatorState",
              "fullType": "vega.snapshot.v1.ValidatorState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_keys",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_pub_key_rotations",
              "description": "",
              "label": "repeated",
              "type": "PendingKeyRotation",
              "longType": "PendingKeyRotation",
              "fullType": "vega.snapshot.v1.PendingKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_performance",
              "description": "",
              "label": "",
              "type": "ValidatorPerformance",
              "longType": "ValidatorPerformance",
              "fullType": "vega.snapshot.v1.ValidatorPerformance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_ethereum_key_rotations",
              "description": "",
              "label": "repeated",
              "type": "PendingEthereumKeyRotation",
              "longType": "PendingEthereumKeyRotation",
              "fullType": "vega.snapshot.v1.PendingEthereumKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "",
              "label": "",
              "type": "ToplogySignatures",
              "longType": "ToplogySignatures",
              "fullType": "vega.snapshot.v1.ToplogySignatures",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unsolved_ethereum_key_rotations",
              "description": "",
              "label": "repeated",
              "type": "PendingEthereumKeyRotation",
              "longType": "PendingEthereumKeyRotation",
              "fullType": "vega.snapshot.v1.PendingEthereumKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TrailingStopOrders",
          "longName": "TrailingStopOrders",
          "fullName": "vega.snapshot.v1.TrailingStopOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "last_seen_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "falls_bellow",
              "description": "",
              "label": "repeated",
              "type": "OffsetsAtPrice",
              "longType": "OffsetsAtPrice",
              "fullType": "vega.snapshot.v1.OffsetsAtPrice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rises_above",
              "description": "",
              "label": "repeated",
              "type": "OffsetsAtPrice",
              "longType": "OffsetsAtPrice",
              "fullType": "vega.snapshot.v1.OffsetsAtPrice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionsAtHeight",
          "longName": "TransactionsAtHeight",
          "fullName": "vega.snapshot.v1.TransactionsAtHeight",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transactions",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TxRef",
          "longName": "TxRef",
          "fullName": "vega.snapshot.v1.TxRef",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_nr",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorPerformance",
          "longName": "ValidatorPerformance",
          "fullName": "vega.snapshot.v1.ValidatorPerformance",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_perf_stats",
              "description": "",
              "label": "repeated",
              "type": "PerformanceStats",
              "longType": "PerformanceStats",
              "fullType": "vega.snapshot.v1.PerformanceStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorState",
          "longName": "ValidatorState",
          "fullName": "vega.snapshot.v1.ValidatorState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_update",
              "description": "",
              "label": "",
              "type": "ValidatorUpdate",
              "longType": "vega.events.v1.ValidatorUpdate",
              "fullType": "vega.events.v1.ValidatorUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_added",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status_change_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_block_with_positive_ranking",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "eth_events_forwarded",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "heartbeat_tracker",
              "description": "",
              "label": "",
              "type": "HeartbeatTracker",
              "longType": "HeartbeatTracker",
              "fullType": "vega.snapshot.v1.HeartbeatTracker",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_power",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "",
              "label": "",
              "type": "RankingScore",
              "longType": "vega.RankingScore",
              "fullType": "vega.RankingScore",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Vesting",
          "longName": "Vesting",
          "fullName": "vega.snapshot.v1.Vesting",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties_reward",
              "description": "",
              "label": "repeated",
              "type": "PartyReward",
              "longType": "PartyReward",
              "fullType": "vega.snapshot.v1.PartyReward",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountProgram",
          "longName": "VolumeDiscountProgram",
          "fullName": "vega.snapshot.v1.VolumeDiscountProgram",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_party_volumes",
              "description": "",
              "label": "repeated",
              "type": "EpochPartyVolumes",
              "longType": "EpochPartyVolumes",
              "fullType": "vega.snapshot.v1.EpochPartyVolumes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_data_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_party_volume",
              "description": "",
              "label": "repeated",
              "type": "PartyVolume",
              "longType": "PartyVolume",
              "fullType": "vega.snapshot.v1.PartyVolume",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_program",
              "description": "",
              "label": "",
              "type": "VolumeDiscountProgram",
              "longType": "vega.VolumeDiscountProgram",
              "fullType": "vega.VolumeDiscountProgram",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_program",
              "description": "",
              "label": "",
              "type": "VolumeDiscountProgram",
              "longType": "vega.VolumeDiscountProgram",
              "fullType": "vega.VolumeDiscountProgram",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "factors_by_party",
              "description": "",
              "label": "repeated",
              "type": "VolumeDiscountStats",
              "longType": "VolumeDiscountStats",
              "fullType": "vega.snapshot.v1.VolumeDiscountStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_program_version",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "program_has_ended",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VolumeDiscountStats",
          "longName": "VolumeDiscountStats",
          "fullName": "vega.snapshot.v1.VolumeDiscountStats",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "discount_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VoteSpamPolicy",
          "longName": "VoteSpamPolicy",
          "fullName": "vega.snapshot.v1.VoteSpamPolicy",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_to_vote",
              "description": "",
              "label": "repeated",
              "type": "PartyProposalVoteCount",
              "longType": "PartyProposalVoteCount",
              "fullType": "vega.snapshot.v1.PartyProposalVoteCount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banned_parties",
              "description": "",
              "label": "repeated",
              "type": "BannedParty",
              "longType": "BannedParty",
              "fullType": "vega.snapshot.v1.BannedParty",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_balance",
              "description": "",
              "label": "repeated",
              "type": "PartyTokenBalance",
              "longType": "PartyTokenBalance",
              "fullType": "vega.snapshot.v1.PartyTokenBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recent_blocks_reject_stats",
              "description": "",
              "label": "repeated",
              "type": "BlockRejectStats",
              "longType": "BlockRejectStats",
              "fullType": "vega.snapshot.v1.BlockRejectStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_block_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_increase_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_epoch_seq",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_voting_tokens_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Withdrawal",
          "longName": "Withdrawal",
          "fullName": "vega.snapshot.v1.Withdrawal",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ref",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "",
              "label": "",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Witness",
          "longName": "Witness",
          "fullName": "vega.snapshot.v1.Witness",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resources",
              "description": "",
              "label": "repeated",
              "type": "Resource",
              "longType": "Resource",
              "fullType": "vega.snapshot.v1.Resource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/wallet/v1/wallet.proto",
      "description": "",
      "package": "vega.wallet.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "SubmitTransactionRequest",
          "longName": "SubmitTransactionRequest",
          "fullName": "vega.wallet.v1.SubmitTransactionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pub_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propagate",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_submission",
              "description": "User commands",
              "label": "",
              "type": "OrderSubmission",
              "longType": "vega.commands.v1.OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "order_cancellation",
              "description": "",
              "label": "",
              "type": "OrderCancellation",
              "longType": "vega.commands.v1.OrderCancellation",
              "fullType": "vega.commands.v1.OrderCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "order_amendment",
              "description": "",
              "label": "",
              "type": "OrderAmendment",
              "longType": "vega.commands.v1.OrderAmendment",
              "fullType": "vega.commands.v1.OrderAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "withdraw_submission",
              "description": "",
              "label": "",
              "type": "WithdrawSubmission",
              "longType": "vega.commands.v1.WithdrawSubmission",
              "fullType": "vega.commands.v1.WithdrawSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "proposal_submission",
              "description": "",
              "label": "",
              "type": "ProposalSubmission",
              "longType": "vega.commands.v1.ProposalSubmission",
              "fullType": "vega.commands.v1.ProposalSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "vote_submission",
              "description": "",
              "label": "",
              "type": "VoteSubmission",
              "longType": "vega.commands.v1.VoteSubmission",
              "fullType": "vega.commands.v1.VoteSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_submission",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionSubmission",
              "longType": "vega.commands.v1.LiquidityProvisionSubmission",
              "fullType": "vega.commands.v1.LiquidityProvisionSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "delegate_submission",
              "description": "",
              "label": "",
              "type": "DelegateSubmission",
              "longType": "vega.commands.v1.DelegateSubmission",
              "fullType": "vega.commands.v1.DelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "undelegate_submission",
              "description": "",
              "label": "",
              "type": "UndelegateSubmission",
              "longType": "vega.commands.v1.UndelegateSubmission",
              "fullType": "vega.commands.v1.UndelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_cancellation",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionCancellation",
              "longType": "vega.commands.v1.LiquidityProvisionCancellation",
              "fullType": "vega.commands.v1.LiquidityProvisionCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_amendment",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionAmendment",
              "longType": "vega.commands.v1.LiquidityProvisionAmendment",
              "fullType": "vega.commands.v1.LiquidityProvisionAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.commands.v1.Transfer",
              "fullType": "vega.commands.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "cancel_transfer",
              "description": "",
              "label": "",
              "type": "CancelTransfer",
              "longType": "vega.commands.v1.CancelTransfer",
              "fullType": "vega.commands.v1.CancelTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "announce_node",
              "description": "",
              "label": "",
              "type": "AnnounceNode",
              "longType": "vega.commands.v1.AnnounceNode",
              "fullType": "vega.commands.v1.AnnounceNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "batch_market_instructions",
              "description": "",
              "label": "",
              "type": "BatchMarketInstructions",
              "longType": "vega.commands.v1.BatchMarketInstructions",
              "fullType": "vega.commands.v1.BatchMarketInstructions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "stop_orders_submission",
              "description": "",
              "label": "",
              "type": "StopOrdersSubmission",
              "longType": "vega.commands.v1.StopOrdersSubmission",
              "fullType": "vega.commands.v1.StopOrdersSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "stop_orders_cancellation",
              "description": "",
              "label": "",
              "type": "StopOrdersCancellation",
              "longType": "vega.commands.v1.StopOrdersCancellation",
              "fullType": "vega.commands.v1.StopOrdersCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "create_referral_set",
              "description": "",
              "label": "",
              "type": "CreateReferralSet",
              "longType": "vega.commands.v1.CreateReferralSet",
              "fullType": "vega.commands.v1.CreateReferralSet",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "update_referral_set",
              "description": "",
              "label": "",
              "type": "UpdateReferralSet",
              "longType": "vega.commands.v1.UpdateReferralSet",
              "fullType": "vega.commands.v1.UpdateReferralSet",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "apply_referral_code",
              "description": "",
              "label": "",
              "type": "ApplyReferralCode",
              "longType": "vega.commands.v1.ApplyReferralCode",
              "fullType": "vega.commands.v1.ApplyReferralCode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "node_vote",
              "description": "Validator commands",
              "label": "",
              "type": "NodeVote",
              "longType": "vega.commands.v1.NodeVote",
              "fullType": "vega.commands.v1.NodeVote",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "node_signature",
              "description": "",
              "label": "",
              "type": "NodeSignature",
              "longType": "vega.commands.v1.NodeSignature",
              "fullType": "vega.commands.v1.NodeSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "chain_event",
              "description": "",
              "label": "",
              "type": "ChainEvent",
              "longType": "vega.commands.v1.ChainEvent",
              "fullType": "vega.commands.v1.ChainEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "key_rotate_submission",
              "description": "",
              "label": "",
              "type": "KeyRotateSubmission",
              "longType": "vega.commands.v1.KeyRotateSubmission",
              "fullType": "vega.commands.v1.KeyRotateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "state_variable_proposal",
              "description": "",
              "label": "",
              "type": "StateVariableProposal",
              "longType": "vega.commands.v1.StateVariableProposal",
              "fullType": "vega.commands.v1.StateVariableProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "validator_heartbeat",
              "description": "",
              "label": "",
              "type": "ValidatorHeartbeat",
              "longType": "vega.commands.v1.ValidatorHeartbeat",
              "fullType": "vega.commands.v1.ValidatorHeartbeat",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "ethereum_key_rotate_submission",
              "description": "",
              "label": "",
              "type": "EthereumKeyRotateSubmission",
              "longType": "vega.commands.v1.EthereumKeyRotateSubmission",
              "fullType": "vega.commands.v1.EthereumKeyRotateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposal",
              "description": "",
              "label": "",
              "type": "ProtocolUpgradeProposal",
              "longType": "vega.commands.v1.ProtocolUpgradeProposal",
              "fullType": "vega.commands.v1.ProtocolUpgradeProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "issue_signatures",
              "description": "",
              "label": "",
              "type": "IssueSignatures",
              "longType": "vega.commands.v1.IssueSignatures",
              "fullType": "vega.commands.v1.IssueSignatures",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "oracle_data_submission",
              "description": "Oracle commands",
              "label": "",
              "type": "OracleDataSubmission",
              "longType": "vega.commands.v1.OracleDataSubmission",
              "fullType": "vega.commands.v1.OracleDataSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}