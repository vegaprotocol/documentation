{"openapi":"3.0.0","info":{"title":"data-node/api/v1/trading_data.proto","version":"0.61.0"},"servers":[{"url":"https://api.n09.testnet.vega.xyz","description":"n09 (data node)"},{"url":"https://api.n10.testnet.vega.xyz","description":"n10 (data node)"},{"url":"https://api.n11.testnet.vega.xyz","description":"n11 (data node)"},{"url":"https://api.n12.testnet.vega.xyz","description":"n12 (data node)"}],"paths":{"/assets":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1AssetsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_Assets","summary":"Get a list of all assets on Vega"}},"/assets/{asset}/globalRewardPoolAccount":{"get":{"parameters":[{"description":"Asset identifier, required field\n- Set to an empty string to return all accounts\n- Set to an asset ID to return a single global reward pool account for a given asset","in":"path","name":"asset","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GlobalRewardPoolAccountsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GlobalRewardPoolAccounts","summary":"Get a list of accounts holding reward pools\nCan be filtered by asset, there will be 1 reward pool account per\nasset in the network"}},"/assets/{asset}/infrastructureFeeAccount":{"get":{"parameters":[{"description":"Asset identifier, required field\n- Set to an empty string to return all accounts\n- Set to an asset ID to return a single infrastructure fee account for a given asset","in":"path","name":"asset","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1FeeInfrastructureAccountsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_FeeInfrastructureAccounts","summary":"Get a list of accounts holding infrastructure fees.\nCan be filtered by asset, there will be 1 infrastructure fee account per\nasset in the network"}},"/assets/{id}":{"get":{"parameters":[{"description":"Asset identifier, required field","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1AssetByIDResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_AssetByID","summary":"Get an asset by its identifier"}},"/delegations":{"get":{"parameters":[{"in":"query","name":"party","required":false,"schema":{"type":"string"}},{"in":"query","name":"nodeId","required":false,"schema":{"type":"string"}},{"in":"query","name":"epochSeq","required":false,"schema":{"type":"string"}},{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1DelegationsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_Delegations","summary":"Get delegation data"}},"/deposits/{id}":{"get":{"parameters":[{"description":"The identifier of the deposit","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1DepositResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_Deposit","summary":"Get a deposit by its identifier"}},"/epochs":{"get":{"parameters":[{"description":"Optional - if id omitted it gets the current epoch.","in":"query","name":"id","required":false,"schema":{"format":"uint64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetEpochResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetEpoch2","summary":"Get data for a specific epoch, if id omitted it gets the current epoch"}},"/epochs/{id}":{"get":{"parameters":[{"description":"Optional - if id omitted it gets the current epoch","in":"path","name":"id","required":true,"schema":{"format":"uint64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetEpochResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetEpoch","summary":"Get data for a specific epoch, if id omitted it gets the current epoch"}},"/governance/asset/proposals":{"get":{"parameters":[{"description":"Optional proposal state.\n\n - STATE_UNSPECIFIED: Default value, always invalid\n - STATE_FAILED: Proposal enactment has failed - even though proposal has passed, its execution could not be performed\n - STATE_OPEN: Proposal is open for voting\n - STATE_PASSED: Proposal has gained enough support to be executed\n - STATE_REJECTED: Proposal wasn't accepted (proposal terms failed validation due to wrong configuration or failing to meet network requirements)\n - STATE_DECLINED: Proposal didn't get enough votes (either failing to gain required participation or majority level)\n - STATE_ENACTED: Proposal enacted\n - STATE_WAITING_FOR_NODE_VOTE: Waiting for node validation of the proposal","in":"query","name":"selectInState","required":false,"schema":{"default":"STATE_UNSPECIFIED","enum":["STATE_UNSPECIFIED","STATE_FAILED","STATE_OPEN","STATE_PASSED","STATE_REJECTED","STATE_DECLINED","STATE_ENACTED","STATE_WAITING_FOR_NODE_VOTE"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetNewAssetProposalsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetNewAssetProposals","summary":"Get governance data (proposals and votes) for proposals aiming to create new assets"}},"/governance/market/proposals":{"get":{"parameters":[{"description":"Optional proposal state.\n\n - STATE_UNSPECIFIED: Default value, always invalid\n - STATE_FAILED: Proposal enactment has failed - even though proposal has passed, its execution could not be performed\n - STATE_OPEN: Proposal is open for voting\n - STATE_PASSED: Proposal has gained enough support to be executed\n - STATE_REJECTED: Proposal wasn't accepted (proposal terms failed validation due to wrong configuration or failing to meet network requirements)\n - STATE_DECLINED: Proposal didn't get enough votes (either failing to gain required participation or majority level)\n - STATE_ENACTED: Proposal enacted\n - STATE_WAITING_FOR_NODE_VOTE: Waiting for node validation of the proposal","in":"query","name":"selectInState","required":false,"schema":{"default":"STATE_UNSPECIFIED","enum":["STATE_UNSPECIFIED","STATE_FAILED","STATE_OPEN","STATE_PASSED","STATE_REJECTED","STATE_DECLINED","STATE_ENACTED","STATE_WAITING_FOR_NODE_VOTE"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetNewMarketProposalsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetNewMarketProposals","summary":"Get governance data (proposals and votes) for proposals that aim creating new markets"}},"/governance/proposal/reference/{reference}":{"get":{"parameters":[{"description":"Proposal reference. Required field","in":"path","name":"reference","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetProposalByReferenceResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetProposalByReference","summary":"Get governance data (proposals and votes) for a proposal located by reference"}},"/governance/proposal/{proposalId}":{"get":{"parameters":[{"description":"Proposal identifier, required field","in":"path","name":"proposalId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetProposalByIDResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetProposalByID","summary":"Get governance data (proposals and votes) for a proposal located by ID"}},"/governance/proposals":{"get":{"parameters":[{"description":"Optional proposal state.\n\n - STATE_UNSPECIFIED: Default value, always invalid\n - STATE_FAILED: Proposal enactment has failed - even though proposal has passed, its execution could not be performed\n - STATE_OPEN: Proposal is open for voting\n - STATE_PASSED: Proposal has gained enough support to be executed\n - STATE_REJECTED: Proposal wasn't accepted (proposal terms failed validation due to wrong configuration or failing to meet network requirements)\n - STATE_DECLINED: Proposal didn't get enough votes (either failing to gain required participation or majority level)\n - STATE_ENACTED: Proposal enacted\n - STATE_WAITING_FOR_NODE_VOTE: Waiting for node validation of the proposal","in":"query","name":"selectInState","required":false,"schema":{"default":"STATE_UNSPECIFIED","enum":["STATE_UNSPECIFIED","STATE_FAILED","STATE_OPEN","STATE_PASSED","STATE_REJECTED","STATE_DECLINED","STATE_ENACTED","STATE_WAITING_FOR_NODE_VOTE"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetProposalsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetProposals","summary":"Get governance data (proposals and votes) for all proposals"}},"/key-rotations":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetKeyRotationsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetKeyRotations","summary":"Get all key rotations"}},"/liquidity-provisions/market/{market}":{"get":{"parameters":[{"description":"The target market for the liquidity provision orders","in":"path","name":"market","required":true,"schema":{"type":"string"}},{"description":"The party which submitted the liquidity provision orders.","in":"query","name":"party","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1LiquidityProvisionsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_LiquidityProvisions2","summary":"Get the liquidity provision orders"}},"/liquidity-provisions/party/{party}/market/{market}":{"get":{"parameters":[{"description":"The party which submitted the liquidity provision orders","in":"path","name":"party","required":true,"schema":{"type":"string"}},{"description":"The target market for the liquidity provision orders","in":"path","name":"market","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1LiquidityProvisionsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_LiquidityProvisions","summary":"Get the liquidity provision orders"}},"/markets":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1MarketsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_Markets","summary":"Get a list of Markets"}},"/markets-data":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1MarketsDataResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_MarketsData","summary":"Get a list of Market Data"}},"/markets-data/{marketId}":{"get":{"parameters":[{"description":"Market identifier","in":"path","name":"marketId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1MarketDataByIDResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_MarketDataByID","summary":"Get Market Data by Market ID"}},"/markets/{marketId}":{"get":{"parameters":[{"description":"Market identifier, required field","in":"path","name":"marketId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1MarketByIDResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_MarketByID","summary":"Get a Market by ID"}},"/markets/{marketId}/accounts":{"get":{"parameters":[{"description":"Market identifier","in":"path","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Asset identifier.","in":"query","name":"asset","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1MarketAccountsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_MarketAccounts","summary":"Get a list of Accounts by Market"}},"/markets/{marketId}/candles":{"get":{"parameters":[{"description":"Market identifier, required field.","in":"path","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Timestamp to retrieve candles since, in nanoseconds since the epoch,\nrequired field - See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`.","in":"query","name":"sinceTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"description":"Time interval for the candles, required field.\n\n - INTERVAL_UNSPECIFIED: Default value, always invalid\n - INTERVAL_I1M: 1 minute.\n - INTERVAL_I5M: 5 minutes.\n - INTERVAL_I15M: 15 minutes.\n - INTERVAL_I1H: 1 hour.\n - INTERVAL_I6H: 6 hours.\n - INTERVAL_I1D: 1 day.","in":"query","name":"interval","required":false,"schema":{"default":"INTERVAL_UNSPECIFIED","enum":["INTERVAL_UNSPECIFIED","INTERVAL_I1M","INTERVAL_I5M","INTERVAL_I15M","INTERVAL_I1H","INTERVAL_I6H","INTERVAL_I1D"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1CandlesResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_Candles","summary":"Get a list of Candles by Market"}},"/markets/{marketId}/depth":{"get":{"parameters":[{"description":"Market identifier, required field","in":"path","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Max depth limits the number of levels returned. Default is 0, which returns all levels.","in":"query","name":"maxDepth","required":false,"schema":{"format":"uint64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1MarketDepthResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_MarketDepth","summary":"Get Market Depth"}},"/markets/{marketId}/orders":{"get":{"parameters":[{"description":"Market identifier, required field","in":"path","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1OrdersByMarketResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_OrdersByMarket","summary":"Get a list of Orders by Market"}},"/markets/{marketId}/orders/{orderId}":{"get":{"parameters":[{"description":"Market identifier, required field","in":"path","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Order identifier, required field","in":"path","name":"orderId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1OrderByMarketAndIDResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_OrderByMarketAndID","summary":"Get an Order by Market and Order ID"}},"/markets/{marketId}/trades":{"get":{"parameters":[{"description":"Market identifier, required field","in":"path","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1TradesByMarketResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_TradesByMarket","summary":"Get a list of Trades by Market"}},"/markets/{marketId}/trades/latest":{"get":{"parameters":[{"description":"Market identifier, required field","in":"path","name":"marketId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1LastTradeResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_LastTrade","summary":"Get latest Trade"}},"/network/parameters":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1NetworkParametersResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_NetworkParameters","summary":"Get the network parameters"}},"/nodes":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetNodesResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetNodes","summary":"List all known network nodes"}},"/nodes-data":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetNodeDataResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetNodeData","summary":"Get data of current node"}},"/nodes/{id}":{"get":{"parameters":[{"description":"Required id of node","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetNodeByIDResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetNodeByID","summary":"Get a specific node by ID"}},"/oracle-data":{"get":{"parameters":[{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1ListOracleDataResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_ListOracleData","summary":"Get all oracle data"}},"/oracle-specs":{"get":{"parameters":[{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1OracleSpecsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_OracleSpecs","summary":"Get the oracle specs"}},"/oracle-specs/{id}":{"get":{"parameters":[{"description":"The id to get the oracle spec for","in":"path","name":"id","required":true,"schema":{"type":"string"}},{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1OracleSpecResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_OracleSpec","summary":"Get an oracle spec by ID"}},"/oracle-specs/{id}/oracle-data":{"get":{"parameters":[{"description":"The id to get the oracle spec for","in":"path","name":"id","required":true,"schema":{"type":"string"}},{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1OracleDataBySpecResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_OracleDataBySpec","summary":"Get oracle data that matched the given spec"}},"/orders/fee/estimate":{"post":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1EstimateFeeResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_EstimateFee","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1EstimateFeeRequest"}}},"required":true},"summary":"Get an estimate for the fee to be paid for a given order"}},"/orders/margins/estimate":{"post":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1EstimateMarginResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_EstimateMargin","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1EstimateMarginRequest"}}},"required":true},"summary":"Get an estimate for the margin required for a new order"}},"/orders/{orderId}/trades":{"get":{"parameters":[{"description":"Order identifier, required field","in":"path","name":"orderId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1TradesByOrderResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_TradesByOrder","summary":"Get a list of Trades by Order"}},"/orders/{orderId}/versions":{"get":{"parameters":[{"description":"Order identifier, required field","in":"path","name":"orderId","required":true,"schema":{"type":"string"}},{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1OrderVersionsByIDResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_OrderVersionsByID","summary":"Get all versions of the order by its orderID"}},"/orders/{reference}":{"get":{"parameters":[{"description":"Unique reference, required field","in":"path","name":"reference","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1OrderByReferenceResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_OrderByReference","summary":"Get an Order by Pending Order reference (UUID)"}},"/parties":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1PartiesResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_Parties","summary":"Get a list of Parties"}},"/parties/{partyId}":{"get":{"parameters":[{"description":"Party identifier, required field","in":"path","name":"partyId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1PartyByIDResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_PartyByID","summary":"Get a Party by ID"}},"/parties/{partyId}/accounts":{"get":{"parameters":[{"description":"Party identifier","in":"path","name":"partyId","required":true,"schema":{"type":"string"}},{"description":"Market identifier.","in":"query","name":"marketId","required":false,"schema":{"type":"string"}},{"description":"Account type, required field.\n\n - ACCOUNT_TYPE_UNSPECIFIED: Default value\n - ACCOUNT_TYPE_INSURANCE: Insurance pool accounts contain insurance pool funds for a market\n - ACCOUNT_TYPE_SETTLEMENT: Settlement accounts exist only during settlement or mark-to-market\n - ACCOUNT_TYPE_MARGIN: Margin accounts contain funds set aside for the margin needed to support a party's open positions.\nEach party will have a margin account for each market they have traded in.\nThe required initial margin is allocated to each market from your general account.\nCollateral in the margin account can't be withdrawn or used as margin on another market until\nit is released back to the general account.\nThe Vega protocol uses an internal accounting system to segregate funds held as\nmargin from other funds to ensure they are never lost or 'double spent'\n\nMargin account funds will vary as margin requirements on positions change\n - ACCOUNT_TYPE_GENERAL: General accounts contain the collateral for a party that is not otherwise allocated. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements\n - ACCOUNT_TYPE_FEES_INFRASTRUCTURE: Infrastructure accounts contain fees earned by providing infrastructure on Vega\n - ACCOUNT_TYPE_FEES_LIQUIDITY: Liquidity accounts contain fees earned by providing liquidity on Vega markets\n - ACCOUNT_TYPE_FEES_MAKER: This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place\n - ACCOUNT_TYPE_BOND: This account is created to maintain liquidity providers funds commitments\n - ACCOUNT_TYPE_EXTERNAL: External account represents an external source (deposit/withdrawal)\n - ACCOUNT_TYPE_GLOBAL_INSURANCE: Global insurance account for the asset\n - ACCOUNT_TYPE_GLOBAL_REWARD: Global reward account for the asset\n - ACCOUNT_TYPE_PENDING_TRANSFERS: Per asset account used to store pending transfers (if any)\n - ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES: Per asset reward account for fees paid to makers\n - ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES: Per asset reward account for fees received by makers\n - ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES: Per asset reward account for fees received by liquidity providers\n - ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS: Per asset reward account for market proposers when the market goes above some trading threshold","in":"query","name":"type","required":false,"schema":{"default":"ACCOUNT_TYPE_UNSPECIFIED","enum":["ACCOUNT_TYPE_UNSPECIFIED","ACCOUNT_TYPE_INSURANCE","ACCOUNT_TYPE_SETTLEMENT","ACCOUNT_TYPE_MARGIN","ACCOUNT_TYPE_GENERAL","ACCOUNT_TYPE_FEES_INFRASTRUCTURE","ACCOUNT_TYPE_FEES_LIQUIDITY","ACCOUNT_TYPE_FEES_MAKER","ACCOUNT_TYPE_BOND","ACCOUNT_TYPE_EXTERNAL","ACCOUNT_TYPE_GLOBAL_INSURANCE","ACCOUNT_TYPE_GLOBAL_REWARD","ACCOUNT_TYPE_PENDING_TRANSFERS","ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES","ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS"],"type":"string"}},{"description":"Asset identifier.","in":"query","name":"asset","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1PartyAccountsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_PartyAccounts","summary":"Get a list of Accounts by Party"}},"/parties/{partyId}/deposits":{"get":{"parameters":[{"description":"The party to get the deposits for","in":"path","name":"partyId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1DepositsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_Deposits","summary":"Get deposits for a party"}},"/parties/{partyId}/markets/{marketId}/margin":{"get":{"parameters":[{"description":"Party identifier, required field","in":"path","name":"partyId","required":true,"schema":{"type":"string"}},{"description":"Market identifier","in":"path","name":"marketId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1MarginLevelsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_MarginLevels","summary":"Get Margin Levels by Party ID"}},"/parties/{partyId}/orders":{"get":{"parameters":[{"description":"Party identifier, required field","in":"path","name":"partyId","required":true,"schema":{"type":"string"}},{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1OrdersByPartyResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_OrdersByParty","summary":"Get a list of Orders by Party"}},"/parties/{partyId}/positions":{"get":{"parameters":[{"description":"Party identifier, required field","in":"path","name":"partyId","required":true,"schema":{"type":"string"}},{"description":"Market identifier.","in":"query","name":"marketId","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1PositionsByPartyResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_PositionsByParty","summary":"Get a list of Positions by Party"}},"/parties/{partyId}/proposals":{"get":{"parameters":[{"description":"Party identifier, required field","in":"path","name":"partyId","required":true,"schema":{"type":"string"}},{"description":"Optional proposal state.\n\n - STATE_UNSPECIFIED: Default value, always invalid\n - STATE_FAILED: Proposal enactment has failed - even though proposal has passed, its execution could not be performed\n - STATE_OPEN: Proposal is open for voting\n - STATE_PASSED: Proposal has gained enough support to be executed\n - STATE_REJECTED: Proposal wasn't accepted (proposal terms failed validation due to wrong configuration or failing to meet network requirements)\n - STATE_DECLINED: Proposal didn't get enough votes (either failing to gain required participation or majority level)\n - STATE_ENACTED: Proposal enacted\n - STATE_WAITING_FOR_NODE_VOTE: Waiting for node validation of the proposal","in":"query","name":"selectInState","required":false,"schema":{"default":"STATE_UNSPECIFIED","enum":["STATE_UNSPECIFIED","STATE_FAILED","STATE_OPEN","STATE_PASSED","STATE_REJECTED","STATE_DECLINED","STATE_ENACTED","STATE_WAITING_FOR_NODE_VOTE"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetProposalsByPartyResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetProposalsByParty","summary":"Get governance data (proposals and votes) for proposals by party authoring them"}},"/parties/{partyId}/rewards":{"get":{"parameters":[{"in":"path","name":"partyId","required":true,"schema":{"type":"string"}},{"in":"query","name":"assetId","required":false,"schema":{"type":"string"}},{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetRewardsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetRewards","summary":"Get rewards"}},"/parties/{partyId}/trades":{"get":{"parameters":[{"description":"Party identifier. Required field","in":"path","name":"partyId","required":true,"schema":{"type":"string"}},{"description":"Market identifier.","in":"query","name":"marketId","required":false,"schema":{"type":"string"}},{"description":"Skip the number of records specified, default is 0.","in":"query","name":"pagination.skip","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Limit the number of returned records to the value specified, default is 50.","in":"query","name":"pagination.limit","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order.","in":"query","name":"pagination.descending","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1TradesByPartyResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_TradesByParty","summary":"Get a list of Trades by Party"}},"/parties/{partyId}/votes":{"get":{"parameters":[{"description":"Party identifier, required field","in":"path","name":"partyId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetVotesByPartyResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetVotesByParty","summary":"Get votes by party casting them"}},"/parties/{party}/stake":{"get":{"parameters":[{"in":"path","name":"party","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1PartyStakeResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_PartyStake"}},"/time":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1GetVegaTimeResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_GetVegaTime","summary":"Get Time"}},"/transfers":{"get":{"parameters":[{"in":"query","name":"pubkey","required":false,"schema":{"type":"string"}},{"in":"query","name":"isFrom","required":false,"schema":{"type":"boolean"}},{"in":"query","name":"isTo","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1TransfersResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_Transfers"}},"/withdrawals/party/{partyId}":{"get":{"parameters":[{"description":"The party to get the withdrawals for","in":"path","name":"partyId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1WithdrawalsResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_Withdrawals","summary":"Get withdrawals for a party"}},"/withdrawals/{id}":{"get":{"parameters":[{"description":"The identifier of the withdrawal","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1WithdrawalResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_Withdrawal","summary":"Get a withdrawal by its identifier"}},"/withdrawals/{withdrawalId}/approval/erc20":{"get":{"parameters":[{"description":"The identifier of the withdrawal","in":"path","name":"withdrawalId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v1ERC20WithdrawalApprovalResponse"}}},"description":"A successful response."},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["TradingDataService"],"operationId":"TradingDataService_ERC20WithdrawalApproval","summary":"Get the bundle approval for an ERC20 withdrawal,\nthese data are being used to bundle the call to the smart contract on the ethereum bridge"}}},"components":{"schemas":{"ConditionOperator":{"default":"OPERATOR_UNSPECIFIED","description":"Comparator describes the type of comparison.\n\n - OPERATOR_UNSPECIFIED: The default value\n - OPERATOR_EQUALS: Verify if the property values are strictly equal or not.\n - OPERATOR_GREATER_THAN: Verify if the data source data value is greater than the Condition value.\n - OPERATOR_GREATER_THAN_OR_EQUAL: Verify if the data source data value is greater than or equal to the Condition\nvalue.\n - OPERATOR_LESS_THAN: Verify if the data source data value is less than the Condition value.\n - OPERATOR_LESS_THAN_OR_EQUAL: Verify if the data source data value is less or equal to than the Condition\nvalue.","enum":["OPERATOR_UNSPECIFIED","OPERATOR_EQUALS","OPERATOR_GREATER_THAN","OPERATOR_GREATER_THAN_OR_EQUAL","OPERATOR_LESS_THAN","OPERATOR_LESS_THAN_OR_EQUAL"],"type":"string"},"MarketTradingMode":{"default":"TRADING_MODE_UNSPECIFIED","description":"- TRADING_MODE_UNSPECIFIED: Default value, this is invalid\n - TRADING_MODE_CONTINUOUS: Normal trading\n - TRADING_MODE_BATCH_AUCTION: Auction trading (FBA)\n - TRADING_MODE_OPENING_AUCTION: Opening auction\n - TRADING_MODE_MONITORING_AUCTION: Auction triggered by monitoring\n - TRADING_MODE_NO_TRADING: Not trading is allowed","enum":["TRADING_MODE_UNSPECIFIED","TRADING_MODE_CONTINUOUS","TRADING_MODE_BATCH_AUCTION","TRADING_MODE_OPENING_AUCTION","TRADING_MODE_MONITORING_AUCTION","TRADING_MODE_NO_TRADING"],"title":"The trading mode the market is currently running, also referred to as 'market state'","type":"string"},"OracleDataSubmissionOracleSource":{"default":"ORACLE_SOURCE_UNSPECIFIED","description":"- ORACLE_SOURCE_UNSPECIFIED: The default value\n - ORACLE_SOURCE_OPEN_ORACLE: Specifies that the payload will be base64 encoded JSON conforming to the Open Oracle standard\n - ORACLE_SOURCE_JSON: Specifies that the payload will be base64 encoded JSON, but does not specify the shape of the data","enum":["ORACLE_SOURCE_UNSPECIFIED","ORACLE_SOURCE_OPEN_ORACLE","ORACLE_SOURCE_JSON"],"title":"The supported Oracle sources","type":"string"},"OrderTimeInForce":{"default":"TIME_IN_FORCE_UNSPECIFIED","description":"- TIME_IN_FORCE_UNSPECIFIED: Default value for TimeInForce, can be valid for an amend\n - TIME_IN_FORCE_GTC: Good until cancelled, the order trades any amount and as much as possible\nand remains on the book until it either trades completely or is cancelled\n - TIME_IN_FORCE_GTT: Good until specified time, this order type trades any amount and as much as possible\nand remains on the book until it either trades completely, is cancelled, or expires at a set time\nNOTE: this may in future be multiple types or have sub types for orders that provide different ways of specifying expiry\n - TIME_IN_FORCE_IOC: Immediate or cancel, the order trades any amount and as much as possible\nbut does not remain on the book (whether it trades or not)\n - TIME_IN_FORCE_FOK: Fill or kill, The order either trades completely (remainingSize == 0 after adding)\nor not at all, does not remain on the book if it doesn't trade\n - TIME_IN_FORCE_GFA: Good for auction, this order is only accepted during an auction period\n - TIME_IN_FORCE_GFN: Good for normal, this order is only accepted during normal trading (that can be continuous trading or frequent batched auctions)","enum":["TIME_IN_FORCE_UNSPECIFIED","TIME_IN_FORCE_GTC","TIME_IN_FORCE_GTT","TIME_IN_FORCE_IOC","TIME_IN_FORCE_FOK","TIME_IN_FORCE_GFA","TIME_IN_FORCE_GFN"],"title":"Time In Force for an order","type":"string"},"TransactionResultFailureDetails":{"properties":{"error":{"title":"An error message explaining the reason for the transaction failing processing","type":"string"}},"type":"object"},"TransactionResultSuccessDetails":{"type":"object"},"UndelegateSubmissionMethod":{"default":"METHOD_UNSPECIFIED","enum":["METHOD_UNSPECIFIED","METHOD_NOW","METHOD_AT_END_OF_EPOCH","METHOD_IN_ANGER"],"type":"string"},"VoteValue":{"default":"VALUE_UNSPECIFIED","description":"- VALUE_UNSPECIFIED: Default value, always invalid\n - VALUE_NO: A vote against the proposal\n - VALUE_YES: A vote in favour of the proposal","enum":["VALUE_UNSPECIFIED","VALUE_NO","VALUE_YES"],"title":"Vote value","type":"string"},"datanodeapiv1KeyRotation":{"properties":{"blockHeight":{"format":"uint64","type":"string"},"newPubKey":{"type":"string"},"nodeId":{"type":"string"},"oldPubKey":{"type":"string"}},"type":"object"},"googlerpcStatus":{"properties":{"code":{"format":"int32","type":"integer"},"details":{"items":{"$ref":"#/components/schemas/protobufAny"},"type":"array"},"message":{"type":"string"}},"type":"object"},"protobufAny":{"additionalProperties":{},"properties":{"@type":{"type":"string"}},"type":"object"},"v1AccountsSubscribeResponse":{"properties":{"account":{"$ref":"#/components/schemas/vegaAccount"}},"type":"object"},"v1AnnounceNode":{"properties":{"avatarUrl":{"title":"AvatarURL of the validator","type":"string"},"chainPubKey":{"title":"Public key for the blockchain, required field","type":"string"},"country":{"title":"Country code (ISO 3166-1 alpha-2) for the location of the node","type":"string"},"ethereumAddress":{"title":"Ethereum public key, required field","type":"string"},"ethereumSignature":{"$ref":"#/components/schemas/v1Signature","title":"Signature from the validator made using the ethereum wallet"},"fromEpoch":{"format":"uint64","title":"The epoch from which the validator is expected\nto be ready to validate blocks","type":"string"},"id":{"title":"ID of the validator, (public master key)","type":"string"},"infoUrl":{"title":"URL with more info on the node","type":"string"},"name":{"title":"Name of the validator","type":"string"},"submitterAddress":{"title":"Ethereum public key to use as a submitter to allow automatic signature generation","type":"string"},"vegaPubKey":{"title":"Vega public key, required field","type":"string"},"vegaPubKeyIndex":{"format":"int64","title":"Vega public key derivation index","type":"integer"},"vegaSignature":{"$ref":"#/components/schemas/v1Signature","title":"Signature from the validator made using the vega wallet"}},"title":"Used announce a node as a new potential validator","type":"object"},"v1AssetByIDResponse":{"properties":{"asset":{"$ref":"#/components/schemas/vegaAsset","title":"An asset record, if found"}},"title":"Response for an asset given an asset identifier","type":"object"},"v1AssetsResponse":{"properties":{"assets":{"items":{"$ref":"#/components/schemas/vegaAsset"},"title":"A list of 0 or more assets","type":"array"}},"title":"Response for a list of all assets enabled on Vega","type":"object"},"v1AuctionEvent":{"properties":{"end":{"format":"int64","title":"Timestamp containing the end time for an auction","type":"string"},"extensionTrigger":{"$ref":"#/components/schemas/vegaAuctionTrigger","title":"If an auction was ongoing, but was extended for whatever reason, this field will\nbe set to the trigger type indicating which component extended the auction"},"leave":{"title":"True if the event indicates leaving auction mode and False otherwise","type":"boolean"},"marketId":{"title":"Market identifier for the event","type":"string"},"openingAuction":{"title":"True if the event indicates an auction opening and False otherwise","type":"boolean"},"start":{"format":"int64","title":"Timestamp containing the start time for an auction","type":"string"},"trigger":{"$ref":"#/components/schemas/vegaAuctionTrigger","title":"the reason this market is/was in auction"}},"title":"An auction event indicating a change in auction state, for example starting or ending an auction","type":"object"},"v1BatchMarketInstructions":{"properties":{"amendments":{"items":{"$ref":"#/components/schemas/v1OrderAmendment"},"title":"A list of order amendments to be processed sequentially","type":"array"},"cancellations":{"items":{"$ref":"#/components/schemas/v1OrderCancellation"},"title":"A list of order cancellations to be processed sequentially","type":"array"},"submissions":{"items":{"$ref":"#/components/schemas/v1OrderSubmission"},"title":"A list of order submissions to be processed sequentially","type":"array"}},"title":"A batch of order instructions.\nThis command accepts only the following batches of commands\nand will be processed in the following order:\n- OrderCancellation\n- OrderAmendment\n- OrderSubmission\nThe total amount of commands in the batch across all three lists of\ninstructions is restricted by the following network parameter:\n\"spam.protection.max.batchSize\"","type":"object"},"v1BeginBlock":{"properties":{"hash":{"type":"string"},"height":{"format":"uint64","type":"string"},"timestamp":{"format":"int64","type":"string"}},"title":"BeginBlock","type":"object"},"v1BusEvent":{"properties":{"account":{"$ref":"#/components/schemas/vegaAccount","title":"Account events"},"asset":{"$ref":"#/components/schemas/vegaAsset","title":"Asset events"},"auction":{"$ref":"#/components/schemas/v1AuctionEvent","title":"Auction events - See [AuctionEvent](#vega.AuctionEvent)"},"beginBlock":{"$ref":"#/components/schemas/v1BeginBlock","title":"The core is starting to process a new block"},"block":{"title":"The batch (or block) of transactions that the events relate to","type":"string"},"chainId":{"type":"string"},"checkpoint":{"$ref":"#/components/schemas/v1CheckpointEvent","title":"Checkpoint was created"},"delegationBalance":{"$ref":"#/components/schemas/v1DelegationBalanceEvent","title":"Delegation balance events"},"deposit":{"$ref":"#/components/schemas/vegaDeposit","title":"Deposit events"},"endBlock":{"$ref":"#/components/schemas/v1EndBlock","title":"The core finished to process a block"},"epochEvent":{"$ref":"#/components/schemas/v1EpochEvent","title":"Epoch update events - See [Epoch](#vega.Epoch)"},"erc20MultisigSetThresholdEvent":{"$ref":"#/components/schemas/v1ERC20MultiSigThresholdSetEvent","title":"ERC20 multi sig set threshold event"},"erc20MultisigSignerAdded":{"$ref":"#/components/schemas/v1ERC20MultiSigSignerAdded","title":"ERC20 multi sig signer added"},"erc20MultisigSignerEvent":{"$ref":"#/components/schemas/v1ERC20MultiSigSignerEvent","title":"ERC20 multi sig signer event"},"erc20MultisigSignerRemoved":{"$ref":"#/components/schemas/v1ERC20MultiSigSignerRemoved","title":"ERC20 multi sig signer removed"},"ethereumKeyRotation":{"$ref":"#/components/schemas/v1EthereumKeyRotation","title":"Ethereum key rotation took place"},"id":{"title":"A unique event identifier for the message","type":"string"},"keyRotation":{"$ref":"#/components/schemas/vegaeventsv1KeyRotation","title":"Key rotation took place"},"ledgerMovements":{"$ref":"#/components/schemas/v1LedgerMovements","title":"Transfer responses update events - See [TransferResponses](#vega.TransferResponses)"},"liquidityProvision":{"$ref":"#/components/schemas/vegaLiquidityProvision","title":"LiquidityProvision  events"},"lossSocialization":{"$ref":"#/components/schemas/v1LossSocialization","title":"Loss socialization events - See [LossSocialization](#vega.LossSocialization)"},"marginLevels":{"$ref":"#/components/schemas/vegaMarginLevels","title":"Margin level update events"},"market":{"$ref":"#/components/schemas/v1MarketEvent","title":"Market tick events - See [MarketEvent](#vega.MarketEvent)"},"marketCreated":{"$ref":"#/components/schemas/vegaMarket","title":"Market created events"},"marketData":{"$ref":"#/components/schemas/vegaMarketData","title":"Market data events"},"marketTick":{"$ref":"#/components/schemas/v1MarketTick","title":"Market tick events - See [MarketTick](#vega.MarketTick)"},"marketUpdated":{"$ref":"#/components/schemas/vegaMarket","title":"Market created events"},"networkLimits":{"$ref":"#/components/schemas/vegaNetworkLimits","title":"Network limits events"},"networkParameter":{"$ref":"#/components/schemas/vegaNetworkParameter","title":"Network parameter events"},"nodeSignature":{"$ref":"#/components/schemas/v1NodeSignature","title":"Node signature events"},"oracleData":{"$ref":"#/components/schemas/v1OracleData","title":"OracleData events"},"oracleSpec":{"$ref":"#/components/schemas/v1OracleSpec","title":"OracleSpec events"},"order":{"$ref":"#/components/schemas/vegaOrder","title":"Order events"},"party":{"$ref":"#/components/schemas/vegaParty","title":"Party events"},"positionResolution":{"$ref":"#/components/schemas/v1PositionResolution","title":"Position resolution events - See [PositionResolution](#vega.PositionResolution)"},"positionStateEvent":{"$ref":"#/components/schemas/v1PositionStateEvent","title":"Position status for a party in a market"},"proposal":{"$ref":"#/components/schemas/vegaProposal","title":"Proposal events (for governance)"},"protocolUpgradeEvent":{"$ref":"#/components/schemas/v1ProtocolUpgradeEvent","title":"Protocol upgrade proposal updates"},"protocolUpgradeStarted":{"$ref":"#/components/schemas/v1ProtocolUpgradeStarted","title":"The core is starting a protocol upgrade"},"rankingEvent":{"$ref":"#/components/schemas/v1ValidatorRankingEvent","title":"Ranking event"},"rewardPayout":{"$ref":"#/components/schemas/v1RewardPayoutEvent","title":"Reward payout event"},"riskFactor":{"$ref":"#/components/schemas/vegaRiskFactor","title":"Risk factor events"},"settleDistressed":{"$ref":"#/components/schemas/v1SettleDistressed","title":"Position distressed events - See [SettleDistressed](#vega.SettleDistressed)"},"settleMarket":{"$ref":"#/components/schemas/v1SettleMarket","title":"Settle market event for data-node to update positions for settled markets"},"settlePosition":{"$ref":"#/components/schemas/v1SettlePosition","title":"Position settlement events - See [SettlePosition](#vega.SettlePosition)"},"stakeLinking":{"$ref":"#/components/schemas/v1StakeLinking","title":"Staking event"},"stateVar":{"$ref":"#/components/schemas/v1StateVar","title":"State variable consensus state transition update"},"timeUpdate":{"$ref":"#/components/schemas/v1TimeUpdate","title":"Time update events - See [TimeUpdate](#vega.TimeUpdate)"},"trade":{"$ref":"#/components/schemas/vegaTrade","title":"Trade events"},"transactionResult":{"$ref":"#/components/schemas/v1TransactionResult","title":"The result of a transaction processed by the network"},"transfer":{"$ref":"#/components/schemas/vegaeventsv1Transfer","title":"Transfer event"},"txErrEvent":{"$ref":"#/components/schemas/v1TxErrorEvent","title":"Transaction error events, not included in the ALL event type"},"txHash":{"type":"string"},"type":{"$ref":"#/components/schemas/v1BusEventType","title":"The type of bus event (one of the list below)"},"validatorScore":{"$ref":"#/components/schemas/v1ValidatorScoreEvent","title":"Validator score calculated"},"validatorUpdate":{"$ref":"#/components/schemas/v1ValidatorUpdate","title":"Validator update events"},"version":{"format":"int64","title":"Version of bus event","type":"integer"},"vote":{"$ref":"#/components/schemas/vegaVote","title":"Vote events (for governance)"},"withdrawal":{"$ref":"#/components/schemas/vegaWithdrawal","title":"Withdrawal events"}},"title":"A bus event is a container for event bus events emitted by Vega","type":"object"},"v1BusEventType":{"default":"BUS_EVENT_TYPE_UNSPECIFIED","description":"- BUS_EVENT_TYPE_UNSPECIFIED: Default value, always invalid\n - BUS_EVENT_TYPE_ALL: Events of ALL event types, used when filtering stream from event bus\n - BUS_EVENT_TYPE_TIME_UPDATE: Event for blockchain time updates\n - BUS_EVENT_TYPE_LEDGER_MOVEMENTS: Event for when a transfer happens internally, contains the transfer information\n - BUS_EVENT_TYPE_POSITION_RESOLUTION: Event indicating position resolution has occurred\n - BUS_EVENT_TYPE_ORDER: Event for order updates, both new and existing orders\n - BUS_EVENT_TYPE_ACCOUNT: Event for account updates\n - BUS_EVENT_TYPE_PARTY: Event for party updates\n - BUS_EVENT_TYPE_TRADE: Event indicating a new trade has occurred\n - BUS_EVENT_TYPE_MARGIN_LEVELS: Event indicating margin levels have changed for a party\n - BUS_EVENT_TYPE_PROPOSAL: Event for proposal updates (for governance)\n - BUS_EVENT_TYPE_VOTE: Event indicating a new vote has occurred (for governance)\n - BUS_EVENT_TYPE_MARKET_DATA: Event for market data updates\n - BUS_EVENT_TYPE_NODE_SIGNATURE: Event for a new signature for a Vega node\n - BUS_EVENT_TYPE_LOSS_SOCIALIZATION: Event indicating loss socialisation occurred for a party\n - BUS_EVENT_TYPE_SETTLE_POSITION: Event for when a position is being settled\n - BUS_EVENT_TYPE_SETTLE_DISTRESSED: Event for when a position is distressed\n - BUS_EVENT_TYPE_MARKET_CREATED: Event indicating a new market was created\n - BUS_EVENT_TYPE_ASSET: Event for when an asset is added to Vega\n - BUS_EVENT_TYPE_MARKET_TICK: Event indicating a market tick event\n - BUS_EVENT_TYPE_WITHDRAWAL: Event for when a withdrawal occurs\n - BUS_EVENT_TYPE_DEPOSIT: Event for when a deposit occurs\n - BUS_EVENT_TYPE_AUCTION: Event indicating a change in auction state, for example starting or ending an auction\n - BUS_EVENT_TYPE_RISK_FACTOR: Event indicating a risk factor has been updated\n - BUS_EVENT_TYPE_NETWORK_PARAMETER: Event indicating a network parameter has been added or updated\n - BUS_EVENT_TYPE_LIQUIDITY_PROVISION: Event indicating a liquidity provision has been created or updated\n - BUS_EVENT_TYPE_MARKET_UPDATED: Event indicating a new market was created\n - BUS_EVENT_TYPE_ORACLE_SPEC: Event indicating an oracle spec has been created or updated\n - BUS_EVENT_TYPE_ORACLE_DATA: Event indicating that an oracle data has been broadcast\n - BUS_EVENT_TYPE_DELEGATION_BALANCE: Event indicating that an delegation balance of a party to a node for current epoch has changed\n - BUS_EVENT_TYPE_VALIDATOR_SCORE: Event indicating the validator score for the given epoch\n - BUS_EVENT_TYPE_EPOCH_UPDATE: Event indicating the start or end of an epoch\n - BUS_EVENT_TYPE_VALIDATOR_UPDATE: Event indicating that validator node has been updated\n - BUS_EVENT_TYPE_STAKE_LINKING: Event indicating a new staking event have been processed by the network\n - BUS_EVENT_TYPE_REWARD_PAYOUT_EVENT: Event indicating the payout of a reward has been initiated\n - BUS_EVENT_TYPE_CHECKPOINT: Event indicating a new checkpoint was created\n - BUS_EVENT_TYPE_STREAM_START: Event indicating stream is starting\n - BUS_EVENT_TYPE_KEY_ROTATION: Event indicating key rotation took place\n - BUS_EVENT_TYPE_STATE_VAR: Event indicating state transitions in state variable consensus\n - BUS_EVENT_TYPE_NETWORK_LIMITS: Event indicating network limits set or updated\n - BUS_EVENT_TYPE_TRANSFER: Event indicating a update for a transfert\n - BUS_EVENT_TYPE_VALIDATOR_RANKING: Event indicating the ranking of validator and their status in vega\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_EVENT: Event indicating a new multi sig signer event have been processed\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SET_THRESHOLD: Event indicating the erc20 multi sig threshold have been updated\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_ADDED: Event indicating a new signer has been added to the erc20 multisig\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_REMOVED: Event indicating a signer has been removed from the erc20 multisig\n - BUS_EVENT_TYPE_POSITION_STATE: Event indicting that a party's position has changed\n - BUS_EVENT_TYPE_ETHEREUM_KEY_ROTATION: Event indicating Ethereum key rotation took place\n - BUS_EVENT_TYPE_PROTOCOL_UPGRADE_PROPOSAL: Event indicating protocol upgrade proposal updates\n - BUS_EVENT_TYPE_BEGIN_BLOCK: The core is starting to process a new block\n - BUS_EVENT_TYPE_END_BLOCK: The core finished to process a block\n - BUS_EVENT_TYPE_PROTOCOL_UPGRADE_STARTED: The core is starting a protocol upgrade\n - BUS_EVENT_TYPE_SETTLE_MARKET: The market has stopped and settled\n - BUS_EVENT_TYPE_TRANSACTION_RESULT: The result of a transaction processed by the network\n - BUS_EVENT_TYPE_MARKET: Event indicating a market related event, for example when a market opens\n - BUS_EVENT_TYPE_TX_ERROR: Event used to report failed transactions back to a user, this is excluded from the ALL type","enum":["BUS_EVENT_TYPE_UNSPECIFIED","BUS_EVENT_TYPE_ALL","BUS_EVENT_TYPE_TIME_UPDATE","BUS_EVENT_TYPE_LEDGER_MOVEMENTS","BUS_EVENT_TYPE_POSITION_RESOLUTION","BUS_EVENT_TYPE_ORDER","BUS_EVENT_TYPE_ACCOUNT","BUS_EVENT_TYPE_PARTY","BUS_EVENT_TYPE_TRADE","BUS_EVENT_TYPE_MARGIN_LEVELS","BUS_EVENT_TYPE_PROPOSAL","BUS_EVENT_TYPE_VOTE","BUS_EVENT_TYPE_MARKET_DATA","BUS_EVENT_TYPE_NODE_SIGNATURE","BUS_EVENT_TYPE_LOSS_SOCIALIZATION","BUS_EVENT_TYPE_SETTLE_POSITION","BUS_EVENT_TYPE_SETTLE_DISTRESSED","BUS_EVENT_TYPE_MARKET_CREATED","BUS_EVENT_TYPE_ASSET","BUS_EVENT_TYPE_MARKET_TICK","BUS_EVENT_TYPE_WITHDRAWAL","BUS_EVENT_TYPE_DEPOSIT","BUS_EVENT_TYPE_AUCTION","BUS_EVENT_TYPE_RISK_FACTOR","BUS_EVENT_TYPE_NETWORK_PARAMETER","BUS_EVENT_TYPE_LIQUIDITY_PROVISION","BUS_EVENT_TYPE_MARKET_UPDATED","BUS_EVENT_TYPE_ORACLE_SPEC","BUS_EVENT_TYPE_ORACLE_DATA","BUS_EVENT_TYPE_DELEGATION_BALANCE","BUS_EVENT_TYPE_VALIDATOR_SCORE","BUS_EVENT_TYPE_EPOCH_UPDATE","BUS_EVENT_TYPE_VALIDATOR_UPDATE","BUS_EVENT_TYPE_STAKE_LINKING","BUS_EVENT_TYPE_REWARD_PAYOUT_EVENT","BUS_EVENT_TYPE_CHECKPOINT","BUS_EVENT_TYPE_STREAM_START","BUS_EVENT_TYPE_KEY_ROTATION","BUS_EVENT_TYPE_STATE_VAR","BUS_EVENT_TYPE_NETWORK_LIMITS","BUS_EVENT_TYPE_TRANSFER","BUS_EVENT_TYPE_VALIDATOR_RANKING","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_EVENT","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SET_THRESHOLD","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_ADDED","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_REMOVED","BUS_EVENT_TYPE_POSITION_STATE","BUS_EVENT_TYPE_ETHEREUM_KEY_ROTATION","BUS_EVENT_TYPE_PROTOCOL_UPGRADE_PROPOSAL","BUS_EVENT_TYPE_BEGIN_BLOCK","BUS_EVENT_TYPE_END_BLOCK","BUS_EVENT_TYPE_PROTOCOL_UPGRADE_STARTED","BUS_EVENT_TYPE_SETTLE_MARKET","BUS_EVENT_TYPE_TRANSACTION_RESULT","BUS_EVENT_TYPE_MARKET","BUS_EVENT_TYPE_TX_ERROR"],"title":"An (event) bus event type is used to specify a type of event\nIt has 2 styles of event:\nSingle values (e.g. BUS_EVENT_TYPE_ORDER) where they represent one data item\nGroup values (e.g. BUS_EVENT_TYPE_AUCTION) where they represent a group of data items","type":"string"},"v1CancelTransfer":{"properties":{"transferId":{"title":"The ID of the transfer to cancel","type":"string"}},"title":"A request for cancelling a recurring transfer","type":"object"},"v1CandlesResponse":{"properties":{"candles":{"items":{"$ref":"#/components/schemas/vegaCandle"},"title":"A list of 0 or more candles","type":"array"}},"title":"Response for a list of candles for a market at an interval","type":"object"},"v1CandlesSubscribeResponse":{"properties":{"candle":{"$ref":"#/components/schemas/vegaCandle"}},"type":"object"},"v1Checkpoint":{"properties":{"atBlock":{"format":"uint64","type":"string"},"blockHash":{"type":"string"},"hash":{"type":"string"}},"title":"The actual data regarding a checkpoint","type":"object"},"v1CheckpointEvent":{"properties":{"blockHash":{"type":"string"},"blockHeight":{"format":"uint64","type":"string"},"hash":{"type":"string"}},"type":"object"},"v1CheckpointsResponse":{"properties":{"checkpoints":{"items":{"$ref":"#/components/schemas/v1Checkpoint"},"type":"array"}},"title":"Response message containing all checkpoints requested","type":"object"},"v1Condition":{"properties":{"operator":{"$ref":"#/components/schemas/ConditionOperator","description":"comparator is the type of comparison to make on the value."},"value":{"description":"value is used by the comparator.","type":"string"}},"title":"Condition describes the condition that must be validated by the network","type":"object"},"v1Data":{"description":"Data describes valid source data that has been received by the node.\nIt represents both matched and unmatched data.","properties":{"broadcastAt":{"description":"broadcast_at is the time at which the data was broadcast to the markets\nwith a matching spec.\nIt has no value when the date did not match any spec.\nThe value is a Unix timestamp in nanoseconds.","format":"int64","type":"string"},"data":{"items":{"$ref":"#/components/schemas/v1Property"},"title":"data holds all the properties of the data","type":"array"},"matchedSpecIds":{"description":"matched_specs_ids lists all the specs that matched this data.\nWhen the array is empty, it means no spec matched this data.","items":{"type":"string"},"type":"array"},"signers":{"items":{"$ref":"#/components/schemas/v1Signer"},"type":"array"}},"type":"object"},"v1DataSourceSpec":{"description":"A data source spec describes the data source base that a product (or a risk model)\nwants to get from the data source engine.\nThis message contains additional information used by the API.","properties":{"config":{"$ref":"#/components/schemas/v1DataSourceSpecConfiguration"},"createdAt":{"format":"int64","title":"Creation Date time","type":"string"},"id":{"description":"id is a hash generated from the DataSpec data.","type":"string"},"status":{"$ref":"#/components/schemas/v1DataSourceSpecStatus","title":"status describes the status of the data source spec"},"updatedAt":{"format":"int64","title":"Last Updated timestamp","type":"string"}},"type":"object"},"v1DataSourceSpecConfiguration":{"description":"All types of external data sources use the same configuration set for meeting requirements\nin order for the data to be useful for Vega - valid signatures and matching filters.","properties":{"filters":{"description":"filters describes which source data are considered of interest or not for\nthe product (or the risk model).","items":{"$ref":"#/components/schemas/v1Filter"},"type":"array"},"signers":{"description":"signers is the list of authorized signatures that signed the data for this\nsource. All the signatures in the data source data should be contained in this\nexternal source. All the signatures in the data should be contained in this list.","items":{"$ref":"#/components/schemas/v1Signer"},"type":"array"}},"type":"object"},"v1DataSourceSpecStatus":{"default":"STATUS_UNSPECIFIED","description":"- STATUS_UNSPECIFIED: The default value.\n - STATUS_ACTIVE: STATUS_ACTIVE describes an active data source spec.\n - STATUS_DEACTIVATED: STATUS_DEACTIVATED describes an data source spec that is not listening to data\nanymore.","enum":["STATUS_UNSPECIFIED","STATUS_ACTIVE","STATUS_DEACTIVATED"],"title":"Status describe the status of the data source spec","type":"string"},"v1DelegateSubmission":{"properties":{"amount":{"title":"The amount of stake to delegate","type":"string"},"nodeId":{"title":"The ID for the node to delegate to","type":"string"}},"title":"A command to submit an instruction to delegate some stake to a node","type":"object"},"v1DelegationBalanceEvent":{"properties":{"amount":{"type":"string"},"epochSeq":{"type":"string"},"nodeId":{"type":"string"},"party":{"type":"string"}},"title":"DelegationBalanceEvent - updates on the delegation balance of a party to a node in the current epoch in effect","type":"object"},"v1DelegationsResponse":{"properties":{"delegations":{"items":{"$ref":"#/components/schemas/vegaDelegation"},"type":"array"}},"type":"object"},"v1DepositResponse":{"properties":{"deposit":{"$ref":"#/components/schemas/vegaDeposit","title":"The deposit matching the identifier from the request"}},"title":"A response for a deposit","type":"object"},"v1DepositsResponse":{"properties":{"deposits":{"items":{"$ref":"#/components/schemas/vegaDeposit"},"title":"The list of deposits for the specified party","type":"array"}},"title":"The response for a list of deposits","type":"object"},"v1ERC20MultiSigSignerAdded":{"properties":{"epochSeq":{"title":"The epoch that the node was added for","type":"string"},"newSigner":{"title":"The ethereum address of the new signer","type":"string"},"nonce":{"description":"The nonce used.","type":"string"},"signatureId":{"title":"The identifier of the signature bundle","type":"string"},"submitter":{"title":"The address of the submitter of the transaction","type":"string"},"timestamp":{"format":"int64","title":"the time at which this happened","type":"string"},"validatorId":{"title":"The vega node ID of the node to be added","type":"string"}},"type":"object"},"v1ERC20MultiSigSignerEvent":{"properties":{"blockNumber":{"format":"uint64","type":"string"},"blockTime":{"format":"int64","type":"string"},"id":{"type":"string"},"logIndex":{"format":"uint64","type":"string"},"nonce":{"type":"string"},"signer":{"type":"string"},"txHash":{"type":"string"},"type":{"$ref":"#/components/schemas/v1ERC20MultiSigSignerEventType"}},"type":"object"},"v1ERC20MultiSigSignerEventType":{"default":"TYPE_UNSPECIFIED","enum":["TYPE_UNSPECIFIED","TYPE_ADDED","TYPE_REMOVED"],"type":"string"},"v1ERC20MultiSigSignerRemoved":{"properties":{"epochSeq":{"title":"The epoch that the node was removed for","type":"string"},"nonce":{"description":"The nonce used.","type":"string"},"oldSigner":{"title":"The ethereum address of the signer to be removed","type":"string"},"signatureSubmitters":{"items":{"$ref":"#/components/schemas/v1ERC20MultiSigSignerRemovedSubmitter"},"title":"A list containing all the IDs of bundle generated\nThere should be one bundle generated for every validators\nin the validator set","type":"array"},"timestamp":{"format":"int64","title":"the time at which this happened","type":"string"},"validatorId":{"title":"The vega node ID of the node which is to be removed","type":"string"}},"type":"object"},"v1ERC20MultiSigSignerRemovedSubmitter":{"properties":{"signatureId":{"title":"The ID of this signature bundle","type":"string"},"submitter":{"title":"The address of the submitter of the transaction","type":"string"}},"type":"object"},"v1ERC20MultiSigThresholdSetEvent":{"properties":{"blockNumber":{"format":"uint64","type":"string"},"blockTime":{"format":"int64","type":"string"},"id":{"type":"string"},"logIndex":{"format":"uint64","type":"string"},"newThreshold":{"format":"int64","type":"integer"},"nonce":{"type":"string"},"txHash":{"type":"string"}},"type":"object"},"v1ERC20WithdrawalApprovalResponse":{"properties":{"amount":{"title":"The amount to be withdrawn","type":"string"},"assetSource":{"title":"The address of asset on ethereum","type":"string"},"creation":{"format":"int64","title":"The creation timestamps","type":"string"},"expiry":{"format":"int64","title":"The expiry / until what time the request is valid","type":"string"},"nonce":{"title":"The nonce, which is actually the internal reference for the withdrawal","type":"string"},"signatures":{"title":"The signatures bundle as hex encoded data, forward by 0x\ne.g: 0x + sig1 + sig2 + ... + sixN","type":"string"},"targetAddress":{"title":"The ethereum address to withdraw the funds to, 0x prefixed","type":"string"}},"title":"The response with all information required to bundle the call to finalise the withdrawal on the erc20 bridge\nfunction withdraw_asset(address asset_source, uint256 asset_id, uint256 amount, uint256 expiry, uint256 nonce, bytes memory signatures)","type":"object"},"v1ETHAddress":{"properties":{"address":{"type":"string"}},"type":"object"},"v1EndBlock":{"properties":{"height":{"format":"uint64","type":"string"}},"title":"EndBlock","type":"object"},"v1EpochEvent":{"properties":{"action":{"$ref":"#/components/schemas/vegaEpochAction","title":"Action tells us what action is taking place"},"endTime":{"format":"int64","title":"What time did it actually end","type":"string"},"expireTime":{"format":"int64","title":"What time should this epoch end","type":"string"},"seq":{"format":"uint64","title":"Sequence number that increases by one each epoch","type":"string"},"startTime":{"format":"int64","title":"What time did this epoch start","type":"string"}},"title":"Epoch details","type":"object"},"v1EstimateFeeRequest":{"properties":{"order":{"$ref":"#/components/schemas/vegaOrder","title":"Order to estimate fees for\nthe following fields in the order are required:\nMarketID (used to specify the fee factors)\nPrice (the price at which the order could trade)\nSize (the size at which the order could eventually trade)"}},"title":"Request to fetch the estimated fee if an order were to trade immediately","type":"object"},"v1EstimateFeeResponse":{"properties":{"fee":{"$ref":"#/components/schemas/vegaFee","title":"Summary of the estimated fees for this order if it were to trade now"}},"title":"Response to a EstimateFeeRequest, containing the estimated fees for a given order","type":"object"},"v1EstimateMarginRequest":{"properties":{"order":{"$ref":"#/components/schemas/vegaOrder","title":"Order to estimate fees for"}},"title":"Request to fetch the estimated MarginLevels if an order were to trade immediately","type":"object"},"v1EstimateMarginResponse":{"properties":{"marginLevels":{"$ref":"#/components/schemas/vegaMarginLevels","title":"Summary of the estimated margins for this order if it were to trade now"}},"title":"Response to a EstimateMarginRequest, containing the estimated marginLevels for a given order","type":"object"},"v1EthereumKeyRotateSubmission":{"properties":{"currentAddress":{"title":"Currently used public address","type":"string"},"ethereumSignature":{"$ref":"#/components/schemas/v1Signature","title":"Signature that can be verified using the new ethereum address"},"newAddress":{"title":"The new adress to rotate to","type":"string"},"submitterAddress":{"title":"Ethereum public key to use as a submitter to allow automatic signature generation","type":"string"},"targetBlock":{"format":"uint64","title":"Target block at which the key rotation will take effect on","type":"string"}},"title":"A transaction to allow validator to rotate their ethereum keys","type":"object"},"v1EthereumKeyRotation":{"properties":{"blockHeight":{"format":"uint64","title":"Height of the block where key rotation took effect","type":"string"},"newAddress":{"title":"New Ethereum address of validator node","type":"string"},"nodeId":{"title":"Node id of the node","type":"string"},"oldAddress":{"title":"Old Ethereum address of validator node","type":"string"}},"title":"An Ethereum key rotation events contains information about Ethereum key rotation","type":"object"},"v1ExternalData":{"properties":{"data":{"$ref":"#/components/schemas/v1Data"}},"type":"object"},"v1ExternalDataSourceSpec":{"properties":{"spec":{"$ref":"#/components/schemas/v1DataSourceSpec"}},"type":"object"},"v1FeeInfrastructureAccountsResponse":{"properties":{"accounts":{"items":{"$ref":"#/components/schemas/vegaAccount"},"title":"A list of 0 or more infrastructure fee accounts","type":"array"}},"title":"Response for a list of infrastructure fee accounts","type":"object"},"v1Filter":{"description":"Filter describes the conditions under which a data source data is considered of\ninterest or not.","properties":{"conditions":{"description":"conditions are the conditions that should be matched by the data to be\nconsidered of interest.","items":{"$ref":"#/components/schemas/v1Condition"},"type":"array"},"key":{"$ref":"#/components/schemas/v1PropertyKey","description":"key is the data source data property key targeted by the filter."}},"type":"object"},"v1GetEpochResponse":{"properties":{"epoch":{"$ref":"#/components/schemas/vegaEpoch"}},"type":"object"},"v1GetKeyRotationsByNodeResponse":{"properties":{"rotations":{"items":{"$ref":"#/components/schemas/datanodeapiv1KeyRotation"},"type":"array"}},"title":"Response with all key rotations per node","type":"object"},"v1GetKeyRotationsResponse":{"properties":{"rotations":{"items":{"$ref":"#/components/schemas/datanodeapiv1KeyRotation"},"type":"array"}},"title":"Response with all key rotations","type":"object"},"v1GetNetworkParametersProposalsResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/vegaGovernanceData"},"title":"A list of 0 or more governance data","type":"array"}},"title":"Response for a list of network parameter proposals","type":"object"},"v1GetNewAssetProposalsResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/vegaGovernanceData"},"title":"A list of 0 or more governance data","type":"array"}},"title":"Response for a list of new asset proposals","type":"object"},"v1GetNewFreeformProposalsResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/vegaGovernanceData"},"title":"A list of 0 or more governance data","type":"array"}},"title":"Response for a list of new freeform proposals","type":"object"},"v1GetNewMarketProposalsResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/vegaGovernanceData"},"title":"A list of 0 or more governance data","type":"array"}},"title":"Response for a list of new market proposals","type":"object"},"v1GetNodeByIDResponse":{"properties":{"node":{"$ref":"#/components/schemas/vegaNode"}},"title":"Response with all nodes","type":"object"},"v1GetNodeDataResponse":{"properties":{"nodeData":{"$ref":"#/components/schemas/vegaNodeData"}},"title":"Response with node data","type":"object"},"v1GetNodeSignaturesAggregateResponse":{"properties":{"signatures":{"items":{"$ref":"#/components/schemas/v1NodeSignature"},"title":"A list of 0 or more signatures","type":"array"}},"title":"Response to specify the identifier of the resource to retrieve aggregated signatures for","type":"object"},"v1GetNodesResponse":{"properties":{"nodes":{"items":{"$ref":"#/components/schemas/vegaNode"},"type":"array"}},"title":"Response with all nodes","type":"object"},"v1GetProposalByIDResponse":{"properties":{"data":{"$ref":"#/components/schemas/vegaGovernanceData","title":"Governance data, if found"}},"title":"Response for a governance proposal given a proposal identifier","type":"object"},"v1GetProposalByReferenceResponse":{"properties":{"data":{"$ref":"#/components/schemas/vegaGovernanceData","title":"Governance data, if found"}},"title":"Response for a governance proposal given a proposal reference","type":"object"},"v1GetProposalsByPartyResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/vegaGovernanceData"},"title":"A list of 0 or more governance data","type":"array"}},"title":"Response for a list of proposals for a party","type":"object"},"v1GetProposalsResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/vegaGovernanceData"},"title":"A list of 0 or more governance data","type":"array"}},"title":"Response for a list of proposals","type":"object"},"v1GetRewardSummariesResponse":{"properties":{"summaries":{"items":{"$ref":"#/components/schemas/vegaRewardSummary"},"type":"array"}},"title":"The return message with reward details in for a single party","type":"object"},"v1GetRewardsResponse":{"properties":{"rewards":{"items":{"$ref":"#/components/schemas/vegaReward"},"type":"array"}},"title":"The return message with reward details in for a single party","type":"object"},"v1GetRiskFactorsResponse":{"properties":{"riskFactor":{"$ref":"#/components/schemas/vegaRiskFactor"}},"type":"object"},"v1GetUpdateMarketProposalsResponse":{"properties":{"data":{"items":{"$ref":"#/components/schemas/vegaGovernanceData"},"title":"A list of 0 or more governance data","type":"array"}},"title":"Response for a list of update market proposals","type":"object"},"v1GetVegaTimeResponse":{"properties":{"timestamp":{"format":"int64","title":"Timestamp representation of current VegaTime as represented in\nNanoseconds since the epoch, for example `1580473859111222333` corresponds to `2020-01-31T12:30:59.111222333Z`","type":"string"}},"title":"Response for the current consensus coordinated time on the Vega network, referred to as \"VegaTime\"","type":"object"},"v1GetVotesByPartyResponse":{"properties":{"votes":{"items":{"$ref":"#/components/schemas/vegaVote"},"title":"A list of 0 or more votes","type":"array"}},"title":"Response for a list of votes for a party","type":"object"},"v1GlobalRewardPoolAccountsResponse":{"properties":{"accounts":{"items":{"$ref":"#/components/schemas/vegaAccount"},"title":"A list of 0 or more global reward pool accounts","type":"array"}},"title":"Response for a list of global reward pool accounts","type":"object"},"v1IssueSignatures":{"properties":{"kind":{"$ref":"#/components/schemas/v1NodeSignatureKind","title":"The kind of signatures to generate, namely for whether a signer is being added or removed"},"submitter":{"title":"The ethereum address which will submit the signatures to the smart-contract","type":"string"},"validatorNodeId":{"title":"The ID of the node that will be signed in or out of the smartcontract","type":"string"}},"type":"object"},"v1KeyRotateSubmission":{"properties":{"currentPubKeyHash":{"title":"Hash of currently used public key","type":"string"},"newPubKey":{"title":"The new public key to rotate to","type":"string"},"newPubKeyIndex":{"format":"int64","title":"New Vega public key derivation index","type":"integer"},"targetBlock":{"format":"uint64","title":"Target block at which the key rotation will take effect on","type":"string"}},"title":"A transaction to allow validator to rotate their vega keys","type":"object"},"v1LastTradeResponse":{"properties":{"trade":{"$ref":"#/components/schemas/vegaTrade","title":"A trade, if found"}},"title":"Response for the latest trade that occurred on Vega for a given market","type":"object"},"v1LedgerMovements":{"properties":{"ledgerMovements":{"items":{"$ref":"#/components/schemas/vegaLedgerMovement"},"title":"One or more entries containing internal transfer information","type":"array"}},"title":"A transfer responses event contains a collection of transfer information","type":"object"},"v1LedgerMovementsSubscribeResponse":{"properties":{"ledgerMovement":{"$ref":"#/components/schemas/vegaLedgerMovement"}},"type":"object"},"v1LiquidityProvisionAmendment":{"properties":{"buys":{"items":{"$ref":"#/components/schemas/vegaLiquidityOrder"},"type":"array"},"commitmentAmount":{"title":"From here at least one of the following is required to consider the command valid","type":"string"},"fee":{"type":"string"},"marketId":{"type":"string"},"reference":{"type":"string"},"sells":{"items":{"$ref":"#/components/schemas/vegaLiquidityOrder"},"type":"array"}},"title":"Amend a liquidity provision request","type":"object"},"v1LiquidityProvisionCancellation":{"properties":{"marketId":{"type":"string"}},"title":"Cancel a liquidity provision request","type":"object"},"v1LiquidityProvisionSubmission":{"properties":{"buys":{"items":{"$ref":"#/components/schemas/vegaLiquidityOrder"},"title":"A set of liquidity buy orders to meet the liquidity provision obligation","type":"array"},"commitmentAmount":{"title":"Specified as a unitless number that represents the amount of settlement asset of the market","type":"string"},"fee":{"title":"Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per setting fees and rewarding liquidity providers","type":"string"},"marketId":{"title":"Market identifier for the order, required field","type":"string"},"reference":{"title":"A reference to be added to every order created out of this liquidityProvisionSubmission","type":"string"},"sells":{"items":{"$ref":"#/components/schemas/vegaLiquidityOrder"},"title":"A set of liquidity sell orders to meet the liquidity provision obligation","type":"array"}},"title":"A liquidity provision submitted for a given market","type":"object"},"v1LiquidityProvisionsResponse":{"properties":{"liquidityProvisions":{"items":{"$ref":"#/components/schemas/vegaLiquidityProvision"},"type":"array"}},"title":"A response containing all of the Vega liquidity provision orders","type":"object"},"v1ListOracleDataResponse":{"properties":{"oracleData":{"items":{"$ref":"#/components/schemas/v1OracleData"},"title":"The list of seen oracle data","type":"array"}},"title":"The response to get all seen oracle data","type":"object"},"v1LossSocialization":{"properties":{"amount":{"title":"Amount distributed","type":"string"},"marketId":{"title":"Market identifier for the event","type":"string"},"partyId":{"title":"Party identifier (public key) for the event","type":"string"}},"title":"A loss socialization event contains details on the amount of wins unable to be distributed","type":"object"},"v1MarginLevelsResponse":{"properties":{"marginLevels":{"items":{"$ref":"#/components/schemas/vegaMarginLevels"},"title":"A list of 0 or more margin levels","type":"array"}},"title":"Response for margin levels for a party","type":"object"},"v1MarginLevelsSubscribeResponse":{"properties":{"marginLevels":{"$ref":"#/components/schemas/vegaMarginLevels"}},"type":"object"},"v1MarketAccountsResponse":{"properties":{"accounts":{"items":{"$ref":"#/components/schemas/vegaAccount"},"title":"A list of 0 or more accounts","type":"array"}},"title":"Response for a list of accounts for a market","type":"object"},"v1MarketByIDResponse":{"properties":{"market":{"$ref":"#/components/schemas/vegaMarket","title":"A market, if found"}},"title":"Response for a market given a market identifier","type":"object"},"v1MarketDataByIDResponse":{"properties":{"marketData":{"$ref":"#/components/schemas/vegaMarketData","title":"Market data, if found"}},"title":"Response for market data for a market","type":"object"},"v1MarketDepthResponse":{"properties":{"buy":{"items":{"$ref":"#/components/schemas/vegaPriceLevel"},"title":"Zero or more price levels for the buy side of the market depth data","type":"array"},"lastTrade":{"$ref":"#/components/schemas/vegaTrade","title":"Last trade recorded on Vega at the time of retrieving the `MarketDepthResponse`"},"marketId":{"title":"Market identifier","type":"string"},"sell":{"items":{"$ref":"#/components/schemas/vegaPriceLevel"},"title":"Zero or more price levels for the sell side of the market depth data","type":"array"},"sequenceNumber":{"format":"uint64","title":"Sequence number incremented after each update","type":"string"}},"title":"Response for the market depth/order book price levels on a market","type":"object"},"v1MarketDepthSubscribeResponse":{"properties":{"marketDepth":{"$ref":"#/components/schemas/vegaMarketDepth"}},"type":"object"},"v1MarketDepthUpdatesSubscribeResponse":{"properties":{"update":{"$ref":"#/components/schemas/vegaMarketDepthUpdate"}},"type":"object"},"v1MarketEvent":{"properties":{"marketId":{"title":"Market identifier for the event","type":"string"},"payload":{"title":"Payload is a unique information string","type":"string"}},"title":"MarketEvent - the common denominator for all market events\ninterface has a method to return a string for logging","type":"object"},"v1MarketTick":{"properties":{"id":{"title":"Market identifier for the event","type":"string"},"time":{"format":"int64","title":"Timestamp containing latest update from Vega blockchain aka Vega-time","type":"string"}},"title":"A market ticket event contains the time value for when a particular market was last processed on Vega","type":"object"},"v1MarketsDataResponse":{"properties":{"marketsData":{"items":{"$ref":"#/components/schemas/vegaMarketData"},"title":"A list of 0 or more market data","type":"array"}},"title":"Response for market data","type":"object"},"v1MarketsDataSubscribeResponse":{"properties":{"marketData":{"$ref":"#/components/schemas/vegaMarketData"}},"type":"object"},"v1MarketsResponse":{"properties":{"markets":{"items":{"$ref":"#/components/schemas/vegaMarket"},"title":"A list of 0 or more markets","type":"array"}},"title":"Response for a list of markets on Vega","type":"object"},"v1NetworkParametersResponse":{"properties":{"networkParameters":{"items":{"$ref":"#/components/schemas/vegaNetworkParameter"},"type":"array"}},"title":"A response containing all of the vega network parameters","type":"object"},"v1NodeSignature":{"properties":{"id":{"title":"The identifier of the resource being signed","type":"string"},"kind":{"$ref":"#/components/schemas/v1NodeSignatureKind","title":"The kind of resource being signed"},"sig":{"format":"byte","title":"The signature","type":"string"}},"title":"Represents a signature from a validator, to be used by a foreign chain in order to recognise a decision taken by the Vega network","type":"object"},"v1NodeSignatureKind":{"default":"NODE_SIGNATURE_KIND_UNSPECIFIED","description":"- NODE_SIGNATURE_KIND_UNSPECIFIED: Represents an unspecified or missing value from the input\n - NODE_SIGNATURE_KIND_ASSET_NEW: Represents a signature for a new asset allow-listing\n - NODE_SIGNATURE_KIND_ASSET_WITHDRAWAL: Represents a signature for an asset withdrawal\n - NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_ADDED: Represents a signature for a new signer added to the erc20 multisig contract\n - NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_REMOVED: Represents a signature for a signer removed from the erc20 multisig contract\n - NODE_SIGNATURE_KIND_ASSET_UPDATE: Represents a signature for an asset update allow-listing","enum":["NODE_SIGNATURE_KIND_UNSPECIFIED","NODE_SIGNATURE_KIND_ASSET_NEW","NODE_SIGNATURE_KIND_ASSET_WITHDRAWAL","NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_ADDED","NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_REMOVED","NODE_SIGNATURE_KIND_ASSET_UPDATE"],"title":"The kind of the signature created by a node, for example, allow-listing a new asset, withdrawal etc","type":"string"},"v1ObserveDelegationsResponse":{"properties":{"delegation":{"$ref":"#/components/schemas/vegaDelegation"}},"title":"All events related to delegation with the given filters","type":"object"},"v1ObserveEventBusResponse":{"properties":{"events":{"items":{"$ref":"#/components/schemas/v1BusEvent"},"title":"One or more events","type":"array"}},"title":"Response to a subscribed stream of events from the Vega event bus","type":"object"},"v1ObserveGovernanceResponse":{"properties":{"data":{"$ref":"#/components/schemas/vegaGovernanceData"}},"title":"All events related to governance","type":"object"},"v1ObservePartyProposalsResponse":{"properties":{"data":{"$ref":"#/components/schemas/vegaGovernanceData"}},"type":"object"},"v1ObservePartyVotesResponse":{"properties":{"vote":{"$ref":"#/components/schemas/vegaVote"}},"type":"object"},"v1ObserveProposalVotesResponse":{"properties":{"vote":{"$ref":"#/components/schemas/vegaVote"}},"type":"object"},"v1ObserveRewardsResponse":{"properties":{"reward":{"$ref":"#/components/schemas/vegaReward"}},"type":"object"},"v1OracleData":{"properties":{"externalData":{"$ref":"#/components/schemas/v1ExternalData"}},"type":"object"},"v1OracleDataBySpecResponse":{"properties":{"oracleData":{"items":{"$ref":"#/components/schemas/v1OracleData"},"title":"The list of external data broadcast to a given spec","type":"array"}},"title":"The response for a list of all oracle data broadcast to a given spec","type":"object"},"v1OracleDataSubmission":{"properties":{"payload":{"format":"byte","title":"The data provided by the data source\nIn the case of Open Oracle - it will be the entire object - it will contain messages, signatures and price data","type":"string"},"source":{"$ref":"#/components/schemas/OracleDataSubmissionOracleSource","description":"The source from which the data is coming from. Must be base64 encoded.\nOracle data a type of external data source data."}},"title":"Command to submit new Oracle data from third party providers","type":"object"},"v1OracleSpec":{"properties":{"externalDataSourceSpec":{"$ref":"#/components/schemas/v1ExternalDataSourceSpec"}},"title":"An oracle spec contains an embedded data source spec.\nWill be generated by the compiler as: OracleSpec_ExternalDataSourceSpec_*","type":"object"},"v1OracleSpecResponse":{"properties":{"oracleSpec":{"$ref":"#/components/schemas/v1OracleSpec","title":"The withdrawal matching the identifier from the request"}},"title":"A response for a oracle spec","type":"object"},"v1OracleSpecsResponse":{"properties":{"oracleSpecs":{"items":{"$ref":"#/components/schemas/v1OracleSpec"},"title":"The list of external data specs","type":"array"}},"title":"The response for a list of withdrawals","type":"object"},"v1OrderAmendment":{"properties":{"expiresAt":{"format":"int64","title":"Amend the expiry time for the order, if the Timestamp value is set, otherwise expiry time will remain unchanged\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"},"marketId":{"title":"Market identifier, this is required to find the order and will not be updated","type":"string"},"orderId":{"title":"Order identifier, this is required to find the order and will not be updated, required field","type":"string"},"peggedOffset":{"title":"Amend the pegged order offset for the order","type":"string"},"peggedReference":{"$ref":"#/components/schemas/vegaPeggedReference","title":"Amend the pegged order reference for the order\n- See [`PeggedReference`](#vega.PeggedReference)"},"price":{"title":"Amend the price for the order, if the Price value is set, otherwise price will remain unchanged - See [`Price`](#vega.Price)","type":"string"},"sizeDelta":{"format":"int64","title":"Amend the size for the order by the delta specified:\n- To reduce the size from the current value set a negative integer value\n- To increase the size from the current value, set a positive integer value\n- To leave the size unchanged set a value of zero","type":"string"},"timeInForce":{"$ref":"#/components/schemas/OrderTimeInForce","title":"Amend the time in force for the order, set to TIME_IN_FORCE_UNSPECIFIED to remain unchanged\n- See [`TimeInForce`](#api.VegaTimeResponse).`timestamp`"}},"title":"An order amendment is a request to amend or update an existing order on Vega","type":"object"},"v1OrderByIDResponse":{"properties":{"order":{"$ref":"#/components/schemas/vegaOrder"}},"type":"object"},"v1OrderByMarketAndIDResponse":{"properties":{"order":{"$ref":"#/components/schemas/vegaOrder","title":"An order, if found"}},"title":"Response for an order on a market given an order identifier","type":"object"},"v1OrderByReferenceResponse":{"properties":{"order":{"$ref":"#/components/schemas/vegaOrder","title":"An order, if found"}},"title":"Response for an order given an order reference","type":"object"},"v1OrderCancellation":{"properties":{"marketId":{"title":"Market identifier for the order, required field","type":"string"},"orderId":{"title":"Unique identifier for the order (set by the system after consensus), required field","type":"string"}},"title":"An order cancellation is a request to cancel an existing order on Vega","type":"object"},"v1OrderSubmission":{"properties":{"expiresAt":{"format":"int64","title":"Timestamp for when the order will expire, in nanoseconds since the epoch,\nrequired field only for `Order.TimeInForce`.TIME_IN_FORCE_GTT`\n- See `VegaTimeResponse`.`timestamp`","type":"string"},"marketId":{"title":"Market identifier for the order, required field","type":"string"},"peggedOrder":{"$ref":"#/components/schemas/vegaPeggedOrder","title":"Used to specify the details for a pegged order\n- See `PeggedOrder`"},"price":{"title":"Price for the order, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places,\n, required field for limit orders, however it is not required for market orders","type":"string"},"reference":{"title":"Reference given for the order, this is typically used to retrieve an order submitted through consensus, currently\nset internally by the node to return a unique reference identifier for the order submission","type":"string"},"side":{"$ref":"#/components/schemas/vegaSide","title":"Side for the order, e.g. SIDE_BUY or SIDE_SELL, required field\n- See `Side`"},"size":{"format":"uint64","title":"Size for the order, for example, in a futures market the size equals the number of units, cannot be negative","type":"string"},"timeInForce":{"$ref":"#/components/schemas/OrderTimeInForce","title":"Time in force indicates how long an order will remain active before it is executed or expires, required field\n- See `Order.TimeInForce`"},"type":{"$ref":"#/components/schemas/vegaOrderType","title":"Type for the order, required field - See `Order.Type`"}},"title":"An order submission is a request to submit or create a new order on Vega","type":"object"},"v1OrderVersionsByIDResponse":{"properties":{"orders":{"items":{"$ref":"#/components/schemas/vegaOrder"},"title":"A list of 0 or more orders (list will contain the same order but with different versions, if it has been amended)","type":"array"}},"title":"Response to a request for a list of all versions of an order","type":"object"},"v1OrdersByMarketResponse":{"properties":{"orders":{"items":{"$ref":"#/components/schemas/vegaOrder"},"title":"A list of 0 or more orders","type":"array"}},"title":"Response for a list of orders for a market","type":"object"},"v1OrdersByPartyResponse":{"properties":{"orders":{"items":{"$ref":"#/components/schemas/vegaOrder"},"title":"A list of 0 or more orders","type":"array"}},"title":"Response for a list of orders for a party","type":"object"},"v1OrdersSubscribeResponse":{"properties":{"orders":{"items":{"$ref":"#/components/schemas/vegaOrder"},"title":"A list of 0 or more orders","type":"array"}},"title":"A stream of orders","type":"object"},"v1Pagination":{"properties":{"descending":{"title":"Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order","type":"boolean"},"limit":{"format":"uint64","title":"Limit the number of returned records to the value specified, default is 50","type":"string"},"skip":{"format":"uint64","title":"Skip the number of records specified, default is 0","type":"string"}},"title":"Pagination controls","type":"object"},"v1PartiesResponse":{"properties":{"parties":{"items":{"$ref":"#/components/schemas/vegaParty"},"title":"A list of 0 or more parties","type":"array"}},"title":"Response to a request for a list of parties","type":"object"},"v1PartyAccountsResponse":{"properties":{"accounts":{"items":{"$ref":"#/components/schemas/vegaAccount"},"title":"A list of 0 or more accounts","type":"array"}},"title":"Response for a list of accounts for a party","type":"object"},"v1PartyByIDResponse":{"properties":{"party":{"$ref":"#/components/schemas/vegaParty","title":"A party, if found"}},"title":"Response for a party given a party identifier","type":"object"},"v1PartyStakeResponse":{"properties":{"currentStakeAvailable":{"type":"string"},"stakeLinkings":{"items":{"$ref":"#/components/schemas/v1StakeLinking"},"type":"array"}},"type":"object"},"v1PositionResolution":{"properties":{"closed":{"format":"int64","title":"Number of close outs","type":"string"},"distressed":{"format":"int64","title":"Number of distressed traders","type":"string"},"markPrice":{"title":"Mark price as a string representing a scaled price","type":"string"},"marketId":{"title":"Market identifier for the event","type":"string"}},"title":"A position resolution event contains information on distressed trades","type":"object"},"v1PositionStateEvent":{"properties":{"marketId":{"title":"Market identifier for this position update","type":"string"},"partyId":{"title":"Party identifier for this position update","type":"string"},"potentialBuys":{"format":"int64","title":"Potential orders","type":"string"},"potentialSells":{"format":"int64","type":"string"},"size":{"format":"int64","title":"Current position","type":"string"},"vwBuyPrice":{"title":"Volume weighted prices","type":"string"},"vwSellPrice":{"type":"string"}},"title":"A position state event contains the current position state for a single party in a single market","type":"object"},"v1PositionsByPartyResponse":{"properties":{"positions":{"items":{"$ref":"#/components/schemas/vegaPosition"},"title":"A list of 0 or more positions","type":"array"}},"title":"Response for a list of positions for a party","type":"object"},"v1PositionsSubscribeResponse":{"properties":{"position":{"$ref":"#/components/schemas/vegaPosition"}},"type":"object"},"v1Property":{"description":"Property describes one property of data spec with a key with its value.","properties":{"name":{"description":"name is the name of the property.","type":"string"},"value":{"description":"value is the value of the property.","type":"string"}},"type":"object"},"v1PropertyKey":{"description":"PropertyKey describes the property key contained in an data source data.","properties":{"name":{"description":"name is the name of the property.","type":"string"},"type":{"$ref":"#/components/schemas/v1PropertyKeyType","description":"type is the type of the property."}},"type":"object"},"v1PropertyKeyType":{"default":"TYPE_UNSPECIFIED","description":"Type describes the type of properties that are supported by the data source\nengine.\n\n - TYPE_UNSPECIFIED: The default value.\n - TYPE_EMPTY: Any type.\n - TYPE_INTEGER: Integer type.\n - TYPE_STRING: String type.\n - TYPE_BOOLEAN: Boolean type.\n - TYPE_DECIMAL: Any floating point decimal type.\n - TYPE_TIMESTAMP: Timestamp date type.","enum":["TYPE_UNSPECIFIED","TYPE_EMPTY","TYPE_INTEGER","TYPE_STRING","TYPE_BOOLEAN","TYPE_DECIMAL","TYPE_TIMESTAMP"],"type":"string"},"v1ProposalSubmission":{"properties":{"rationale":{"$ref":"#/components/schemas/vegaProposalRationale","description":"The rationale behind a proposal."},"reference":{"title":"Proposal reference","type":"string"},"terms":{"$ref":"#/components/schemas/vegaProposalTerms","title":"Proposal configuration and the actual change that is meant to be executed when proposal is enacted"}},"title":"A command to submit a new proposal for the\nVega network governance","type":"object"},"v1ProtocolUpgradeEvent":{"properties":{"approvers":{"items":{"type":"string"},"title":"tendermint validators that have agreed to the upgrade","type":"array"},"status":{"$ref":"#/components/schemas/v1ProtocolUpgradeProposalStatus","title":"the status of the proposal"},"upgradeBlockHeight":{"format":"uint64","title":"The block height at which to perform the upgrade","type":"string"},"vegaReleaseTag":{"title":"the release tag for the vega binary","type":"string"}},"type":"object"},"v1ProtocolUpgradeProposal":{"properties":{"upgradeBlockHeight":{"format":"uint64","title":"The block height at which to perform the upgrade","type":"string"},"vegaReleaseTag":{"title":"the release tag for the vega binary","type":"string"}},"type":"object"},"v1ProtocolUpgradeProposalStatus":{"default":"PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED","enum":["PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED","PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING","PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED","PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED"],"title":"- PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING: The proposal is pending\n - PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED: The proposal is approved\n - PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED: The proposal is rejected","type":"string"},"v1ProtocolUpgradeStarted":{"properties":{"lastBlockHeight":{"format":"uint64","type":"string"}},"title":"The core is starting a protocol upgrade","type":"object"},"v1PubKey":{"description":"PubKey is the public key that signed this data.\nDifferent public keys coming from different sources will be further separated.","properties":{"key":{"type":"string"}},"type":"object"},"v1RewardPayoutEvent":{"properties":{"amount":{"type":"string"},"asset":{"type":"string"},"epochSeq":{"type":"string"},"market":{"type":"string"},"party":{"type":"string"},"percentOfTotalReward":{"type":"string"},"rewardType":{"type":"string"},"timestamp":{"format":"int64","type":"string"}},"type":"object"},"v1SettleDistressed":{"properties":{"margin":{"title":"Margin value as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"},"marketId":{"title":"Market identifier for the event","type":"string"},"partyId":{"title":"Party identifier (public key) for the event","type":"string"},"price":{"title":"Price as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"}},"title":"A settle distressed event contains information on distressed trading parties who are closed out","type":"object"},"v1SettleMarket":{"properties":{"marketId":{"title":"Market identifier for the event","type":"string"},"positionFactor":{"title":"Position factor - 10 ^ number of position decimal places","type":"string"},"price":{"title":"Price of settlement as a string","type":"string"}},"title":"A settle market event tp notify data-node that a market has been settled\nso positions and PL can be updated accordingly","type":"object"},"v1SettlePosition":{"properties":{"marketId":{"title":"Market identifier for the event","type":"string"},"partyId":{"title":"Party identifier (public key) for the event","type":"string"},"positionFactor":{"title":"Position factor - 10 ^ number of position decimal places","type":"string"},"price":{"title":"Price of settlement as a string","type":"string"},"tradeSettlements":{"items":{"$ref":"#/components/schemas/v1TradeSettlement"},"title":"A collection of 1 or more trade settlements","type":"array"}},"title":"A settle position event contains position settlement information for a party","type":"object"},"v1Signature":{"description":"A signature to authenticate a transaction and to be verified by the Vega\nnetwork.","properties":{"algo":{"description":"The algorithm used to create the signature.","type":"string"},"value":{"description":"The bytes of the signature (hex-encoded).","type":"string"},"version":{"description":"The version of the signature used to create the signature.","format":"int64","type":"integer"}},"type":"object"},"v1Signer":{"properties":{"ethAddress":{"$ref":"#/components/schemas/v1ETHAddress","title":"in case of an open oracle - Ethereum address will be submitted"},"pubKey":{"$ref":"#/components/schemas/v1PubKey","description":"pubKeys is the list of authorized public keys that signed the data for this\nsource. All the public keys in the data should be contained in these\npublic keys."}},"type":"object"},"v1StakeLinking":{"properties":{"amount":{"title":"The amount of stake deposited or removed","type":"string"},"blockHeight":{"format":"uint64","title":"The block when the event happened","type":"string"},"blockTime":{"format":"int64","title":"The block time","type":"string"},"ethereumAddress":{"title":"the ethereum address from which the stake link was iniated","type":"string"},"finalizedAt":{"format":"int64","title":"The time at which the vega network finalized the state of the event","type":"string"},"id":{"title":"The internal ID for this staking event","type":"string"},"logIndex":{"format":"uint64","title":"The log index","type":"string"},"party":{"description":"The party to whom the event is directed at.","type":"string"},"status":{"$ref":"#/components/schemas/v1StakeLinkingStatus","title":"The status of the event"},"ts":{"format":"int64","title":"The timestamps at which the event was emitted by ethereum","type":"string"},"txHash":{"title":"The hash of the transaction from which the events happen","type":"string"},"type":{"$ref":"#/components/schemas/v1StakeLinkingType","title":"The type of event"}},"title":"StakeLinking - an event notifying of stake being deposited or removed for a given party\nThese events are emitted for every Staking deposit or removed accepted by the network","type":"object"},"v1StakeLinkingStatus":{"default":"STATUS_UNSPECIFIED","enum":["STATUS_UNSPECIFIED","STATUS_PENDING","STATUS_ACCEPTED","STATUS_REJECTED"],"title":"- STATUS_UNSPECIFIED: Default value\n - STATUS_PENDING: Indicate an event waiting for confirmation from the vega network\n - STATUS_ACCEPTED: Indicate of an event accepted by the vega network\n - STATUS_REJECTED: Indaicate of an event rejected by the vega network","type":"string"},"v1StakeLinkingType":{"default":"TYPE_UNSPECIFIED","enum":["TYPE_UNSPECIFIED","TYPE_LINK","TYPE_UNLINK"],"title":"- TYPE_UNSPECIFIED: Default value\n - TYPE_LINK: Indicate of a stake deposit instruction\n - TYPE_UNLINK: Indicate of a stake remove instruction","type":"string"},"v1StateVar":{"properties":{"eventId":{"type":"string"},"id":{"type":"string"},"state":{"type":"string"}},"title":"StateVarEvent - updates on state changes in state variable consensus","type":"object"},"v1TimeUpdate":{"properties":{"timestamp":{"format":"int64","title":"Timestamp containing latest update from Vega blockchain aka Vega-time","type":"string"}},"title":"A time update event contains the latest time update from Vega blockchain and indicates the start of a new block","type":"object"},"v1TradeSettlement":{"properties":{"marketPrice":{"title":"Price of settlement as a string (in market decimals)","type":"string"},"price":{"title":"Price of settlement as string (in asset decimals)","type":"string"},"size":{"format":"int64","title":"Size of trade settlement","type":"string"}},"title":"A trade settlement is part of the settle position event","type":"object"},"v1TradesByMarketResponse":{"properties":{"trades":{"items":{"$ref":"#/components/schemas/vegaTrade"},"title":"A list of 0 or more trades","type":"array"}},"title":"Response for a list of trades on a market","type":"object"},"v1TradesByOrderResponse":{"properties":{"trades":{"items":{"$ref":"#/components/schemas/vegaTrade"},"title":"A list of 0 or more trades","type":"array"}},"title":"Response for a list of trades related to an order","type":"object"},"v1TradesByPartyResponse":{"properties":{"trades":{"items":{"$ref":"#/components/schemas/vegaTrade"},"title":"A list of 0 or more trades","type":"array"}},"title":"Response for a list of trades relating to a party","type":"object"},"v1TradesSubscribeResponse":{"properties":{"trades":{"items":{"$ref":"#/components/schemas/vegaTrade"},"title":"A list of 0 or more trades","type":"array"}},"title":"A stream of trades","type":"object"},"v1TransactionResult":{"properties":{"announceNode":{"$ref":"#/components/schemas/v1AnnounceNode"},"batchMarketInstructions":{"$ref":"#/components/schemas/v1BatchMarketInstructions"},"cancelTransfer":{"$ref":"#/components/schemas/v1CancelTransfer"},"delegateSubmission":{"$ref":"#/components/schemas/v1DelegateSubmission"},"ethereumKeyRotateSubmission":{"$ref":"#/components/schemas/v1EthereumKeyRotateSubmission"},"failure":{"$ref":"#/components/schemas/TransactionResultFailureDetails"},"hash":{"title":"The hash of the transaction","type":"string"},"issueSignatures":{"$ref":"#/components/schemas/v1IssueSignatures"},"keyRotateSubmission":{"$ref":"#/components/schemas/v1KeyRotateSubmission"},"liquidityProvisionAmendment":{"$ref":"#/components/schemas/v1LiquidityProvisionAmendment"},"liquidityProvisionCancellation":{"$ref":"#/components/schemas/v1LiquidityProvisionCancellation"},"liquidityProvisionSubmission":{"$ref":"#/components/schemas/v1LiquidityProvisionSubmission"},"oracleDataSubmission":{"$ref":"#/components/schemas/v1OracleDataSubmission"},"orderAmendment":{"$ref":"#/components/schemas/v1OrderAmendment"},"orderCancellation":{"$ref":"#/components/schemas/v1OrderCancellation"},"orderSubmission":{"$ref":"#/components/schemas/v1OrderSubmission"},"partyId":{"title":"Unique party identifier for the related party","type":"string"},"proposal":{"$ref":"#/components/schemas/v1ProposalSubmission"},"protocolUpgradeProposal":{"$ref":"#/components/schemas/v1ProtocolUpgradeProposal"},"status":{"description":"The status of the transaction, did it succeed or an error was raised.","type":"boolean"},"success":{"$ref":"#/components/schemas/TransactionResultSuccessDetails"},"transfer":{"$ref":"#/components/schemas/vegacommandsv1Transfer"},"undelegateSubmission":{"$ref":"#/components/schemas/v1UndelegateSubmission"},"voteSubmission":{"$ref":"#/components/schemas/v1VoteSubmission"},"withdrawSubmission":{"$ref":"#/components/schemas/v1WithdrawSubmission"}},"type":"object"},"v1TransferStatus":{"default":"STATUS_UNSPECIFIED","enum":["STATUS_UNSPECIFIED","STATUS_PENDING","STATUS_DONE","STATUS_REJECTED","STATUS_STOPPED","STATUS_CANCELLED"],"title":"- STATUS_UNSPECIFIED: Default value\n - STATUS_PENDING: Indicate a transfer still being processed\n - STATUS_DONE: Indicate of an transfer accepted by the vega network\n - STATUS_REJECTED: Indicate of an transfer rejected by the vega network\n - STATUS_STOPPED: Indicate of a transfer stopped by the vega network\ne.g: no funds left to cover the transfer\n - STATUS_CANCELLED: Indicate of a transfer cancel by the user","type":"string"},"v1TransfersResponse":{"properties":{"transfers":{"items":{"$ref":"#/components/schemas/vegaeventsv1Transfer"},"type":"array"}},"type":"object"},"v1TxErrorEvent":{"properties":{"announceNode":{"$ref":"#/components/schemas/v1AnnounceNode"},"batchMarketInstructions":{"$ref":"#/components/schemas/v1BatchMarketInstructions"},"cancelTransfer":{"$ref":"#/components/schemas/v1CancelTransfer"},"delegateSubmission":{"$ref":"#/components/schemas/v1DelegateSubmission"},"errMsg":{"title":"An error message describing what went wrong","type":"string"},"issueSignatures":{"$ref":"#/components/schemas/v1IssueSignatures"},"liquidityProvisionAmendment":{"$ref":"#/components/schemas/v1LiquidityProvisionAmendment"},"liquidityProvisionCancellation":{"$ref":"#/components/schemas/v1LiquidityProvisionCancellation"},"liquidityProvisionSubmission":{"$ref":"#/components/schemas/v1LiquidityProvisionSubmission"},"oracleDataSubmission":{"$ref":"#/components/schemas/v1OracleDataSubmission"},"orderAmendment":{"$ref":"#/components/schemas/v1OrderAmendment"},"orderCancellation":{"$ref":"#/components/schemas/v1OrderCancellation"},"orderSubmission":{"$ref":"#/components/schemas/v1OrderSubmission"},"partyId":{"title":"Unique party identifier for the related party","type":"string"},"proposal":{"$ref":"#/components/schemas/v1ProposalSubmission"},"protocolUpgradeProposal":{"$ref":"#/components/schemas/v1ProtocolUpgradeProposal"},"transfer":{"$ref":"#/components/schemas/vegacommandsv1Transfer"},"undelegateSubmission":{"$ref":"#/components/schemas/v1UndelegateSubmission"},"voteSubmission":{"$ref":"#/components/schemas/v1VoteSubmission"},"withdrawSubmission":{"$ref":"#/components/schemas/v1WithdrawSubmission"}},"type":"object"},"v1UndelegateSubmission":{"properties":{"amount":{"title":"optional, if not specified = ALL","type":"string"},"method":{"$ref":"#/components/schemas/UndelegateSubmissionMethod"},"nodeId":{"type":"string"}},"type":"object"},"v1ValidatorRankingEvent":{"properties":{"epochSeq":{"title":"the epoch seq for which the status is valid","type":"string"},"nextStatus":{"title":"the status of the validator in the next epoch","type":"string"},"nodeId":{"type":"string"},"performanceScore":{"title":"performance base score","type":"string"},"previousStatus":{"title":"the status of the validator in the previous epoch","type":"string"},"rankingScore":{"title":"final score","type":"string"},"stakeScore":{"title":"stake based score - no anti-whaling","type":"string"},"tmVotingPower":{"format":"int64","title":"tendermint voting power of the validator","type":"integer"}},"title":"An event that explains the status of the validator for the coming epoch","type":"object"},"v1ValidatorScoreEvent":{"properties":{"epochSeq":{"type":"string"},"multisigScore":{"type":"string"},"nodeId":{"type":"string"},"normalisedScore":{"type":"string"},"rawValidatorScore":{"type":"string"},"validatorPerformance":{"type":"string"},"validatorScore":{"type":"string"},"validatorStatus":{"type":"string"}},"title":"ValidatorScoreEvent is the score a validator gets for a given epoch","type":"object"},"v1ValidatorUpdate":{"properties":{"added":{"title":"Flag indicating if the validator has been added to or removed from vega","type":"boolean"},"avatarUrl":{"title":"AvatarURL of the validator","type":"string"},"country":{"title":"Country code (ISO 3166-1 alpha-2) for the location of the node","type":"string"},"ethereumAddress":{"title":"Ethereum public key of validator node","type":"string"},"fromEpoch":{"format":"uint64","title":"The epoch from which the validator was added or removed","type":"string"},"infoUrl":{"title":"URL with more info on the node","type":"string"},"name":{"title":"Name of the validator","type":"string"},"nodeId":{"title":"Node id of the node","type":"string"},"submitterAddress":{"title":"Ethereum public key being used as the submitter to allow automatic signature generation","type":"string"},"tmPubKey":{"title":"Public key of Tendermint","type":"string"},"vegaPubKey":{"title":"Vega public key of validator node","type":"string"},"vegaPubKeyIndex":{"format":"int64","title":"Vega public key derivation index","type":"integer"}},"title":"A validator update event contains information about validator node","type":"object"},"v1VoteSubmission":{"description":"A command to submit a new vote for a governance\nproposal.","properties":{"proposalId":{"description":"The ID of the proposal to vote for.","type":"string"},"value":{"$ref":"#/components/schemas/VoteValue","title":"The actual value of the vote"}},"type":"object"},"v1WithdrawSubmission":{"properties":{"amount":{"title":"The amount to be withdrawn","type":"string"},"asset":{"title":"The asset to be withdrawn","type":"string"},"ext":{"$ref":"#/components/schemas/vegaWithdrawExt","title":"Foreign chain specifics"}},"title":"Represents the submission request to withdraw funds for a party on Vega","type":"object"},"v1WithdrawalResponse":{"properties":{"withdrawal":{"$ref":"#/components/schemas/vegaWithdrawal","title":"The withdrawal matching the identifier from the request"}},"title":"A response for a withdrawal","type":"object"},"v1WithdrawalsResponse":{"properties":{"withdrawals":{"items":{"$ref":"#/components/schemas/vegaWithdrawal"},"title":"The list of withdrawals for the specified party","type":"array"}},"title":"The response for a list of withdrawals","type":"object"},"vegaAccount":{"properties":{"asset":{"title":"Asset identifier for the account","type":"string"},"balance":{"title":"Balance of the asset, the balance is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places\nand importantly balances cannot be negative","type":"string"},"id":{"title":"Unique account identifier (used internally by Vega)","type":"string"},"marketId":{"title":"Market identifier for the account, if [`AccountType`](#vega.AccountType).`ACCOUNT_TYPE_GENERAL` this will be empty","type":"string"},"owner":{"title":"The party that the account belongs to, special values include `network`, which represents the Vega network and is\nmost commonly seen during liquidation of distressed trading positions","type":"string"},"type":{"$ref":"#/components/schemas/vegaAccountType","title":"The account type related to this account"}},"title":"Represents an account for an asset on Vega for a particular owner or party","type":"object"},"vegaAccountDetails":{"properties":{"assetId":{"type":"string"},"marketId":{"title":"not specified is account is not related to a market","type":"string"},"owner":{"title":"not specified if network account","type":"string"},"type":{"$ref":"#/components/schemas/vegaAccountType"}},"type":"object"},"vegaAccountType":{"default":"ACCOUNT_TYPE_UNSPECIFIED","description":"- ACCOUNT_TYPE_UNSPECIFIED: Default value\n - ACCOUNT_TYPE_INSURANCE: Insurance pool accounts contain insurance pool funds for a market\n - ACCOUNT_TYPE_SETTLEMENT: Settlement accounts exist only during settlement or mark-to-market\n - ACCOUNT_TYPE_MARGIN: Margin accounts contain funds set aside for the margin needed to support a party's open positions.\nEach party will have a margin account for each market they have traded in.\nThe required initial margin is allocated to each market from your general account.\nCollateral in the margin account can't be withdrawn or used as margin on another market until\nit is released back to the general account.\nThe Vega protocol uses an internal accounting system to segregate funds held as\nmargin from other funds to ensure they are never lost or 'double spent'\n\nMargin account funds will vary as margin requirements on positions change\n - ACCOUNT_TYPE_GENERAL: General accounts contain the collateral for a party that is not otherwise allocated. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements\n - ACCOUNT_TYPE_FEES_INFRASTRUCTURE: Infrastructure accounts contain fees earned by providing infrastructure on Vega\n - ACCOUNT_TYPE_FEES_LIQUIDITY: Liquidity accounts contain fees earned by providing liquidity on Vega markets\n - ACCOUNT_TYPE_FEES_MAKER: This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place\n - ACCOUNT_TYPE_BOND: This account is created to maintain liquidity providers funds commitments\n - ACCOUNT_TYPE_EXTERNAL: External account represents an external source (deposit/withdrawal)\n - ACCOUNT_TYPE_GLOBAL_INSURANCE: Global insurance account for the asset\n - ACCOUNT_TYPE_GLOBAL_REWARD: Global reward account for the asset\n - ACCOUNT_TYPE_PENDING_TRANSFERS: Per asset account used to store pending transfers (if any)\n - ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES: Per asset reward account for fees paid to makers\n - ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES: Per asset reward account for fees received by makers\n - ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES: Per asset reward account for fees received by liquidity providers\n - ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS: Per asset reward account for market proposers when the market goes above some trading threshold","enum":["ACCOUNT_TYPE_UNSPECIFIED","ACCOUNT_TYPE_INSURANCE","ACCOUNT_TYPE_SETTLEMENT","ACCOUNT_TYPE_MARGIN","ACCOUNT_TYPE_GENERAL","ACCOUNT_TYPE_FEES_INFRASTRUCTURE","ACCOUNT_TYPE_FEES_LIQUIDITY","ACCOUNT_TYPE_FEES_MAKER","ACCOUNT_TYPE_BOND","ACCOUNT_TYPE_EXTERNAL","ACCOUNT_TYPE_GLOBAL_INSURANCE","ACCOUNT_TYPE_GLOBAL_REWARD","ACCOUNT_TYPE_PENDING_TRANSFERS","ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES","ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS"],"title":"Various collateral/account types as used by Vega","type":"string"},"vegaAsset":{"properties":{"details":{"$ref":"#/components/schemas/vegaAssetDetails","title":"The definition of the external source for this asset"},"id":{"title":"Internal identifier of the asset","type":"string"},"status":{"$ref":"#/components/schemas/vegaAssetStatus","title":"Status of the asset"}},"title":"The Vega representation of an external asset","type":"object"},"vegaAssetDetails":{"properties":{"builtinAsset":{"$ref":"#/components/schemas/vegaBuiltinAsset","title":"A built-in asset"},"decimals":{"format":"uint64","title":"Number of decimal / precision handled by this asset","type":"string"},"erc20":{"$ref":"#/components/schemas/vegaERC20","title":"An Ethereum ERC20 asset"},"name":{"title":"Name of the asset (e.g: Great British Pound)","type":"string"},"quantum":{"title":"The minimum economically meaningful amount in the asset","type":"string"},"symbol":{"title":"Symbol of the asset (e.g: GBP)","type":"string"}},"title":"The Vega representation of an external asset","type":"object"},"vegaAssetDetailsUpdate":{"description":"The changes to apply on an existing asset.","properties":{"erc20":{"$ref":"#/components/schemas/vegaERC20Update","title":"An Ethereum ERC20 asset"},"quantum":{"title":"The minimum economically meaningful amount in the asset","type":"string"}},"type":"object"},"vegaAssetStatus":{"default":"STATUS_UNSPECIFIED","enum":["STATUS_UNSPECIFIED","STATUS_PROPOSED","STATUS_REJECTED","STATUS_PENDING_LISTING","STATUS_ENABLED"],"title":"- STATUS_UNSPECIFIED: Default value, always invalid\n - STATUS_PROPOSED: Asset is proposed and under vote\n - STATUS_REJECTED: Asset has been rejected from governance\n - STATUS_PENDING_LISTING: Asset is pending listing from the bridge\n - STATUS_ENABLED: Asset is fully usable in the network","type":"string"},"vegaAuctionDuration":{"properties":{"duration":{"format":"int64","title":"Duration of the auction in seconds","type":"string"},"volume":{"format":"uint64","title":"Target uncrossing trading volume","type":"string"}},"title":"An auction duration is used to configure 3 auction periods:\n1. `duration > 0`, `volume == 0`:\n  The auction will last for at least N seconds\n2. `duration == 0`, `volume > 0`:\n  The auction will end once the given volume will match at uncrossing\n3. `duration > 0`, `volume > 0`:\n  The auction will take at least N seconds, but can end sooner if the market can trade a certain volume","type":"object"},"vegaAuctionTrigger":{"default":"AUCTION_TRIGGER_UNSPECIFIED","description":"- AUCTION_TRIGGER_UNSPECIFIED: Default value for AuctionTrigger, no auction triggered\n - AUCTION_TRIGGER_BATCH: Batch auction\n - AUCTION_TRIGGER_OPENING: Opening auction\n - AUCTION_TRIGGER_PRICE: Price monitoring trigger\n - AUCTION_TRIGGER_LIQUIDITY: Liquidity monitoring trigger","enum":["AUCTION_TRIGGER_UNSPECIFIED","AUCTION_TRIGGER_BATCH","AUCTION_TRIGGER_OPENING","AUCTION_TRIGGER_PRICE","AUCTION_TRIGGER_LIQUIDITY"],"title":"Auction triggers indicate what condition triggered an auction (if market is in auction mode)","type":"string"},"vegaBuiltinAsset":{"properties":{"maxFaucetAmountMint":{"title":"Maximum amount that can be requested by a party through the built-in asset faucet at a time","type":"string"}},"title":"A Vega internal asset","type":"object"},"vegaCandle":{"properties":{"close":{"title":"Closing trade price","type":"string"},"datetime":{"title":"An ISO-8601 datetime with nanosecond precision for when the candle was last updated","type":"string"},"high":{"title":"Highest price for trading during the candle interval","type":"string"},"interval":{"$ref":"#/components/schemas/vegaInterval","title":"Time interval for the candle - See [`Interval`](#vega.Interval)"},"low":{"title":"Lowest price for trading during the candle interval","type":"string"},"open":{"title":"Open trade price","type":"string"},"timestamp":{"format":"int64","title":"Timestamp for the point in time when the candle was initially created/opened, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"},"volume":{"format":"uint64","title":"Total trading volume during the candle interval","type":"string"}},"title":"Represents the high, low, open, and closing prices for an interval of trading,\nreferred to commonly as a candlestick or candle","type":"object"},"vegaDataSourceSpecToFutureBinding":{"properties":{"settlementDataProperty":{"description":"settlement_data_property holds the name of the property in the source data\nthat should be used as settlement data.\nIf it is set to \"prices.BTC.value\", then the Future will use the value of\nthis property as settlement data.","type":"string"},"tradingTerminationProperty":{"title":"the name of the property in the data source data that signals termination of trading","type":"string"}},"title":"DataSourceSpecToFutureBinding describes which property of the data source data is to be\nused as settlement data and which to use as the trading terminated trigger","type":"object"},"vegaDelegation":{"properties":{"amount":{"title":"Amount delegated","type":"string"},"epochSeq":{"title":"Epoch of delegation","type":"string"},"nodeId":{"title":"Node ID","type":"string"},"party":{"title":"Party which is delegating","type":"string"}},"type":"object"},"vegaDeposit":{"properties":{"amount":{"title":"The amount to be deposited","type":"string"},"asset":{"title":"The Vega asset targeted by this deposit","type":"string"},"createdTimestamp":{"format":"int64","title":"Timestamp for when the deposit was created on the Vega network","type":"string"},"creditedTimestamp":{"format":"int64","title":"Timestamp for when the Vega account was updated with the deposit","type":"string"},"id":{"title":"Unique identifier for the deposit","type":"string"},"partyId":{"title":"Party identifier of the user initiating the deposit","type":"string"},"status":{"$ref":"#/components/schemas/vegaDepositStatus","title":"Status of the deposit"},"txHash":{"title":"The hash of the transaction from the foreign chain","type":"string"}},"title":"A deposit on to the Vega network","type":"object"},"vegaDepositStatus":{"default":"STATUS_UNSPECIFIED","description":"- STATUS_UNSPECIFIED: Default value, always invalid\n - STATUS_OPEN: The deposit is being processed by the network\n - STATUS_CANCELLED: The deposit has been cancelled by the network\n - STATUS_FINALIZED: The deposit has been finalised and accounts have been updated","enum":["STATUS_UNSPECIFIED","STATUS_OPEN","STATUS_CANCELLED","STATUS_FINALIZED"],"title":"The status of the deposit","type":"string"},"vegaDispatchMetric":{"default":"DISPATCH_METRIC_UNSPECIFIED","enum":["DISPATCH_METRIC_UNSPECIFIED","DISPATCH_METRIC_MAKER_FEES_PAID","DISPATCH_METRIC_MAKER_FEES_RECEIVED","DISPATCH_METRIC_LP_FEES_RECEIVED","DISPATCH_METRIC_MARKET_VALUE"],"title":"- DISPATCH_METRIC_MAKER_FEES_PAID: Dispatch metric that is using the total maker fees paid in the market\n - DISPATCH_METRIC_MAKER_FEES_RECEIVED: Dispatch metric that is using the total maker fees received in the market\n - DISPATCH_METRIC_LP_FEES_RECEIVED: Dispatch metric that is using the total LP fees received in the market\n - DISPATCH_METRIC_MARKET_VALUE: Dispatch metric that is using total value of the market if above the required threshold and not paid given proposer bonus yet","type":"string"},"vegaDispatchStrategy":{"properties":{"assetForMetric":{"title":"The asset to use for metric","type":"string"},"markets":{"items":{"type":"string"},"title":"Optional markets in scope","type":"array"},"metric":{"$ref":"#/components/schemas/vegaDispatchMetric","title":"The metric to apply"}},"type":"object"},"vegaERC20":{"properties":{"contractAddress":{"title":"The address of the contract for the token, on the ethereum network","type":"string"},"lifetimeLimit":{"title":"The lifetime limits deposit per address\nnote: this is a temporary measure that can be changed by governance","type":"string"},"withdrawThreshold":{"title":"The maximum you can withdraw instantly. All withdrawals over the threshold will be delayed by the withdrawal delay.\nThere’s no limit on the size of a withdrawal\nnote: this is a temporary measure that can be changed by governance","type":"string"}},"title":"An ERC20 token based asset, living on the ethereum network","type":"object"},"vegaERC20Update":{"properties":{"lifetimeLimit":{"title":"The lifetime limits deposit per address.\nThis is will be interpreted against the asset decimals.\nnote: this is a temporary measure that can be changed by governance","type":"string"},"withdrawThreshold":{"title":"The maximum you can withdraw instantly. All withdrawals over the threshold will be delayed by the withdrawal delay.\nThere’s no limit on the size of a withdrawal\nnote: this is a temporary measure that can be changed by governance","type":"string"}},"type":"object"},"vegaEpoch":{"properties":{"delegations":{"items":{"$ref":"#/components/schemas/vegaDelegation"},"title":"List of all delegations in epoch","type":"array"},"seq":{"format":"uint64","title":"Sequence is used as epoch identifier","type":"string"},"timestamps":{"$ref":"#/components/schemas/vegaEpochTimestamps","title":"Timestamps for start/end etc"},"validators":{"items":{"$ref":"#/components/schemas/vegaNode"},"title":"Validators that participated in this epoch","type":"array"}},"type":"object"},"vegaEpochAction":{"default":"EPOCH_ACTION_UNSPECIFIED","description":"- EPOCH_ACTION_START: The epoch update is for a new epoch\n - EPOCH_ACTION_END: The epoch update is for the end of an epoch","enum":["EPOCH_ACTION_UNSPECIFIED","EPOCH_ACTION_START","EPOCH_ACTION_END"],"title":"What epoch action has occurred","type":"string"},"vegaEpochData":{"properties":{"offline":{"format":"int32","title":"Total number of offline epochs since node was created","type":"integer"},"online":{"format":"int32","title":"Total number of online epochs since node was created","type":"integer"},"total":{"format":"int32","title":"Total number of epochs since node was created","type":"integer"}},"type":"object"},"vegaEpochTimestamps":{"properties":{"endTime":{"format":"int64","title":"Timestamp of epoch end in nanoseconds, empty if not started\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"},"expiryTime":{"format":"int64","title":"Timestamp of epoch expiry in nanoseconds\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"},"firstBlock":{"format":"uint64","title":"Height of first block in the epoch","type":"string"},"lastBlock":{"format":"uint64","title":"Height of last block in the epoch, empty if not ended","type":"string"},"startTime":{"format":"int64","title":"Timestamp of epoch start in nanoseconds\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"}},"title":"Describes in both human readable and block time when an epoch spans","type":"object"},"vegaErc20WithdrawExt":{"properties":{"receiverAddress":{"title":"The address into which the bridge will release the funds","type":"string"}},"title":"An extension of data required for the withdraw submissions","type":"object"},"vegaFee":{"properties":{"infrastructureFee":{"title":"Fee amount paid for maintaining the Vega infrastructure","type":"string"},"liquidityFee":{"title":"Fee amount paid to market makers","type":"string"},"makerFee":{"title":"Fee amount paid to the non-aggressive party of the trade","type":"string"}},"title":"Represents any fees paid by a party, resulting from a trade","type":"object"},"vegaFeeFactors":{"properties":{"infrastructureFee":{"title":"Infrastructure fee","type":"string"},"liquidityFee":{"title":"Liquidity fee","type":"string"},"makerFee":{"title":"Maker fee","type":"string"}},"title":"Fee factors definition","type":"object"},"vegaFees":{"properties":{"factors":{"$ref":"#/components/schemas/vegaFeeFactors","title":"Fee factors"}},"title":"Fees definition","type":"object"},"vegaFuture":{"properties":{"dataSourceSpecBinding":{"$ref":"#/components/schemas/vegaDataSourceSpecToFutureBinding","title":"The binding between the data spec and the data source"},"dataSourceSpecForSettlementData":{"$ref":"#/components/schemas/v1DataSourceSpec","title":"The data source specification that describes the settlement data source filter"},"dataSourceSpecForTradingTermination":{"$ref":"#/components/schemas/v1DataSourceSpec","title":"The data source specification that describes the trading termination data source filter"},"quoteName":{"title":"Quote name of the instrument","type":"string"},"settlementAsset":{"title":"The asset for the future","type":"string"},"settlementDataDecimals":{"format":"int64","title":"The number of decimal places implied by the settlement data (such as price) emitted by the settlement data source","type":"integer"}},"title":"Future product definition","type":"object"},"vegaFutureProduct":{"properties":{"dataSourceSpecBinding":{"$ref":"#/components/schemas/vegaDataSourceSpecToFutureBinding","title":"The binding between the data source spec and the settlement data"},"dataSourceSpecForSettlementData":{"$ref":"#/components/schemas/v1DataSourceSpecConfiguration","title":"The data source spec describing the data source for settlement"},"dataSourceSpecForTradingTermination":{"$ref":"#/components/schemas/v1DataSourceSpecConfiguration","title":"The external data source spec describing the data source of trading termination"},"quoteName":{"title":"Product quote name","type":"string"},"settlementAsset":{"title":"Asset ID for the product's settlement asset","type":"string"},"settlementDataDecimals":{"format":"int64","title":"The number of decimal places implied by the settlement data (such as price) emitted by the settlement data source","type":"integer"}},"title":"Future product configuration","type":"object"},"vegaGovernanceData":{"properties":{"no":{"items":{"$ref":"#/components/schemas/vegaVote"},"title":"All NO votes against the proposal above","type":"array"},"noParty":{"additionalProperties":{"$ref":"#/components/schemas/vegaVote"},"title":"All latest NO votes by party (guaranteed to be unique),\nwhere key (string) is the party ID (public key) and\nvalue (Vote) is the vote cast by the given party","type":"object"},"proposal":{"$ref":"#/components/schemas/vegaProposal","title":"The governance proposal"},"yes":{"items":{"$ref":"#/components/schemas/vegaVote"},"title":"All YES votes in favour of the proposal above","type":"array"},"yesParty":{"additionalProperties":{"$ref":"#/components/schemas/vegaVote"},"title":"All latest YES votes by party (guaranteed to be unique),\nwhere key (string) is the party ID (public key) and\nvalue (Vote) is the vote cast by the given party","type":"object"}},"title":"Governance data","type":"object"},"vegaInstrument":{"properties":{"code":{"title":"Code for the instrument","type":"string"},"future":{"$ref":"#/components/schemas/vegaFuture","title":"Future"},"id":{"title":"Instrument identifier","type":"string"},"metadata":{"$ref":"#/components/schemas/vegaInstrumentMetadata","title":"A collection of instrument meta-data"},"name":{"title":"Name of the instrument","type":"string"}},"title":"Instrument definition","type":"object"},"vegaInstrumentConfiguration":{"properties":{"code":{"title":"Instrument code, human-readable shortcode used to describe the instrument","type":"string"},"future":{"$ref":"#/components/schemas/vegaFutureProduct","title":"Future"},"name":{"title":"Instrument name","type":"string"}},"title":"Instrument configuration","type":"object"},"vegaInstrumentMetadata":{"properties":{"tags":{"items":{"type":"string"},"title":"A list of 0 or more tags","type":"array"}},"title":"Instrument metadata definition","type":"object"},"vegaInterval":{"default":"INTERVAL_UNSPECIFIED","description":"- INTERVAL_UNSPECIFIED: Default value, always invalid\n - INTERVAL_I1M: 1 minute.\n - INTERVAL_I5M: 5 minutes.\n - INTERVAL_I15M: 15 minutes.\n - INTERVAL_I1H: 1 hour.\n - INTERVAL_I6H: 6 hours.\n - INTERVAL_I1D: 1 day.","enum":["INTERVAL_UNSPECIFIED","INTERVAL_I1M","INTERVAL_I5M","INTERVAL_I15M","INTERVAL_I1H","INTERVAL_I6H","INTERVAL_I1D"],"title":"Represents a set of time intervals that are used when querying for candle-stick data","type":"string"},"vegaLedgerEntry":{"properties":{"amount":{"title":"An amount to transfer","type":"string"},"fromAccount":{"$ref":"#/components/schemas/vegaAccountDetails","title":"One or more accounts to transfer from"},"timestamp":{"format":"int64","title":"Timestamps","type":"string"},"toAccount":{"$ref":"#/components/schemas/vegaAccountDetails","title":"One or more accounts to transfer to"},"type":{"$ref":"#/components/schemas/vegaTransferType","title":"Transfer type for this entry"}},"title":"Represents a ledger entry on Vega","type":"object"},"vegaLedgerMovement":{"properties":{"balances":{"items":{"$ref":"#/components/schemas/vegaPostTransferBalance"},"type":"array"},"entries":{"items":{"$ref":"#/components/schemas/vegaLedgerEntry"},"type":"array"}},"type":"object"},"vegaLiquidityMonitoringParameters":{"properties":{"auctionExtension":{"format":"int64","title":"Specifies by how many seconds an auction should be extended if leaving the auction were to trigger a liquidity auction","type":"string"},"targetStakeParameters":{"$ref":"#/components/schemas/vegaTargetStakeParameters","title":"Specifies parameters related to target stake calculation"},"triggeringRatio":{"format":"double","title":"Specifies the triggering ratio for entering liquidity auction","type":"number"}},"title":"LiquidityMonitoringParameters contains settings used for liquidity monitoring","type":"object"},"vegaLiquidityOrder":{"properties":{"offset":{"title":"The offset/amount of units away for the order","type":"string"},"proportion":{"format":"int64","title":"The relative proportion of the commitment to be allocated at a price level","type":"integer"},"reference":{"$ref":"#/components/schemas/vegaPeggedReference","title":"The pegged reference point for the order"}},"title":"Represents a liquidity order","type":"object"},"vegaLiquidityOrderReference":{"properties":{"liquidityOrder":{"$ref":"#/components/schemas/vegaLiquidityOrder","title":"The liquidity order from the original submission"},"orderId":{"title":"Unique identifier of the pegged order generated by the core to fulfil this liquidity order","type":"string"}},"title":"A pair of a liquidity order and the ID of the generated order by the core","type":"object"},"vegaLiquidityProviderFeeShare":{"properties":{"averageEntryValuation":{"title":"The average entry valuation of the liquidity provider for the market","type":"string"},"equityLikeShare":{"title":"The share own by this liquidity provider (float)","type":"string"},"party":{"title":"The liquidity provider party id","type":"string"}},"title":"The equity like share of liquidity fee for each liquidity provider","type":"object"},"vegaLiquidityProvision":{"properties":{"buys":{"items":{"$ref":"#/components/schemas/vegaLiquidityOrderReference"},"title":"A set of liquidity buy orders to meet the liquidity provision obligation","type":"array"},"commitmentAmount":{"title":"Specified as a unitless number that represents the amount of settlement asset of the market","type":"string"},"createdAt":{"format":"int64","title":"Timestamp for when the order was created at, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"},"fee":{"title":"Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per seeting fees and rewarding liquidity providers","type":"string"},"id":{"title":"Unique identifier","type":"string"},"marketId":{"title":"Market identifier for the order, required field","type":"string"},"partyId":{"title":"Unique party identifier for the creator of the provision","type":"string"},"reference":{"title":"A reference shared between this liquidity provision and all its orders","type":"string"},"sells":{"items":{"$ref":"#/components/schemas/vegaLiquidityOrderReference"},"title":"A set of liquidity sell orders to meet the liquidity provision obligation","type":"array"},"status":{"$ref":"#/components/schemas/vegaLiquidityProvisionStatus","title":"Status of this liquidity provision order"},"updatedAt":{"format":"int64","title":"Timestamp for when the order was updated at, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"},"version":{"format":"uint64","title":"Version of this liquidity provision order","type":"string"}},"title":"An Liquidity provider commitment","type":"object"},"vegaLiquidityProvisionStatus":{"default":"STATUS_UNSPECIFIED","description":"- STATUS_UNSPECIFIED: The default value\n - STATUS_ACTIVE: The liquidity provision is active\n - STATUS_STOPPED: The liquidity provision was stopped by the network\n - STATUS_CANCELLED: The liquidity provision was cancelled by the liquidity provider\n - STATUS_REJECTED: The liquidity provision was invalid and got rejected\n - STATUS_UNDEPLOYED: The liquidity provision is valid and accepted by network, but orders aren't deployed\n - STATUS_PENDING: The liquidity provision is valid and accepted by network\nbut has never been deployed. If when it's possible to deploy the orders for the first time\nmargin check fails, then they will be cancelled without any penalties.","enum":["STATUS_UNSPECIFIED","STATUS_ACTIVE","STATUS_STOPPED","STATUS_CANCELLED","STATUS_REJECTED","STATUS_UNDEPLOYED","STATUS_PENDING"],"title":"Status of a liquidity provision order","type":"string"},"vegaLogNormalModelParams":{"properties":{"mu":{"format":"double","title":"Mu param","type":"number"},"r":{"format":"double","title":"R param","type":"number"},"sigma":{"format":"double","title":"Sigma param","type":"number"}},"title":"Risk model parameters for log normal","type":"object"},"vegaLogNormalRiskModel":{"properties":{"params":{"$ref":"#/components/schemas/vegaLogNormalModelParams","title":"Risk model parameters for log normal"},"riskAversionParameter":{"format":"double","title":"Risk Aversion Parameter","type":"number"},"tau":{"format":"double","title":"Tau","type":"number"}},"title":"Risk model for log normal","type":"object"},"vegaMarginCalculator":{"properties":{"scalingFactors":{"$ref":"#/components/schemas/vegaScalingFactors","title":"Scaling factors for margin calculation"}},"title":"Margin Calculator definition","type":"object"},"vegaMarginLevels":{"properties":{"asset":{"title":"Asset identifier","type":"string"},"collateralReleaseLevel":{"title":"Collateral release level value","type":"string"},"initialMargin":{"title":"Initial margin value","type":"string"},"maintenanceMargin":{"title":"Maintenance margin value","type":"string"},"marketId":{"title":"Market identifier","type":"string"},"partyId":{"title":"Party identifier","type":"string"},"searchLevel":{"title":"Search level value","type":"string"},"timestamp":{"format":"int64","title":"Timestamp for the time the ledger entry was created, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"}},"title":"Represents the margin levels for a party on a market at a given time","type":"object"},"vegaMarket":{"properties":{"decimalPlaces":{"format":"uint64","title":"Number of decimal places that a price must be shifted by in order to get a\ncorrect price denominated in the currency of the market, for example:\n`realPrice = price / 10^decimalPlaces`","type":"string"},"fees":{"$ref":"#/components/schemas/vegaFees","title":"Fees configuration"},"id":{"title":"Unique identifier","type":"string"},"liquidityMonitoringParameters":{"$ref":"#/components/schemas/vegaLiquidityMonitoringParameters","title":"LiquidityMonitoringParameters for the market"},"marketTimestamps":{"$ref":"#/components/schemas/vegaMarketTimestamps","title":"Timestamps for when the market stay changes"},"openingAuction":{"$ref":"#/components/schemas/vegaAuctionDuration","title":"Auction duration specifies how long the opening auction will run (minimum\nduration and optionally a minimum traded volume)"},"positionDecimalPlaces":{"format":"int64","title":"The number of decimal places for position","type":"string"},"priceMonitoringSettings":{"$ref":"#/components/schemas/vegaPriceMonitoringSettings","title":"PriceMonitoringSettings for the market"},"state":{"$ref":"#/components/schemas/vegaMarketState","title":"Current state of the market"},"tradableInstrument":{"$ref":"#/components/schemas/vegaTradableInstrument","title":"Tradable instrument configuration"},"tradingMode":{"$ref":"#/components/schemas/MarketTradingMode","title":"Current mode of execution of the market"}},"title":"Market definition","type":"object"},"vegaMarketData":{"properties":{"auctionEnd":{"format":"int64","title":"Time in seconds until the end of the auction (0 if currently not in auction period)","type":"string"},"auctionStart":{"format":"int64","title":"Time until next auction, or start time of the current auction if market is in auction period","type":"string"},"bestBidPrice":{"title":"Highest price level on an order book for buy orders, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"},"bestBidVolume":{"format":"uint64","title":"Aggregated volume being bid at the best bid price","type":"string"},"bestOfferPrice":{"title":"Lowest price level on an order book for offer orders","type":"string"},"bestOfferVolume":{"format":"uint64","title":"Aggregated volume being offered at the best offer price, as an integer, for example `123456` is a correctly\n // formatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"},"bestStaticBidPrice":{"title":"Highest price on the order book for buy orders not including pegged orders","type":"string"},"bestStaticBidVolume":{"format":"uint64","title":"Total volume at the best static bid price excluding pegged orders","type":"string"},"bestStaticOfferPrice":{"title":"Lowest price on the order book for sell orders not including pegged orders","type":"string"},"bestStaticOfferVolume":{"format":"uint64","title":"Total volume at the best static offer price excluding pegged orders","type":"string"},"extensionTrigger":{"$ref":"#/components/schemas/vegaAuctionTrigger","title":"When a market auction is extended, this field indicates what caused the extension"},"indicativePrice":{"title":"Indicative price (zero if not in auction)","type":"string"},"indicativeVolume":{"format":"uint64","title":"Indicative volume (zero if not in auction)","type":"string"},"liquidityProviderFeeShare":{"items":{"$ref":"#/components/schemas/vegaLiquidityProviderFeeShare"},"title":"the equity like share of liquidity fee for each liquidity provider","type":"array"},"markPrice":{"title":"Mark price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"},"market":{"title":"Market identifier for the data","type":"string"},"marketState":{"$ref":"#/components/schemas/vegaMarketState","title":"The current state of the market"},"marketTradingMode":{"$ref":"#/components/schemas/MarketTradingMode","title":"The current trading mode for the market"},"marketValueProxy":{"title":"the market value proxy","type":"string"},"midPrice":{"title":"Arithmetic average of the best bid price and best offer price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"},"openInterest":{"format":"uint64","title":"The sum of the size of all positions greater than 0 on the market","type":"string"},"priceMonitoringBounds":{"items":{"$ref":"#/components/schemas/vegaPriceMonitoringBounds"},"title":"One or more price monitoring bounds for the current timestamp","type":"array"},"staticMidPrice":{"title":"Arithmetic average of the best static bid price and best static offer price","type":"string"},"suppliedStake":{"title":"Available stake for the given market","type":"string"},"targetStake":{"title":"Targeted stake for the given market","type":"string"},"timestamp":{"format":"int64","title":"Timestamp at which this mark price was relevant, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"},"trigger":{"$ref":"#/components/schemas/vegaAuctionTrigger","title":"When a market is in an auction trading mode, this field indicates what triggered the auction"}},"title":"Represents data generated by a market when open","type":"object"},"vegaMarketDepth":{"properties":{"buy":{"items":{"$ref":"#/components/schemas/vegaPriceLevel"},"title":"Collection of price levels for the buy side of the book","type":"array"},"marketId":{"title":"Market identifier","type":"string"},"sell":{"items":{"$ref":"#/components/schemas/vegaPriceLevel"},"title":"Collection of price levels for the sell side of the book","type":"array"},"sequenceNumber":{"format":"uint64","title":"Sequence number for the market depth data returned","type":"string"}},"title":"Represents market depth or order book data for the specified market on Vega","type":"object"},"vegaMarketDepthUpdate":{"properties":{"buy":{"items":{"$ref":"#/components/schemas/vegaPriceLevel"},"title":"Collection of updated price levels for the buy side of the book","type":"array"},"marketId":{"title":"Market identifier","type":"string"},"previousSequenceNumber":{"description":"Sequence number of of the previous market depth update, for checking there are no gaps.","format":"uint64","type":"string"},"sell":{"items":{"$ref":"#/components/schemas/vegaPriceLevel"},"title":"Collection of updated price levels for the sell side of the book","type":"array"},"sequenceNumber":{"description":"Sequence number for the market depth update data returned. It is increasing but not monotonic.","format":"uint64","type":"string"}},"title":"Represents the changed market depth since the last update","type":"object"},"vegaMarketState":{"default":"STATE_UNSPECIFIED","description":"- STATE_UNSPECIFIED: Default value, invalid\n - STATE_PROPOSED: The Governance proposal valid and accepted\n - STATE_REJECTED: Outcome of governance votes is to reject the market\n - STATE_PENDING: Governance vote passes/wins\n - STATE_CANCELLED: Market triggers cancellation condition or governance\nvotes to close before market becomes Active\n - STATE_ACTIVE: Enactment date reached and usual auction exit checks pass\n - STATE_SUSPENDED: Price monitoring or liquidity monitoring trigger\n - STATE_CLOSED: Governance vote (to close)\n - STATE_TRADING_TERMINATED: Defined by the product (i.e. from a product parameter,\nspecified in market definition, giving close date/time)\n - STATE_SETTLED: Settlement triggered and completed as defined by product","enum":["STATE_UNSPECIFIED","STATE_PROPOSED","STATE_REJECTED","STATE_PENDING","STATE_CANCELLED","STATE_ACTIVE","STATE_SUSPENDED","STATE_CLOSED","STATE_TRADING_TERMINATED","STATE_SETTLED"],"title":"The current state of the Market","type":"string"},"vegaMarketTimestamps":{"properties":{"close":{"format":"int64","title":"Time when the market is closed","type":"string"},"open":{"format":"int64","title":"Time when the market has left the opening auction and is ready to accept trades","type":"string"},"pending":{"format":"int64","title":"Time when the market has been voted in and is created into an opening auction","type":"string"},"proposed":{"format":"int64","title":"Time when the market is first proposed","type":"string"}},"title":"Time stamps for important times about creating, enacting etc the market","type":"object"},"vegaNetworkLimits":{"properties":{"bootstrapBlockCount":{"format":"int64","title":"How many blocks before the chain comes out of bootstrap mode","type":"integer"},"bootstrapFinished":{"title":"True once block count > bootstrapBlockCount","type":"boolean"},"canProposeAsset":{"title":"Are asset proposals allowed at this point in time","type":"boolean"},"canProposeMarket":{"title":"Are market proposals allowed at this point in time","type":"boolean"},"genesisLoaded":{"title":"True once the genesis file is loaded","type":"boolean"},"proposeAssetEnabled":{"title":"Are asset proposals enabled on this chain","type":"boolean"},"proposeAssetEnabledFrom":{"format":"int64","title":"The date/timestamp in unix nanoseconds at which asset proposals will be enabled (0 indicates not set)","type":"string"},"proposeMarketEnabled":{"title":"Are market proposals enabled on this chain","type":"boolean"},"proposeMarketEnabledFrom":{"format":"int64","title":"The date/timestamp in unix nanoseconds at which market proposals will be enabled (0 indicates not set)","type":"string"}},"title":"Network limits, defined in the genesis file","type":"object"},"vegaNetworkParameter":{"properties":{"key":{"title":"The unique key","type":"string"},"value":{"title":"The value for the network parameter","type":"string"}},"title":"Represents a network parameter on Vega","type":"object"},"vegaNewAsset":{"properties":{"changes":{"$ref":"#/components/schemas/vegaAssetDetails","title":"The configuration of the new asset"}},"title":"New asset on Vega","type":"object"},"vegaNewFreeform":{"description":"Freeform proposal\nThis message is just used as a placeholder to sort out the nature of the\nproposal once parsed.","type":"object"},"vegaNewMarket":{"properties":{"changes":{"$ref":"#/components/schemas/vegaNewMarketConfiguration","title":"The configuration of the new market"}},"title":"New market on Vega","type":"object"},"vegaNewMarketConfiguration":{"properties":{"decimalPlaces":{"format":"uint64","title":"Decimal places used for the new market, sets the smallest price increment on the book","type":"string"},"instrument":{"$ref":"#/components/schemas/vegaInstrumentConfiguration","title":"New market instrument configuration"},"liquidityMonitoringParameters":{"$ref":"#/components/schemas/vegaLiquidityMonitoringParameters","title":"Liquidity monitoring parameters"},"logNormal":{"$ref":"#/components/schemas/vegaLogNormalRiskModel","title":"Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected"},"metadata":{"items":{"type":"string"},"title":"Optional new market meta data, tags","type":"array"},"positionDecimalPlaces":{"format":"int64","title":"Decimal places for order sizes, sets what size the smallest order / position on the market can be","type":"string"},"priceMonitoringParameters":{"$ref":"#/components/schemas/vegaPriceMonitoringParameters","title":"Price monitoring parameters"},"simple":{"$ref":"#/components/schemas/vegaSimpleModelParams","title":"Simple risk model parameters, valid only if MODEL_SIMPLE is selected"}},"title":"Configuration for a new market on Vega","type":"object"},"vegaNode":{"properties":{"avatarUrl":{"title":"Avatar url","type":"string"},"delegations":{"items":{"$ref":"#/components/schemas/vegaDelegation"},"title":"Node's delegations","type":"array"},"epochData":{"$ref":"#/components/schemas/vegaEpochData","title":"Information about epoch"},"ethereumAddress":{"title":"Ethereum public key of the node","type":"string"},"id":{"title":"The node ID (wallet ID)","type":"string"},"infoUrl":{"title":"URL where I can find out more info on the node","type":"string"},"location":{"title":"Country code for the location of the node","type":"string"},"maxIntendedStake":{"title":"Max amount of (wanted) stake, is this a network param or a node param","type":"string"},"name":{"title":"Node name","type":"string"},"pendingStake":{"title":"Amount of stake on the next epoch","type":"string"},"pubKey":{"title":"Pub key of the node operator","type":"string"},"rankingScore":{"$ref":"#/components/schemas/vegaRankingScore","title":"Node ranking information"},"rewardScore":{"$ref":"#/components/schemas/vegaRewardScore","title":"Node reward score"},"stakedByDelegates":{"title":"The amount of stake that has been delegated by token holders","type":"string"},"stakedByOperator":{"title":"The amount the node has put up themselves","type":"string"},"stakedTotal":{"title":"Total amount staked on node","type":"string"},"status":{"$ref":"#/components/schemas/vegaNodeStatus","title":"Node status"},"tmPubKey":{"title":"Public key of Tendermint","type":"string"}},"type":"object"},"vegaNodeData":{"properties":{"inactiveNodes":{"format":"int64","title":"Number of inactive nodes","type":"integer"},"stakedTotal":{"title":"Total staked amount across all nodes","type":"string"},"totalNodes":{"format":"int64","title":"Total number of nodes","type":"integer"},"uptime":{"format":"float","title":"Total uptime for all epochs across all nodes","type":"number"},"validatingNodes":{"format":"int64","title":"Number of nodes validating","type":"integer"}},"type":"object"},"vegaNodeStatus":{"default":"NODE_STATUS_UNSPECIFIED","description":"- NODE_STATUS_VALIDATOR: The node is validating\n - NODE_STATUS_NON_VALIDATOR: The node is non-validating","enum":["NODE_STATUS_UNSPECIFIED","NODE_STATUS_VALIDATOR","NODE_STATUS_NON_VALIDATOR"],"title":"Node status type","type":"string"},"vegaOrder":{"properties":{"batchId":{"format":"uint64","title":"Batch identifier for the order, used internally for orders submitted during auctions\nto keep track of the auction batch this order falls under (required for fees calculation)","type":"string"},"createdAt":{"format":"int64","title":"Timestamp for when the order was created at, in nanoseconds since the epoch","type":"string"},"expiresAt":{"format":"int64","title":"Timestamp for when the order will expire, in nanoseconds since the epoch","type":"string"},"id":{"title":"Unique identifier for the order (set by the system after consensus)","type":"string"},"liquidityProvisionId":{"description":"Is this order created as part of a liquidity provision, will be empty if not.","type":"string"},"marketId":{"title":"Market identifier for the order","type":"string"},"partyId":{"title":"Party identifier for the order","type":"string"},"peggedOrder":{"$ref":"#/components/schemas/vegaPeggedOrder","description":"Pegged order details, used only if the order represents a pegged order."},"price":{"title":"Price for the order, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"},"reason":{"$ref":"#/components/schemas/vegaOrderError","title":"If the Order `status` is `STATUS_REJECTED` then an OrderError reason will be specified\n- The default for this field is `ORDER_ERROR_NONE` which signifies that there were no errors"},"reference":{"title":"Reference given for the order, this is typically used to retrieve an order submitted through consensus\n- Currently set internally by the node to return a unique reference identifier for the order submission","type":"string"},"remaining":{"format":"uint64","title":"Size remaining, when this reaches 0 then the order is fully filled and status becomes STATUS_FILLED","type":"string"},"side":{"$ref":"#/components/schemas/vegaSide","title":"Side for the order, e.g. SIDE_BUY or SIDE_SELL"},"size":{"format":"uint64","title":"Size for the order, for example, in a futures market the size equals the number of contracts","type":"string"},"status":{"$ref":"#/components/schemas/vegaOrderStatus","title":"The current status for the order.\n- For detail on `STATUS_REJECTED` please check the OrderError value given in the `reason` field"},"timeInForce":{"$ref":"#/components/schemas/OrderTimeInForce","title":"Time in force indicates how long an order will remain active before it is executed or expires.\n- See OrderTimeInForce"},"type":{"$ref":"#/components/schemas/vegaOrderType","title":"Type for the order - See OrderType"},"updatedAt":{"format":"int64","title":"Timestamp for when the order was last updated, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"},"version":{"format":"uint64","title":"The version for the order, initial value is version 1 and is incremented after each successful amend","type":"string"}},"title":"An order can be submitted, amended and cancelled on Vega in an attempt to make trades with other parties","type":"object"},"vegaOrderError":{"default":"ORDER_ERROR_UNSPECIFIED","description":"- ORDER_ERROR_UNSPECIFIED: Default value, no error reported\n - ORDER_ERROR_INVALID_MARKET_ID: Order was submitted for a market that does not exist\n - ORDER_ERROR_INVALID_ORDER_ID: Order was submitted with an invalid identifier\n - ORDER_ERROR_OUT_OF_SEQUENCE: Order was amended with a sequence number that was not previous version + 1\n - ORDER_ERROR_INVALID_REMAINING_SIZE: Order was amended with an invalid remaining size (e.g. remaining greater than total size)\n - ORDER_ERROR_TIME_FAILURE: Node was unable to get Vega (blockchain) time\n - ORDER_ERROR_REMOVAL_FAILURE: Failed to remove an order from the book\n - ORDER_ERROR_INVALID_EXPIRATION_DATETIME: An order with `TimeInForce.TIME_IN_FORCE_GTT` was submitted or amended\nwith an expiration that was badly formatted or otherwise invalid\n - ORDER_ERROR_INVALID_ORDER_REFERENCE: Order was submitted or amended with an invalid reference field\n - ORDER_ERROR_EDIT_NOT_ALLOWED: Order amend was submitted for an order field that cannot not be amended (e.g. order identifier)\n - ORDER_ERROR_AMEND_FAILURE: Amend failure because amend details do not match original order\n - ORDER_ERROR_NOT_FOUND: Order not found in an order book or store\n - ORDER_ERROR_INVALID_PARTY_ID: Order was submitted with an invalid or missing party identifier\n - ORDER_ERROR_MARKET_CLOSED: Order was submitted for a market that has closed\n - ORDER_ERROR_MARGIN_CHECK_FAILED: Order was submitted, but the party did not have enough collateral to cover the order\n - ORDER_ERROR_MISSING_GENERAL_ACCOUNT: Order was submitted, but the party did not have an account for this asset\n - ORDER_ERROR_INTERNAL_ERROR: Unspecified internal error\n - ORDER_ERROR_INVALID_SIZE: Order was submitted with an invalid or missing size (e.g. 0)\n - ORDER_ERROR_INVALID_PERSISTENCE: Order was submitted with an invalid persistence for its type\n - ORDER_ERROR_INVALID_TYPE: Order was submitted with an invalid type field\n - ORDER_ERROR_SELF_TRADING: Order was stopped as it would have traded with another order submitted from the same party\n - ORDER_ERROR_INSUFFICIENT_FUNDS_TO_PAY_FEES: Order was submitted, but the party did not have enough collateral to cover the fees for the order\n - ORDER_ERROR_INCORRECT_MARKET_TYPE: Order was submitted with an incorrect or invalid market type\n - ORDER_ERROR_INVALID_TIME_IN_FORCE: Order was submitted with invalid time in force\n - ORDER_ERROR_CANNOT_SEND_GFN_ORDER_DURING_AN_AUCTION: A GFN order has got to the market when it is in auction mode\n - ORDER_ERROR_CANNOT_SEND_GFA_ORDER_DURING_CONTINUOUS_TRADING: A GFA order has got to the market when it is in continuous trading mode\n - ORDER_ERROR_CANNOT_AMEND_TO_GTT_WITHOUT_EXPIRYAT: Attempt to amend order to GTT without ExpiryAt\n - ORDER_ERROR_EXPIRYAT_BEFORE_CREATEDAT: Attempt to amend ExpiryAt to a value before CreatedAt\n - ORDER_ERROR_CANNOT_HAVE_GTC_AND_EXPIRYAT: Attempt to amend to GTC without an ExpiryAt value\n - ORDER_ERROR_CANNOT_AMEND_TO_FOK_OR_IOC: Amending to FOK or IOC is invalid\n - ORDER_ERROR_CANNOT_AMEND_TO_GFA_OR_GFN: Amending to GFA or GFN is invalid\n - ORDER_ERROR_CANNOT_AMEND_FROM_GFA_OR_GFN: Amending from GFA or GFN is invalid\n - ORDER_ERROR_CANNOT_SEND_IOC_ORDER_DURING_AUCTION: IOC orders are not allowed during auction\n - ORDER_ERROR_CANNOT_SEND_FOK_ORDER_DURING_AUCTION: FOK orders are not allowed during auction\n - ORDER_ERROR_MUST_BE_LIMIT_ORDER: Pegged orders must be LIMIT orders\n - ORDER_ERROR_MUST_BE_GTT_OR_GTC: Pegged orders can only have TIF GTC or GTT\n - ORDER_ERROR_WITHOUT_REFERENCE_PRICE: Pegged order must have a reference price\n - ORDER_ERROR_BUY_CANNOT_REFERENCE_BEST_ASK_PRICE: Buy pegged order cannot reference best ask price\n - ORDER_ERROR_OFFSET_MUST_BE_GREATER_OR_EQUAL_TO_ZERO: Pegged order offset must be >= 0\n - ORDER_ERROR_SELL_CANNOT_REFERENCE_BEST_BID_PRICE: Sell pegged order cannot reference best bid price\n - ORDER_ERROR_OFFSET_MUST_BE_GREATER_THAN_ZERO: Pegged order offset must be > zero\n - ORDER_ERROR_INSUFFICIENT_ASSET_BALANCE: The party has an insufficient balance, or does not have\na general account to submit the order (no deposits made\nfor the required asset)\n - ORDER_ERROR_CANNOT_AMEND_PEGGED_ORDER_DETAILS_ON_NON_PEGGED_ORDER: Cannot amend details of a non pegged details\n - ORDER_ERROR_UNABLE_TO_REPRICE_PEGGED_ORDER: Could not re-price a pegged order because a market price is unavailable\n - ORDER_ERROR_UNABLE_TO_AMEND_PRICE_ON_PEGGED_ORDER: It is not possible to amend the price of an existing pegged order\n - ORDER_ERROR_NON_PERSISTENT_ORDER_OUT_OF_PRICE_BOUNDS: An FOK, IOC, or GFN order was rejected because it resulted in trades outside the price bounds","enum":["ORDER_ERROR_UNSPECIFIED","ORDER_ERROR_INVALID_MARKET_ID","ORDER_ERROR_INVALID_ORDER_ID","ORDER_ERROR_OUT_OF_SEQUENCE","ORDER_ERROR_INVALID_REMAINING_SIZE","ORDER_ERROR_TIME_FAILURE","ORDER_ERROR_REMOVAL_FAILURE","ORDER_ERROR_INVALID_EXPIRATION_DATETIME","ORDER_ERROR_INVALID_ORDER_REFERENCE","ORDER_ERROR_EDIT_NOT_ALLOWED","ORDER_ERROR_AMEND_FAILURE","ORDER_ERROR_NOT_FOUND","ORDER_ERROR_INVALID_PARTY_ID","ORDER_ERROR_MARKET_CLOSED","ORDER_ERROR_MARGIN_CHECK_FAILED","ORDER_ERROR_MISSING_GENERAL_ACCOUNT","ORDER_ERROR_INTERNAL_ERROR","ORDER_ERROR_INVALID_SIZE","ORDER_ERROR_INVALID_PERSISTENCE","ORDER_ERROR_INVALID_TYPE","ORDER_ERROR_SELF_TRADING","ORDER_ERROR_INSUFFICIENT_FUNDS_TO_PAY_FEES","ORDER_ERROR_INCORRECT_MARKET_TYPE","ORDER_ERROR_INVALID_TIME_IN_FORCE","ORDER_ERROR_CANNOT_SEND_GFN_ORDER_DURING_AN_AUCTION","ORDER_ERROR_CANNOT_SEND_GFA_ORDER_DURING_CONTINUOUS_TRADING","ORDER_ERROR_CANNOT_AMEND_TO_GTT_WITHOUT_EXPIRYAT","ORDER_ERROR_EXPIRYAT_BEFORE_CREATEDAT","ORDER_ERROR_CANNOT_HAVE_GTC_AND_EXPIRYAT","ORDER_ERROR_CANNOT_AMEND_TO_FOK_OR_IOC","ORDER_ERROR_CANNOT_AMEND_TO_GFA_OR_GFN","ORDER_ERROR_CANNOT_AMEND_FROM_GFA_OR_GFN","ORDER_ERROR_CANNOT_SEND_IOC_ORDER_DURING_AUCTION","ORDER_ERROR_CANNOT_SEND_FOK_ORDER_DURING_AUCTION","ORDER_ERROR_MUST_BE_LIMIT_ORDER","ORDER_ERROR_MUST_BE_GTT_OR_GTC","ORDER_ERROR_WITHOUT_REFERENCE_PRICE","ORDER_ERROR_BUY_CANNOT_REFERENCE_BEST_ASK_PRICE","ORDER_ERROR_OFFSET_MUST_BE_GREATER_OR_EQUAL_TO_ZERO","ORDER_ERROR_SELL_CANNOT_REFERENCE_BEST_BID_PRICE","ORDER_ERROR_OFFSET_MUST_BE_GREATER_THAN_ZERO","ORDER_ERROR_INSUFFICIENT_ASSET_BALANCE","ORDER_ERROR_CANNOT_AMEND_PEGGED_ORDER_DETAILS_ON_NON_PEGGED_ORDER","ORDER_ERROR_UNABLE_TO_REPRICE_PEGGED_ORDER","ORDER_ERROR_UNABLE_TO_AMEND_PRICE_ON_PEGGED_ORDER","ORDER_ERROR_NON_PERSISTENT_ORDER_OUT_OF_PRICE_BOUNDS"],"title":"OrderError codes are returned in the `[Order](#vega.Order).reason` field - If there is an issue\nwith an order during its life-cycle, it will be marked with `status.ORDER_STATUS_REJECTED`","type":"string"},"vegaOrderStatus":{"default":"STATUS_UNSPECIFIED","description":"- STATUS_UNSPECIFIED: Default value, always invalid\n - STATUS_ACTIVE: Used for active unfilled or partially filled orders\n - STATUS_EXPIRED: Used for expired GTT orders\n - STATUS_CANCELLED: Used for orders cancelled by the party that created the order\n - STATUS_STOPPED: Used for unfilled FOK or IOC orders, and for orders that were stopped by the network\n - STATUS_FILLED: Used for closed fully filled orders\n - STATUS_REJECTED: Used for orders when not enough collateral was available to fill the margin requirements\n - STATUS_PARTIALLY_FILLED: Used for closed partially filled IOC orders\n - STATUS_PARKED: Order has been removed from the order book and has been parked, this applies to pegged orders only","enum":["STATUS_UNSPECIFIED","STATUS_ACTIVE","STATUS_EXPIRED","STATUS_CANCELLED","STATUS_STOPPED","STATUS_FILLED","STATUS_REJECTED","STATUS_PARTIALLY_FILLED","STATUS_PARKED"],"title":"Status values for an order","type":"string"},"vegaOrderType":{"default":"TYPE_UNSPECIFIED","description":"- TYPE_UNSPECIFIED: Default value, always invalid\n - TYPE_LIMIT: Used for Limit orders\n - TYPE_MARKET: Used for Market orders\n - TYPE_NETWORK: Used for orders where the initiating party is the network (with distressed parties)","enum":["TYPE_UNSPECIFIED","TYPE_LIMIT","TYPE_MARKET","TYPE_NETWORK"],"title":"Type values for an order","type":"string"},"vegaParty":{"properties":{"id":{"title":"A unique identifier for the party, typically represented by a public key","type":"string"}},"title":"A party represents an entity who wishes to trade on or query a Vega network","type":"object"},"vegaPeggedOrder":{"properties":{"offset":{"title":"Offset from the price reference","type":"string"},"reference":{"$ref":"#/components/schemas/vegaPeggedReference","title":"The price point the order is linked to"}},"title":"Pegged orders are limit orders where the price is specified in the form REFERENCE +/- OFFSET\nThey can be used for any limit order that is valid during continuous trading","type":"object"},"vegaPeggedReference":{"default":"PEGGED_REFERENCE_UNSPECIFIED","description":"- PEGGED_REFERENCE_UNSPECIFIED: Default value for PeggedReference, no reference given\n - PEGGED_REFERENCE_MID: Mid price reference\n - PEGGED_REFERENCE_BEST_BID: Best bid price reference\n - PEGGED_REFERENCE_BEST_ASK: Best ask price reference","enum":["PEGGED_REFERENCE_UNSPECIFIED","PEGGED_REFERENCE_MID","PEGGED_REFERENCE_BEST_BID","PEGGED_REFERENCE_BEST_ASK"],"title":"A pegged reference defines which price point a pegged order is linked to - meaning\nthe price for a pegged order is calculated from the value of the reference price point","type":"string"},"vegaPosition":{"properties":{"averageEntryPrice":{"title":"Average entry price for the position, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"},"marketId":{"title":"Market identifier","type":"string"},"openVolume":{"format":"int64","title":"Open volume for the position, value is signed +ve for long and -ve for short","type":"string"},"partyId":{"title":"Party identifier","type":"string"},"realisedPnl":{"title":"Realised profit and loss for the position, value is signed +ve for long and -ve for short","type":"string"},"unrealisedPnl":{"title":"Unrealised profit and loss for the position, value is signed +ve for long and -ve for short","type":"string"},"updatedAt":{"format":"int64","title":"Timestamp for the latest time the position was updated","type":"string"}},"title":"Represents position data for a party on the specified market on Vega","type":"object"},"vegaPostTransferBalance":{"properties":{"account":{"$ref":"#/components/schemas/vegaAccountDetails","title":"The account relating to the transfer"},"balance":{"title":"The balance relating to the transfer","type":"string"}},"title":"Represents the balance for an account during a transfer","type":"object"},"vegaPriceLevel":{"properties":{"numberOfOrders":{"format":"uint64","title":"Number of orders at the price level","type":"string"},"price":{"title":"Price for the price level, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"},"volume":{"format":"uint64","title":"Volume at the price level","type":"string"}},"title":"Represents a price level from market depth or order book data","type":"object"},"vegaPriceMonitoringBounds":{"properties":{"maxValidPrice":{"title":"Maximum price that isn't currently breaching the specified price monitoring trigger","type":"string"},"minValidPrice":{"title":"Minimum price that isn't currently breaching the specified price monitoring trigger","type":"string"},"referencePrice":{"title":"Reference price used to calculate the valid price range","type":"string"},"trigger":{"$ref":"#/components/schemas/vegaPriceMonitoringTrigger","title":"Price monitoring trigger associated with the bounds"}},"title":"Represents a list of valid (at the current timestamp) price ranges per associated trigger","type":"object"},"vegaPriceMonitoringParameters":{"properties":{"triggers":{"items":{"$ref":"#/components/schemas/vegaPriceMonitoringTrigger"},"type":"array"}},"title":"PriceMonitoringParameters contains a collection of triggers to be used for a given market","type":"object"},"vegaPriceMonitoringSettings":{"properties":{"parameters":{"$ref":"#/components/schemas/vegaPriceMonitoringParameters","title":"Specifies price monitoring parameters to be used for price monitoring purposes"}},"title":"PriceMonitoringSettings contains the settings for price monitoring","type":"object"},"vegaPriceMonitoringTrigger":{"properties":{"auctionExtension":{"format":"int64","title":"Price monitoring auction extension duration in seconds should the price\nbreach it's theoretical level over the specified horizon at the specified\nprobability level","type":"string"},"horizon":{"format":"int64","title":"Price monitoring projection horizon τ in seconds","type":"string"},"probability":{"title":"Price monitoring probability level p","type":"string"}},"title":"PriceMonitoringTrigger holds together price projection horizon τ, probability level p, and auction extension duration","type":"object"},"vegaProposal":{"properties":{"errorDetails":{"title":"The detailed error associated to the reason","type":"string"},"id":{"title":"Unique proposal identifier","type":"string"},"partyId":{"title":"Party identifier (public key) of the author (the party submitting the proposal)","type":"string"},"rationale":{"$ref":"#/components/schemas/vegaProposalRationale","title":"The rationale behind a proposal"},"reason":{"$ref":"#/components/schemas/vegaProposalError","title":"A reason for the current state of the proposal, this may be set in case of REJECTED and FAILED statuses"},"reference":{"title":"Proposal reference","type":"string"},"requiredLiquidityProviderMajority":{"title":"The require majority from liquidity providers, optional (required for market update proposal)","type":"string"},"requiredLiquidityProviderParticipation":{"title":"The required participation from liquidity providers, optional (required for market update proposal)","type":"string"},"requiredMajority":{"title":"The required majority for this proposal","type":"string"},"requiredParticipation":{"title":"The required vote participation for this proposal","type":"string"},"state":{"$ref":"#/components/schemas/vegaProposalState","title":"Proposal state - See (Proposal.State)[#vega.Proposal.State] definition"},"terms":{"$ref":"#/components/schemas/vegaProposalTerms","title":"Proposal configuration and the actual change that is meant to be executed when proposal is enacted"},"timestamp":{"format":"int64","title":"Proposal timestamp for date and time (in nanoseconds) when proposal was submitted to the network","type":"string"}},"title":"Governance proposal","type":"object"},"vegaProposalError":{"default":"PROPOSAL_ERROR_UNSPECIFIED","description":"- PROPOSAL_ERROR_UNSPECIFIED: Default value\n - PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON: The specified close time is too early based on network parameters\n - PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE: The specified close time is too late based on network parameters\n - PROPOSAL_ERROR_ENACT_TIME_TOO_SOON: The specified enactment time is too early based on network parameters\n - PROPOSAL_ERROR_ENACT_TIME_TOO_LATE: The specified enactment time is too late based on network parameters\n - PROPOSAL_ERROR_INSUFFICIENT_TOKENS: The proposer for this proposal has insufficient tokens\n - PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY: The instrument quote name and base name were the same\n - PROPOSAL_ERROR_NO_PRODUCT: The proposal has no product\n - PROPOSAL_ERROR_UNSUPPORTED_PRODUCT: The specified product is not supported\n - PROPOSAL_ERROR_NO_TRADING_MODE: The proposal has no trading mode\n - PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE: The proposal has an unsupported trading mode\n - PROPOSAL_ERROR_NODE_VALIDATION_FAILED: The proposal failed node validation\n - PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD: A field is missing in a builtin asset source\n - PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS: The contract address is missing in the ERC20 asset source\n - PROPOSAL_ERROR_INVALID_ASSET: The asset ID is invalid or does not exist on the Vega network\n - PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS: Proposal terms timestamps are not compatible (Validation < Closing < Enactment)\n - PROPOSAL_ERROR_NO_RISK_PARAMETERS: No risk parameters were specified\n - PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY: Invalid key in update network parameter proposal\n - PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE: Invalid value in update network parameter proposal\n - PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED: Validation failed for network parameter proposal\n - PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL: Opening auction duration is less than the network minimum opening auction time\n - PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE: Opening auction duration is more than the network minimum opening auction time\n - PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET: Market proposal market could not be instantiated in execution\n - PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT: Market proposal market contained invalid product definition\n - PROPOSAL_ERROR_INVALID_RISK_PARAMETER: Market proposal has invalid risk parameter\n - PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED: Proposal was declined because vote didn't reach the majority threshold required\n - PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED: Proposal declined because the participation threshold was not reached\n - PROPOSAL_ERROR_INVALID_ASSET_DETAILS: Asset proposal has invalid asset details\n - PROPOSAL_ERROR_UNKNOWN_TYPE: Proposal is an unknown type\n - PROPOSAL_ERROR_UNKNOWN_RISK_PARAMETER_TYPE: Proposal has an unknown risk parameter type\n - PROPOSAL_ERROR_INVALID_FREEFORM: Validation failed for freeform proposal\n - PROPOSAL_ERROR_INSUFFICIENT_EQUITY_LIKE_SHARE: The party doesn't have enough equity-like share to propose an update on the market\ntargeted by the proposal\n - PROPOSAL_ERROR_INVALID_MARKET: The market targeted by the proposal does not exist or is not eligible for modification\n - PROPOSAL_ERROR_TOO_MANY_MARKET_DECIMAL_PLACES: The market proposal decimal place is higher than the market settlement asset decimal places\n - PROPOSAL_ERROR_TOO_MANY_PRICE_MONITORING_TRIGGERS: The market proposal contains too many price monitoring triggers\n - PROPOSAL_ERROR_ERC20_ADDRESS_ALREADY_IN_USE: The market proposal contains too many price monitoring triggers","enum":["PROPOSAL_ERROR_UNSPECIFIED","PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON","PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE","PROPOSAL_ERROR_ENACT_TIME_TOO_SOON","PROPOSAL_ERROR_ENACT_TIME_TOO_LATE","PROPOSAL_ERROR_INSUFFICIENT_TOKENS","PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY","PROPOSAL_ERROR_NO_PRODUCT","PROPOSAL_ERROR_UNSUPPORTED_PRODUCT","PROPOSAL_ERROR_NO_TRADING_MODE","PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE","PROPOSAL_ERROR_NODE_VALIDATION_FAILED","PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD","PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS","PROPOSAL_ERROR_INVALID_ASSET","PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS","PROPOSAL_ERROR_NO_RISK_PARAMETERS","PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY","PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE","PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED","PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL","PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE","PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET","PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT","PROPOSAL_ERROR_INVALID_RISK_PARAMETER","PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED","PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED","PROPOSAL_ERROR_INVALID_ASSET_DETAILS","PROPOSAL_ERROR_UNKNOWN_TYPE","PROPOSAL_ERROR_UNKNOWN_RISK_PARAMETER_TYPE","PROPOSAL_ERROR_INVALID_FREEFORM","PROPOSAL_ERROR_INSUFFICIENT_EQUITY_LIKE_SHARE","PROPOSAL_ERROR_INVALID_MARKET","PROPOSAL_ERROR_TOO_MANY_MARKET_DECIMAL_PLACES","PROPOSAL_ERROR_TOO_MANY_PRICE_MONITORING_TRIGGERS","PROPOSAL_ERROR_ERC20_ADDRESS_ALREADY_IN_USE"],"title":"A list of possible errors that can cause a proposal to be in state rejected or failed","type":"string"},"vegaProposalRationale":{"description":"The rationale behind a proposal.","properties":{"description":{"description":"Description to show a short title / something in case the link goes offline.\nThis is to be between 0 and 20k unicode characters.\nThis is mandatory for all proposals.","type":"string"},"title":{"description":"Title to be used to give a short description of the proposal in lists.\nThis is to be between 0 and 100 unicode characters.\nThis is mandatory for all proposals.","type":"string"}},"type":"object"},"vegaProposalState":{"default":"STATE_UNSPECIFIED","description":"- STATE_UNSPECIFIED: Default value, always invalid\n - STATE_FAILED: Proposal enactment has failed - even though proposal has passed, its execution could not be performed\n - STATE_OPEN: Proposal is open for voting\n - STATE_PASSED: Proposal has gained enough support to be executed\n - STATE_REJECTED: Proposal wasn't accepted (proposal terms failed validation due to wrong configuration or failing to meet network requirements)\n - STATE_DECLINED: Proposal didn't get enough votes (either failing to gain required participation or majority level)\n - STATE_ENACTED: Proposal enacted\n - STATE_WAITING_FOR_NODE_VOTE: Waiting for node validation of the proposal","enum":["STATE_UNSPECIFIED","STATE_FAILED","STATE_OPEN","STATE_PASSED","STATE_REJECTED","STATE_DECLINED","STATE_ENACTED","STATE_WAITING_FOR_NODE_VOTE"],"title":"Proposal state transition:\nOpen ->\n  - Passed -> Enacted.\n  - Passed -> Failed.\n  - Declined\nRejected\nProposal can enter Failed state from any other state","type":"string"},"vegaProposalTerms":{"properties":{"closingTimestamp":{"format":"int64","title":"Timestamp (Unix time in seconds) when voting closes for this proposal,\nconstrained by `minClose` and `maxClose` network parameters","type":"string"},"enactmentTimestamp":{"format":"int64","title":"Timestamp (Unix time in seconds) when proposal gets enacted (if passed),\nconstrained by `minEnact` and `maxEnact` network parameters","type":"string"},"newAsset":{"$ref":"#/components/schemas/vegaNewAsset","title":"Proposal change for creating new assets on Vega"},"newFreeform":{"$ref":"#/components/schemas/vegaNewFreeform","title":"Proposal change for a freeform request, which can be voted on but does not change the behaviour of the system,\nand can be used to gauge community sentiment"},"newMarket":{"$ref":"#/components/schemas/vegaNewMarket","title":"Proposal change for creating new market on Vega"},"updateAsset":{"$ref":"#/components/schemas/vegaUpdateAsset","title":"Proposal change for updating an asset"},"updateMarket":{"$ref":"#/components/schemas/vegaUpdateMarket","title":"Proposal change for modifying an existing market on Vega"},"updateNetworkParameter":{"$ref":"#/components/schemas/vegaUpdateNetworkParameter","title":"Proposal change for updating Vega network parameters"},"validationTimestamp":{"format":"int64","title":"Validation timestamp (Unix time in seconds)","type":"string"}},"title":"Terms for a governance proposal on Vega","type":"object"},"vegaRankingScore":{"properties":{"performanceScore":{"title":"performance based score","type":"string"},"previousStatus":{"$ref":"#/components/schemas/vegaValidatorNodeStatus","title":"the status of the validator in the previous epoch"},"rankingScore":{"title":"final score","type":"string"},"stakeScore":{"title":"stake based score - no anti-whaling","type":"string"},"status":{"$ref":"#/components/schemas/vegaValidatorNodeStatus","title":"the status of the validator in the current epoch"},"votingPower":{"format":"int64","title":"tendermint voting power of the validator","type":"integer"}},"type":"object"},"vegaReward":{"properties":{"amount":{"type":"string"},"assetId":{"type":"string"},"epoch":{"format":"uint64","type":"string"},"marketId":{"type":"string"},"partyId":{"type":"string"},"percentageOfTotal":{"type":"string"},"receivedAt":{"format":"int64","type":"string"},"rewardType":{"type":"string"}},"title":"Details for a single reward payment","type":"object"},"vegaRewardScore":{"properties":{"multisigScore":{"title":"multisig score","type":"string"},"normalisedScore":{"title":"normalised validator score for rewards","type":"string"},"performanceScore":{"title":"performance based score","type":"string"},"rawValidatorScore":{"title":"stake based score - with anti-whaling","type":"string"},"validatorScore":{"title":"un-normalised score","type":"string"},"validatorStatus":{"$ref":"#/components/schemas/vegaValidatorNodeStatus","title":"the status of the validator for reward"}},"type":"object"},"vegaRewardSummary":{"properties":{"amount":{"title":"Total amount of rewards for the asset","type":"string"},"assetId":{"type":"string"},"partyId":{"type":"string"}},"title":"Details for rewards for a single asset","type":"object"},"vegaRiskFactor":{"properties":{"long":{"title":"Long Risk factor value","type":"string"},"market":{"title":"Market ID that relates to this risk factor","type":"string"},"short":{"title":"Short Risk factor value","type":"string"}},"title":"Risk factors are used to calculate the current risk associated with orders trading on a given market","type":"object"},"vegaScalingFactors":{"properties":{"collateralRelease":{"format":"double","title":"Collateral release level","type":"number"},"initialMargin":{"format":"double","title":"Initial margin level","type":"number"},"searchLevel":{"format":"double","title":"Search level","type":"number"}},"title":"Scaling Factors (for use in margin calculation)","type":"object"},"vegaSide":{"default":"SIDE_UNSPECIFIED","description":"- SIDE_UNSPECIFIED: Default value, always invalid\n - SIDE_BUY: Buy order\n - SIDE_SELL: Sell order","enum":["SIDE_UNSPECIFIED","SIDE_BUY","SIDE_SELL"],"title":"A side relates to the direction of an order, to Buy, or Sell","type":"string"},"vegaSimpleModelParams":{"properties":{"factorLong":{"format":"double","title":"Pre-defined risk factor value for long","type":"number"},"factorShort":{"format":"double","title":"Pre-defined risk factor value for short","type":"number"},"maxMoveUp":{"format":"double","title":"Pre-defined maximum price move up that the model considers as valid","type":"number"},"minMoveDown":{"format":"double","title":"Pre-defined minimum price move down that the model considers as valid","type":"number"},"probabilityOfTrading":{"format":"double","title":"Pre-defined constant probability of trading","type":"number"}},"title":"Risk model parameters for simple modelling","type":"object"},"vegaSimpleRiskModel":{"properties":{"params":{"$ref":"#/components/schemas/vegaSimpleModelParams","title":"Risk model params for simple modelling"}},"title":"Risk model for simple modelling","type":"object"},"vegaTargetStakeParameters":{"properties":{"scalingFactor":{"format":"double","title":"Specifies scaling factors used in target stake calculation","type":"number"},"timeWindow":{"format":"int64","title":"Specifies length of time window expressed in seconds for target stake calculation","type":"string"}},"title":"TargetStakeParameters contains parameters used in target stake calculation","type":"object"},"vegaTradableInstrument":{"properties":{"instrument":{"$ref":"#/components/schemas/vegaInstrument","title":"Instrument details"},"logNormalRiskModel":{"$ref":"#/components/schemas/vegaLogNormalRiskModel","title":"Log normal"},"marginCalculator":{"$ref":"#/components/schemas/vegaMarginCalculator","title":"Margin calculator for the instrument"},"simpleRiskModel":{"$ref":"#/components/schemas/vegaSimpleRiskModel","title":"Simple"}},"title":"Tradable Instrument definition","type":"object"},"vegaTrade":{"properties":{"aggressor":{"$ref":"#/components/schemas/vegaSide","title":"Direction of the aggressive party e.g. SIDE_BUY or SIDE_SELL - See [`Side`](#vega.Side)"},"buyOrder":{"title":"Identifier of the order from the buy side","type":"string"},"buyer":{"title":"Unique party identifier for the buyer","type":"string"},"buyerAuctionBatch":{"format":"uint64","title":"Auction batch number that the buy side order was placed in","type":"string"},"buyerFee":{"$ref":"#/components/schemas/vegaFee","title":"Fee amount charged to the buyer party for the trade"},"id":{"title":"Unique identifier for the trade (generated by Vega)","type":"string"},"marketId":{"title":"Market identifier (the market that the trade occurred on)","type":"string"},"price":{"title":"Price for the trade, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"},"sellOrder":{"title":"Identifier of the order from the sell side","type":"string"},"seller":{"title":"Unique party identifier for the seller","type":"string"},"sellerAuctionBatch":{"format":"uint64","title":"Auction batch number that the sell side order was placed in","type":"string"},"sellerFee":{"$ref":"#/components/schemas/vegaFee","title":"Fee amount charged to the seller party for the trade"},"size":{"format":"uint64","title":"Size filled for the trade","type":"string"},"timestamp":{"format":"int64","title":"Timestamp for when the trade occurred, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`","type":"string"},"type":{"$ref":"#/components/schemas/vegaTradeType","title":"Type for the trade - See [`Trade.Type`](#vega.Trade.Type)"}},"title":"A trade occurs when an aggressive order crosses one or more passive orders on the order book for a market on Vega","type":"object"},"vegaTradeType":{"default":"TYPE_UNSPECIFIED","description":"- TYPE_UNSPECIFIED: Default value, always invalid\n - TYPE_DEFAULT: Normal trading between two parties\n - TYPE_NETWORK_CLOSE_OUT_GOOD: Trading initiated by the network with another party on the book,\nwhich helps to zero-out the positions of one or more distressed parties\n - TYPE_NETWORK_CLOSE_OUT_BAD: Trading initiated by the network with another party off the book,\nwith a distressed party in order to zero-out the position of the party","enum":["TYPE_UNSPECIFIED","TYPE_DEFAULT","TYPE_NETWORK_CLOSE_OUT_GOOD","TYPE_NETWORK_CLOSE_OUT_BAD"],"title":"Type values for a trade","type":"string"},"vegaTransferType":{"default":"TRANSFER_TYPE_UNSPECIFIED","description":"- TRANSFER_TYPE_UNSPECIFIED: Default value, always invalid\n - TRANSFER_TYPE_LOSS: Loss\n - TRANSFER_TYPE_WIN: Win\n - TRANSFER_TYPE_CLOSE: Close\n - TRANSFER_TYPE_MTM_LOSS: Mark to market loss\n - TRANSFER_TYPE_MTM_WIN: Mark to market win\n - TRANSFER_TYPE_MARGIN_LOW: Margin too low\n - TRANSFER_TYPE_MARGIN_HIGH: Margin too high\n - TRANSFER_TYPE_MARGIN_CONFISCATED: Margin was confiscated\n - TRANSFER_TYPE_MAKER_FEE_PAY: Pay maker fee\n - TRANSFER_TYPE_MAKER_FEE_RECEIVE: Receive maker fee\n - TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY: Pay infrastructure fee\n - TRANSFER_TYPE_INFRASTRUCTURE_FEE_DISTRIBUTE: Receive infrastructure fee\n - TRANSFER_TYPE_LIQUIDITY_FEE_PAY: Pay liquidity fee\n - TRANSFER_TYPE_LIQUIDITY_FEE_DISTRIBUTE: Receive liquidity fee\n - TRANSFER_TYPE_BOND_LOW: Bond too low\n - TRANSFER_TYPE_BOND_HIGH: Bond too high\n - TRANSFER_TYPE_WITHDRAW_LOCK: Lock amount for withdraw\n - TRANSFER_TYPE_WITHDRAW: Actual withdraw from system\n - TRANSFER_TYPE_DEPOSIT: Deposit funds\n - TRANSFER_TYPE_BOND_SLASHING: Bond slashing\n - TRANSFER_TYPE_STAKE_REWARD: Stake reward\n - TRANSFER_TYPE_TRANSFER_FUNDS_SEND: A network internal instruction for the collateral engine to move funds from a user account onto the pending transfers pool\n - TRANSFER_TYPE_TRANSFER_FUNDS_DISTRIBUTE: A network internal instruction for the collateral engine to move funds from the pending transfers pool account onto the destination account\n - TRANSFER_TYPE_CLEAR_ACCOUNT: Market is closed, accounts are cleared\n - TRANSFER_TYPE_CHECKPOINT_BALANCE_RESTORE: Restore a balance from a checkpoint","enum":["TRANSFER_TYPE_UNSPECIFIED","TRANSFER_TYPE_LOSS","TRANSFER_TYPE_WIN","TRANSFER_TYPE_CLOSE","TRANSFER_TYPE_MTM_LOSS","TRANSFER_TYPE_MTM_WIN","TRANSFER_TYPE_MARGIN_LOW","TRANSFER_TYPE_MARGIN_HIGH","TRANSFER_TYPE_MARGIN_CONFISCATED","TRANSFER_TYPE_MAKER_FEE_PAY","TRANSFER_TYPE_MAKER_FEE_RECEIVE","TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY","TRANSFER_TYPE_INFRASTRUCTURE_FEE_DISTRIBUTE","TRANSFER_TYPE_LIQUIDITY_FEE_PAY","TRANSFER_TYPE_LIQUIDITY_FEE_DISTRIBUTE","TRANSFER_TYPE_BOND_LOW","TRANSFER_TYPE_BOND_HIGH","TRANSFER_TYPE_WITHDRAW_LOCK","TRANSFER_TYPE_WITHDRAW","TRANSFER_TYPE_DEPOSIT","TRANSFER_TYPE_BOND_SLASHING","TRANSFER_TYPE_STAKE_REWARD","TRANSFER_TYPE_TRANSFER_FUNDS_SEND","TRANSFER_TYPE_TRANSFER_FUNDS_DISTRIBUTE","TRANSFER_TYPE_CLEAR_ACCOUNT","TRANSFER_TYPE_CHECKPOINT_BALANCE_RESTORE"],"title":"Transfers can occur between parties on Vega, these are the types that indicate why a transfer took place","type":"string"},"vegaUpdateAsset":{"properties":{"assetId":{"title":"The ID of the asset to be updated","type":"string"},"changes":{"$ref":"#/components/schemas/vegaAssetDetailsUpdate","title":"The changes to apply on an existing asset"}},"title":"Update an existing asset on Vega","type":"object"},"vegaUpdateFutureProduct":{"properties":{"dataSourceSpecBinding":{"$ref":"#/components/schemas/vegaDataSourceSpecToFutureBinding","title":"The binding between the data source spec and the settlement data"},"dataSourceSpecForSettlementData":{"$ref":"#/components/schemas/v1DataSourceSpecConfiguration","title":"The data source spec describing the data of settlement data"},"dataSourceSpecForTradingTermination":{"$ref":"#/components/schemas/v1DataSourceSpecConfiguration","title":"The data source spec describing the data source for trading termination"},"quoteName":{"title":"Human-readable name/abbreviation of the quote name","type":"string"},"settlementDataDecimals":{"format":"int64","title":"The number of decimal places implied by the settlement data (such as price) emitted by the settlement external data source","type":"integer"}},"title":"Future product configuration","type":"object"},"vegaUpdateInstrumentConfiguration":{"properties":{"code":{"title":"Instrument code, human-readable shortcode used to describe the instrument","type":"string"},"future":{"$ref":"#/components/schemas/vegaUpdateFutureProduct","title":"Future"}},"title":"Instrument configuration","type":"object"},"vegaUpdateMarket":{"properties":{"changes":{"$ref":"#/components/schemas/vegaUpdateMarketConfiguration","title":"The updated configuration of the market"},"marketId":{"title":"The identifier of the market to update","type":"string"}},"title":"Update an existing market on Vega","type":"object"},"vegaUpdateMarketConfiguration":{"properties":{"instrument":{"$ref":"#/components/schemas/vegaUpdateInstrumentConfiguration","title":"Updated market instrument configuration"},"liquidityMonitoringParameters":{"$ref":"#/components/schemas/vegaLiquidityMonitoringParameters","title":"Liquidity monitoring parameters"},"logNormal":{"$ref":"#/components/schemas/vegaLogNormalRiskModel","title":"Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected"},"metadata":{"items":{"type":"string"},"title":"Optional market metadata, tags","type":"array"},"priceMonitoringParameters":{"$ref":"#/components/schemas/vegaPriceMonitoringParameters","title":"Price monitoring parameters"},"simple":{"$ref":"#/components/schemas/vegaSimpleModelParams","title":"Simple risk model parameters, valid only if MODEL_SIMPLE is selected"}},"title":"Configuration to update a market on Vega","type":"object"},"vegaUpdateNetworkParameter":{"properties":{"changes":{"$ref":"#/components/schemas/vegaNetworkParameter","title":"The network parameter to update"}},"title":"Update network configuration on Vega","type":"object"},"vegaValidatorNodeStatus":{"default":"VALIDATOR_NODE_STATUS_UNSPECIFIED","description":"- VALIDATOR_NODE_STATUS_TENDERMINT: The node is a tendermint validator\n - VALIDATOR_NODE_STATUS_ERSATZ: The node is an ersatz validator\n - VALIDATOR_NODE_STATUS_PENDING: The node is a pending validator","enum":["VALIDATOR_NODE_STATUS_UNSPECIFIED","VALIDATOR_NODE_STATUS_TENDERMINT","VALIDATOR_NODE_STATUS_ERSATZ","VALIDATOR_NODE_STATUS_PENDING"],"title":"Validation status of the node","type":"string"},"vegaVote":{"properties":{"partyId":{"title":"Voter's party identifier","type":"string"},"proposalId":{"title":"Identifier of the proposal being voted on","type":"string"},"timestamp":{"format":"int64","title":"Vote timestamp for date and time (in nanoseconds) when vote was submitted to the network","type":"string"},"totalEquityLikeShareWeight":{"description":"The weight of the vote compared to the total number of equity-like share on the market.","type":"string"},"totalGovernanceTokenBalance":{"title":"Total number of governance token for the party that casted the vote","type":"string"},"totalGovernanceTokenWeight":{"title":"The weight of this vote based on the total of governance token","type":"string"},"value":{"$ref":"#/components/schemas/VoteValue","title":"Actual vote"}},"title":"Governance vote","type":"object"},"vegaWithdrawExt":{"properties":{"erc20":{"$ref":"#/components/schemas/vegaErc20WithdrawExt","title":"ERC20 withdrawal details"}},"title":"Withdrawal external details","type":"object"},"vegaWithdrawal":{"properties":{"amount":{"title":"The amount to be withdrawn","type":"string"},"asset":{"title":"The asset to withdraw funds from","type":"string"},"createdTimestamp":{"format":"int64","title":"Timestamp for when the network started to process this withdrawal","type":"string"},"expiry":{"format":"int64","title":"The time until when the withdrawal is valid","type":"string"},"ext":{"$ref":"#/components/schemas/vegaWithdrawExt","title":"Foreign chain specifics"},"id":{"title":"Unique identifier for the withdrawal","type":"string"},"partyId":{"title":"Unique party identifier of the user initiating the withdrawal","type":"string"},"ref":{"title":"The reference which is used by the foreign chain\nto refer to this withdrawal","type":"string"},"status":{"$ref":"#/components/schemas/vegaWithdrawalStatus","title":"The status of the withdrawal"},"txHash":{"title":"The hash of the foreign chain for this transaction","type":"string"},"withdrawnTimestamp":{"format":"int64","title":"Timestamp for when the withdrawal was finalised by the network","type":"string"}},"title":"A withdrawal from the Vega network","type":"object"},"vegaWithdrawalStatus":{"default":"STATUS_UNSPECIFIED","description":"- STATUS_UNSPECIFIED: Default value, always invalid\n - STATUS_OPEN: The withdrawal is open and being processed by the network\n - STATUS_REJECTED: The withdrawal have been cancelled\n - STATUS_FINALIZED: The withdrawal went through and is fully finalised, the funds are removed from the\nVega network and are unlocked on the foreign chain bridge, for example, on the Ethereum network","enum":["STATUS_UNSPECIFIED","STATUS_OPEN","STATUS_REJECTED","STATUS_FINALIZED"],"title":"The status of the withdrawal","type":"string"},"vegacommandsv1OneOffTransfer":{"properties":{"deliverOn":{"format":"int64","title":"A unix timestamp in second. Time at which the\ntransfer should be delivered in the to account","type":"string"}},"title":"Specific details for a one off transfer","type":"object"},"vegacommandsv1RecurringTransfer":{"properties":{"dispatchStrategy":{"$ref":"#/components/schemas/vegaDispatchStrategy","title":"optional parameter defining how a transfer is dispatched"},"endEpoch":{"format":"uint64","title":"The last epoch at which this transfer shall be paid","type":"string"},"factor":{"title":"factor needs to be > 0","type":"string"},"startEpoch":{"format":"uint64","title":"The first epoch from which this transfer shall be paid","type":"string"}},"title":"Specific details for a recurring transfer","type":"object"},"vegacommandsv1Transfer":{"properties":{"amount":{"title":"The amount to be taken from the source account","type":"string"},"asset":{"title":"The asset","type":"string"},"fromAccountType":{"$ref":"#/components/schemas/vegaAccountType","title":"The account type from which the funds of the party\nshould be taken"},"oneOff":{"$ref":"#/components/schemas/vegacommandsv1OneOffTransfer"},"recurring":{"$ref":"#/components/schemas/vegacommandsv1RecurringTransfer"},"reference":{"title":"The reference to be attached to the transfer","type":"string"},"to":{"title":"The public key of the destination account","type":"string"},"toAccountType":{"$ref":"#/components/schemas/vegaAccountType","title":"The type of the destination account"}},"title":"A transfer initiated by a party","type":"object"},"vegaeventsv1KeyRotation":{"properties":{"blockHeight":{"format":"uint64","title":"Height of the block where key rotation took effect","type":"string"},"newPubKey":{"title":"New Vega public key of validator node","type":"string"},"nodeId":{"title":"Node id of the node","type":"string"},"oldPubKey":{"title":"Old Vega public key of validator node","type":"string"}},"title":"A key rotation events contains information about Vega key rotation","type":"object"},"vegaeventsv1OneOffTransfer":{"properties":{"deliverOn":{"format":"int64","type":"string"}},"type":"object"},"vegaeventsv1RecurringTransfer":{"properties":{"dispatchStrategy":{"$ref":"#/components/schemas/vegaDispatchStrategy"},"endEpoch":{"format":"uint64","type":"string"},"factor":{"type":"string"},"startEpoch":{"format":"uint64","type":"string"}},"type":"object"},"vegaeventsv1Transfer":{"properties":{"amount":{"type":"string"},"asset":{"type":"string"},"from":{"type":"string"},"fromAccountType":{"$ref":"#/components/schemas/vegaAccountType"},"id":{"type":"string"},"oneOff":{"$ref":"#/components/schemas/vegaeventsv1OneOffTransfer"},"reason":{"type":"string"},"recurring":{"$ref":"#/components/schemas/vegaeventsv1RecurringTransfer"},"reference":{"type":"string"},"status":{"$ref":"#/components/schemas/v1TransferStatus"},"timestamp":{"format":"int64","type":"string"},"to":{"type":"string"},"toAccountType":{"$ref":"#/components/schemas/vegaAccountType"}},"type":"object"}}},"tags":[{"name":"Trading Data Service (v1)"}]}